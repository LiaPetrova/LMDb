{"version":3,"file":"static/js/360.e3628317.chunk.js","mappings":"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","sources":["pages/Admin/EditShow/EditShow.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useShowsContext } from \"../../../contexts/ShowsConext\";\r\nimport { editShow, getOne } from \"../../../services/showsService\";\r\n\r\n\r\nconst EditShow = () => {\r\n    const { showId, type } = useParams();\r\n    const [show, setShow] = useState({});\r\n    const [values, setValues] = useState({\r\n        type: '',\r\n        title: '',\r\n        year: 0,\r\n        desc: '',\r\n        duration: 0,\r\n        director: ''\r\n    });\r\n    const [imageList, setImageList] = useState(['']);\r\n    const [actorsList, setActorsList] = useState([{ fullName: '', roleName: '', imageUrl: '', wikiUrl: '' }]);\r\n    const [genreList, setGenreList] = useState(['']);\r\n    const navigate = useNavigate();\r\n    const { showEdit } = useShowsContext();\r\n\r\n    useEffect(() => {\r\n        getOne(showId, type)\r\n            .then(result => {\r\n                setShow(result.fields);\r\n                setGenreList(result.fields.genreList);\r\n                setActorsList(result.fields.actorsList);\r\n                setImageList(result.fields.imageList);\r\n                setValues({\r\n                    type: result.fields.type,\r\n                    title: result.fields.title,\r\n                    year: result.fields.year,\r\n                    desc: result.fields.desc,\r\n                    duration: result.fields.duration,\r\n                    director: result.fields.director\r\n\r\n                });\r\n            });\r\n\r\n\r\n    }, [showId, type]);\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'movieImgUrl') {\r\n            const list = [...imageList];\r\n            list[index] = value;\r\n            setImageList(list);\r\n        } else if (name === 'genre') {\r\n            const list = [...genreList];\r\n            list[index] = value;\r\n            setGenreList(list);\r\n        } else {\r\n            const list = [...actorsList];\r\n            list[index][name] = value;\r\n            setActorsList(list);\r\n        }\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = (e, index, inputName) => {\r\n        e.preventDefault();\r\n        if (inputName === 'movie') {\r\n            const list = [...imageList];\r\n            list.splice(index, 1);\r\n            setImageList(list);\r\n        } else if (inputName === 'actor') {\r\n            const list = [...actorsList];\r\n            list.splice(index, 1);\r\n            setActorsList(list);\r\n        } else if (inputName === 'genre') {\r\n            const list = [...genreList];\r\n            list.splice(index, 1);\r\n            setGenreList(list);\r\n        }\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClick = (e, inputName) => {\r\n        e.preventDefault();\r\n        if (inputName === 'movie') {\r\n            setImageList([...imageList, '']);\r\n        } else if (inputName === 'actor') {\r\n            setActorsList([...actorsList, { fullName: '', roleName: '', imageUrl: '', wikiUrl: '' }])\r\n        } else if (inputName === 'genre') {\r\n            setGenreList([...genreList, '']);\r\n        }\r\n    };\r\n\r\n    const handleSimpleInputChange = (e) => {\r\n        setValues(state => ({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        }));\r\n        // console.log(values);\r\n    };\r\n\r\n    const editHandler = (e) => {\r\n        e.preventDefault();\r\n        let { type, title, year, desc, duration, director } = values;\r\n        year = Number(year);\r\n        duration = Number(duration);\r\n        const showData = { type, title, year, duration, director, desc, imageList, actorsList, genreList };\r\n        if (type === 'Movie') {\r\n            editShow('Movie', showId, showData)\r\n                .then(result => {\r\n                    showEdit(showId, { id: showId, fields: { ...show, ...showData } }, type)\r\n                });\r\n        } else {\r\n            editShow('Series', showId, showData)\r\n            .then(result => {\r\n                showEdit(showId, { id: showId, fields: { ...show, ...showData } }, type)\r\n            });\r\n        }\r\n        navigate(`/catalog/${type}/${showId}`);\r\n        console.log(JSON.stringify(showData));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <section action=\"\" className={'form-section'}>\r\n            <h2 className='heading'>Edit show</h2>\r\n            <form action=\"\" className='form' onSubmit={editHandler}>\r\n                <div className='input-box'>\r\n                    <div className='label'>Type of show</div>\r\n                    <div>\r\n                        <input\r\n                            className='input-radio'\r\n                            type=\"radio\"\r\n                            id='movie'\r\n                            name='type'\r\n                            onChange={handleSimpleInputChange}\r\n                            checked={values.type === 'Movie'}\r\n\r\n                        />\r\n                        <label htmlFor=\"movie\">Movie</label>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className='input-radio'\r\n                            type=\"radio\"\r\n                            id='series'\r\n                            name='type'\r\n                            onChange={handleSimpleInputChange}\r\n                            checked={values.type === 'Series'}\r\n\r\n                        />\r\n                        <label htmlFor=\"series\">Series</label>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className='input-box'>\r\n                    <label className='label' htmlFor=\"title\">Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name='title'\r\n                        id='title'\r\n                        className='input'\r\n                        onChange={handleSimpleInputChange}\r\n                        // defaultValue={show.title}\r\n                        value={values.title}\r\n                        required\r\n\r\n                    />\r\n                    <div className='input-box'>\r\n                        <label className='label' htmlFor=\"year\">Year</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name='year'\r\n                            id='year'\r\n                            className='input'\r\n                            onChange={handleSimpleInputChange}\r\n                            value={values.year}\r\n                            required\r\n\r\n                        />\r\n                    </div>\r\n                    <div className='input-box'>\r\n                        <label className='label' htmlFor=\"duration\">Duration</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name='duration'\r\n                            id='duration'\r\n                            className='input'\r\n                            onChange={handleSimpleInputChange}\r\n                            value={values.duration}\r\n                            required\r\n\r\n                        />\r\n                    </div>\r\n                    <div className='input-box'>\r\n                        <label className='label' htmlFor=\"director\">Director</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name='director'\r\n                            id='director'\r\n                            className='input'\r\n                            onChange={handleSimpleInputChange}\r\n                            value={values.director}\r\n                            required\r\n\r\n                        />\r\n                    </div>\r\n                    <div className='input-box'>\r\n                        <label className='label' htmlFor=\"genre\">Genre</label>\r\n                    </div>\r\n                    {genreList?.map((x, i) => {\r\n                        return (\r\n                            <div className=\"box\" key={i}>\r\n                                <input\r\n                                    className='input'\r\n                                    name=\"genre\"\r\n                                    value={x}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                    required\r\n\r\n                                />\r\n\r\n                                <div className=\"btn-box\">\r\n                                    {genreList.length !== 1 && <button\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => handleRemoveClick(e, i, 'genre')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                    {genreList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'genre')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n\r\n                    <label className='label' htmlFor=\"desc\">Description</label>\r\n                    <textarea\r\n                        name='desc'\r\n                        id='desc'\r\n                        className='input textarea'\r\n                        onChange={handleSimpleInputChange}\r\n                        value={values.desc}\r\n                        required\r\n\r\n                    />\r\n                    <div className='images'>\r\n                        <label className='label' htmlFor=\"imgUrl\">Image URL</label>\r\n                        {imageList.map((x, i) => {\r\n                            return (\r\n                                <div className=\"box\" key={i}>\r\n                                    <input\r\n                                        className='input'\r\n                                        name=\"movieImgUrl\"\r\n                                        value={x}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        required\r\n\r\n                                    />\r\n\r\n                                    <div className=\"btn-box\">\r\n                                        {imageList.length !== 1 && <button\r\n                                            className=\"btn\"\r\n                                            onClick={(e) => handleRemoveClick(e, i, 'movie')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                        {imageList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'movie')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        {/* {imageList.join(', ')} */}\r\n\r\n                        <label className='label' htmlFor=\"imgUrl\">Actors</label>\r\n\r\n                        {actorsList.map((x, i) => {\r\n                            return (\r\n                                <div key={i}>\r\n                                    <input\r\n                                        className='input'\r\n                                        name=\"fullName\"\r\n                                        placeholder=\"Full Name\"\r\n                                        defaultValue={x.fullName}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        required\r\n\r\n                                    />\r\n\r\n                                    <input\r\n                                        className='input'\r\n                                        name=\"roleName\"\r\n                                        placeholder=\"Role Name\"\r\n                                        defaultValue={x.roleName}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        className='input'\r\n                                        name=\"imageUrl\"\r\n                                        placeholder=\"Image URL\"\r\n                                        defaultValue={x.imageUrl}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        required\r\n\r\n                                    />\r\n\r\n                                    <input\r\n                                        className='input'\r\n                                        name=\"wikiUrl\"\r\n                                        placeholder=\"Link to Wikipedia\"\r\n                                        defaultValue={x.wikiUrl}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        required\r\n\r\n                                    />\r\n\r\n                                    <div className=\"btn-box\">\r\n                                        {actorsList.length !== 1 && <button\r\n                                            className=\"btn\"\r\n                                            onClick={(e) => handleRemoveClick(e, i, 'actor')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                        {actorsList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'actor')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <button className='btn action-btn'>Update</button>\r\n            </form>\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default EditShow;"],"names":["_useParams","useParams","showId","type","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","title","year","desc","duration","director","_useState4","values","setValues","_useState5","_useState6","imageList","setImageList","_useState7","fullName","roleName","imageUrl","wikiUrl","_useState8","actorsList","setActorsList","_useState9","_useState10","genreList","setGenreList","navigate","useNavigate","showEdit","useShowsContext","useEffect","getOne","then","result","fields","handleInputChange","e","index","_e$target","target","name","value","list","_toConsumableArray","handleRemoveClick","inputName","preventDefault","splice","handleAddClick","concat","handleSimpleInputChange","state","_objectSpread","_defineProperty","_jsxs","action","className","children","_jsx","onSubmit","Number","showData","editShow","id","console","log","JSON","stringify","onChange","checked","htmlFor","required","map","x","i","length","onClick","placeholder","defaultValue"],"sourceRoot":""}