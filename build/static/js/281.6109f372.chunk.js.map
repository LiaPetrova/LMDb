{"version":3,"file":"static/js/281.6109f372.chunk.js","mappings":"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","sources":["webpack://lmdb/./src/components/auth/Reset/Reset.module.css?1e86","components/auth/Reset/Reset.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Reset_modal__m1ZwX\",\"active\":\"Reset_active__U9R3V\",\"inactive\":\"Reset_inactive__BLlXf\",\"modal-content\":\"Reset_modal-content__jct4R\",\"title\":\"Reset_title__ma5CN\",\"close\":\"Reset_close__id1Nq\",\"action-btns\":\"Reset_action-btns__YVFSu\",\"reset-pass\":\"Reset_reset-pass__1CqCi\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\r\nimport { auth } from \"../../../firebase_setup/firebase\";\r\nimport { useInput } from \"../../../hooks/useInput\";\r\nimport { sendPasswordReset } from \"../../../services/authService\";\r\nimport validationFunctions from \"../../../utils/validationFunctions/validationFunctions\";\r\nimport styles from './Reset.module.css';\r\n\r\nconst Reset = () => {\r\n    const email = useInput(validationFunctions.emailIsValid);\r\n\r\n    const [loading ] = useAuthState(auth);\r\n    const { currentUser } = useAuthContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [notificationModal, setNotificationModal] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const formIsValid = email.fieldIsValid;\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser?.uid) {\r\n            navigate(\"/\");\r\n        }\r\n    }, [currentUser, loading]);\r\n\r\n    const onPasswordResetHandler = async (e) => {\r\n        e.preventDefault();\r\n        if (formIsValid) {\r\n            await sendPasswordReset(email.value);\r\n            setNotificationModal(true);\r\n        };\r\n    };\r\n\r\n    const closeNotificationModal = () => {\r\n        setNotificationModal(false);\r\n        navigate('/login');\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <section className={`${styles.modal} ${notificationModal ? styles['active'] : styles['inactive']}`} >\r\n                <div className={styles['modal-content']}>\r\n                    <span onClick={closeNotificationModal} className={styles['close']}>&times;</span>\r\n                    <h2 className={styles.title}>Password reset link sent! Check your email!</h2>\r\n\r\n                    <div className={styles['action-btns']}>\r\n                        <button\r\n                            onClick={() => closeNotificationModal()}\r\n                            className={`btn`}\r\n                        >Okey\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"form-section auth\">\r\n                <form className=\"form\" onSubmit={onPasswordResetHandler}>\r\n                    <h2 className={'heading'}>Reset Password</h2>\r\n                    <div className={'input-box'}>\r\n                        {/* <label className={'label'} htmlFor=\"email\">Email</label> */}\r\n                        {email.hasError && <p className={'alert'}>Email should be valid!</p>}\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`input ${email.hasError && 'input-alert'}`}\r\n                            value={email.value}\r\n                            onChange={email.onChange}\r\n                            onBlur={email.onBlur}\r\n                            placeholder=\"E-mail Address\"\r\n                            id=\"email\"\r\n                        />\r\n                    </div>\r\n\r\n                    <button\r\n                        disabled={!formIsValid || isLoading}\r\n                        className={`btn action-btn reset-pass`}\r\n                    >\r\n                        Send password reset email\r\n                    </button>\r\n                </form>\r\n                <div className=\"link anchor\">\r\n                    Don't have an account? <Link className=\"link\" to=\"/register\">Register</Link> now.\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reset;\r\n"],"names":["email","useInput","validationFunctions","_useAuthState","useAuthState","auth","loading","_slicedToArray","currentUser","useAuthContext","_useState","useState","_useState2","isLoading","_useState3","_useState4","notificationModal","setNotificationModal","navigate","useNavigate","formIsValid","fieldIsValid","useEffect","uid","onPasswordResetHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","sendPasswordReset","value","stop","_x","apply","arguments","closeNotificationModal","_jsxs","_Fragment","children","_jsx","className","concat","styles","onClick","onSubmit","hasError","type","onChange","onBlur","placeholder","id","disabled","Link","to"],"sourceRoot":""}