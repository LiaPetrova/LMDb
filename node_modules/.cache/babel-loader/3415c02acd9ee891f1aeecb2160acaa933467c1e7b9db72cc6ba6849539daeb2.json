{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\nimport { getFirestore, query, getDocs, collection, where, addDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId\n};\nconst app = initializeApp(firebaseConfig);\nconst firestore = getFirestore(app);\nconst auth = getAuth(app);\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(firestore, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(firestore, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    const result = await signInWithEmailAndPassword(auth, email, password);\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(firestore, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logout = () => {\n  signOut(auth);\n};\nexport { auth, firestore, signInWithGoogle, logInWithEmailAndPassword, registerWithEmailAndPassword, sendPasswordReset, logout };","map":{"version":3,"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","getFirestore","query","getDocs","collection","where","addDoc","firebaseConfig","apiKey","process","env","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","measurementId","REACT_APP_measurementId","app","firestore","auth","googleProvider","signInWithGoogle","res","user","q","uid","docs","length","name","displayName","authProvider","email","err","console","error","alert","message","logInWithEmailAndPassword","password","result","log","registerWithEmailAndPassword","sendPasswordReset","logout"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/firebase_setup/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n    GoogleAuthProvider,\r\n    getAuth,\r\n    signInWithPopup,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    sendPasswordResetEmail,\r\n    signOut,\r\n  } from \"firebase/auth\";\r\n  import {\r\n    getFirestore,\r\n    query,\r\n    getDocs,\r\n    collection,\r\n    where,\r\n    addDoc,\r\n  } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId,\r\n    measurementId: process.env.REACT_APP_measurementId\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst firestore = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    const res = await signInWithPopup(auth, googleProvider);\r\n    const user = res.user;\r\n    const q = query(collection(firestore, \"users\"), where(\"uid\", \"==\", user.uid));\r\n    const docs = await getDocs(q);\r\n    if (docs.docs.length === 0) {\r\n      await addDoc(collection(firestore, \"users\"), {\r\n        uid: user.uid,\r\n        name: user.displayName,\r\n        authProvider: \"google\",\r\n        email: user.email,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\nconst logInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n   const result = await signInWithEmailAndPassword(auth, email, password);\r\n   console.log(result);\r\n   return result;\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n  try {\r\n    const res = await createUserWithEmailAndPassword(auth, email, password);\r\n    const user = res.user;\r\n    await addDoc(collection(firestore, \"users\"), {\r\n      uid: user.uid,\r\n      name,\r\n      authProvider: \"local\",\r\n      email,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\nconst sendPasswordReset = async (email) => {\r\n  try {\r\n    await sendPasswordResetEmail(auth, email);\r\n    alert(\"Password reset link sent!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\nconst logout = () => {\r\n  signOut(auth);\r\n};\r\nexport {\r\n  auth,\r\n  firestore,\r\n  signInWithGoogle,\r\n  logInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n  sendPasswordReset,\r\n  logout,\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}