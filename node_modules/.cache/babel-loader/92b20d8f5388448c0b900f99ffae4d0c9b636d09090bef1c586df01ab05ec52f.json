{"ast":null,"code":"export const timeAgoHandler = value => {\n  const now = new Date();\n  const then = new Date(value);\n  const timePassed = now.getTime() - then.getTime();\n  const miliseconds = 1000;\n  const second = miliseconds;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const month = day * 30;\n  const year = day * 365;\n  if (timePassed < minute) {\n    if (timePassed / second < 2) {\n      return `${Math.floor(timePassed / second)} second ago`;\n    } else {\n      return `${Math.floor(timePassed / second)} seconds ago`;\n    }\n  }\n  if (timePassed < hour) {\n    if (timePassed / minute < 2) {\n      return `${Math.floor(timePassed / minute)} minute ago`;\n    } else {\n      return `${Math.floor(timePassed / minute)} minutes ago`;\n    }\n  }\n  if (timePassed < day) {\n    if (timePassed / hour < 2) {\n      return `${Math.floor(timePassed / hour)} hour ago`;\n    } else {\n      return `${Math.floor(timePassed / hour)} hours ago`;\n    }\n  }\n  if (timePassed < month) {\n    if (timePassed / day < 2) {\n      return `${Math.floor(timePassed / day)} day ago`;\n    } else {\n      return `${Math.floor(timePassed / day)} days ago`;\n    }\n  }\n  if (timePassed < year) {\n    if (timePassed / month < 2) {\n      return `${Math.floor(timePassed / month)} month ago`;\n    } else {\n      return `${Math.floor(timePassed / month)} months ago`;\n    }\n  }\n  if (timePassed / year < 2) {\n    return `${Math.floor(timePassed / year)} year ago`;\n  } else {\n    return `${Math.floor(timePassed / year)} years ago`;\n  }\n};","map":{"version":3,"names":["timeAgoHandler","value","now","Date","then","timePassed","getTime","miliseconds","second","minute","hour","day","month","year","Math","floor"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/utils/timeAgoHadler.js"],"sourcesContent":["export const timeAgoHandler = (value) => {\r\n    const now = new Date();\r\n    const then = new Date(value);\r\n\r\n    const timePassed = now.getTime() - then.getTime();\r\n    const miliseconds = 1000;\r\n    const second = miliseconds;\r\n    const minute = second * 60;\r\n    const hour = minute * 60;\r\n    const day = hour * 24;\r\n    const month = day * 30;\r\n    const year = day * 365;\r\n\r\n    if(timePassed < minute) {\r\n      if(timePassed/second < 2)  {\r\n      return `${Math.floor(timePassed / second)} second ago`;\r\n      } else {\r\n        return `${Math.floor(timePassed / second)} seconds ago`;\r\n      }\r\n    }\r\n\r\n    if(timePassed < hour) {\r\n      if(timePassed / minute < 2) {\r\n        return `${Math.floor(timePassed / minute)} minute ago`;\r\n      } else {\r\n        return `${Math.floor(timePassed / minute)} minutes ago`;\r\n      }\r\n    }\r\n\r\n    if(timePassed < day) {\r\n      if(timePassed / hour < 2) {\r\n        return `${Math.floor(timePassed / hour)} hour ago`;\r\n      } else {\r\n        return `${Math.floor(timePassed / hour)} hours ago`;\r\n      }    \r\n    }\r\n\r\n    if(timePassed < month) {\r\n      if(timePassed / day < 2) {\r\n        return `${Math.floor(timePassed / day)} day ago`;\r\n      } else {\r\n        return `${Math.floor(timePassed / day)} days ago`;\r\n      }\r\n    }\r\n\r\n    if(timePassed < year) {\r\n      if(timePassed / month < 2) {\r\n        return `${Math.floor(timePassed / month)} month ago`;\r\n      } else {\r\n        return `${Math.floor(timePassed / month)} months ago`;\r\n      }\r\n    }\r\n\r\n    if(timePassed / year < 2) {\r\n      return `${Math.floor(timePassed / year)} year ago`;\r\n    } else {\r\n      return `${Math.floor(timePassed / year)} years ago`;\r\n    }\r\n  \r\n}"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,KAAK,IAAK;EACrC,MAAMC,GAAG,GAAG,IAAIC,IAAI,EAAE;EACtB,MAAMC,IAAI,GAAG,IAAID,IAAI,CAACF,KAAK,CAAC;EAE5B,MAAMI,UAAU,GAAGH,GAAG,CAACI,OAAO,EAAE,GAAGF,IAAI,CAACE,OAAO,EAAE;EACjD,MAAMC,WAAW,GAAG,IAAI;EACxB,MAAMC,MAAM,GAAGD,WAAW;EAC1B,MAAME,MAAM,GAAGD,MAAM,GAAG,EAAE;EAC1B,MAAME,IAAI,GAAGD,MAAM,GAAG,EAAE;EACxB,MAAME,GAAG,GAAGD,IAAI,GAAG,EAAE;EACrB,MAAME,KAAK,GAAGD,GAAG,GAAG,EAAE;EACtB,MAAME,IAAI,GAAGF,GAAG,GAAG,GAAG;EAEtB,IAAGN,UAAU,GAAGI,MAAM,EAAE;IACtB,IAAGJ,UAAU,GAACG,MAAM,GAAG,CAAC,EAAG;MAC3B,OAAQ,GAAEM,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGG,MAAM,CAAE,aAAY;IACtD,CAAC,MAAM;MACL,OAAQ,GAAEM,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGG,MAAM,CAAE,cAAa;IACzD;EACF;EAEA,IAAGH,UAAU,GAAGK,IAAI,EAAE;IACpB,IAAGL,UAAU,GAAGI,MAAM,GAAG,CAAC,EAAE;MAC1B,OAAQ,GAAEK,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGI,MAAM,CAAE,aAAY;IACxD,CAAC,MAAM;MACL,OAAQ,GAAEK,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGI,MAAM,CAAE,cAAa;IACzD;EACF;EAEA,IAAGJ,UAAU,GAAGM,GAAG,EAAE;IACnB,IAAGN,UAAU,GAAGK,IAAI,GAAG,CAAC,EAAE;MACxB,OAAQ,GAAEI,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGK,IAAI,CAAE,WAAU;IACpD,CAAC,MAAM;MACL,OAAQ,GAAEI,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGK,IAAI,CAAE,YAAW;IACrD;EACF;EAEA,IAAGL,UAAU,GAAGO,KAAK,EAAE;IACrB,IAAGP,UAAU,GAAGM,GAAG,GAAG,CAAC,EAAE;MACvB,OAAQ,GAAEG,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGM,GAAG,CAAE,UAAS;IAClD,CAAC,MAAM;MACL,OAAQ,GAAEG,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGM,GAAG,CAAE,WAAU;IACnD;EACF;EAEA,IAAGN,UAAU,GAAGQ,IAAI,EAAE;IACpB,IAAGR,UAAU,GAAGO,KAAK,GAAG,CAAC,EAAE;MACzB,OAAQ,GAAEE,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGO,KAAK,CAAE,YAAW;IACtD,CAAC,MAAM;MACL,OAAQ,GAAEE,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGO,KAAK,CAAE,aAAY;IACvD;EACF;EAEA,IAAGP,UAAU,GAAGQ,IAAI,GAAG,CAAC,EAAE;IACxB,OAAQ,GAAEC,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGQ,IAAI,CAAE,WAAU;EACpD,CAAC,MAAM;IACL,OAAQ,GAAEC,IAAI,CAACC,KAAK,CAACV,UAAU,GAAGQ,IAAI,CAAE,YAAW;EACrD;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}