{"ast":null,"code":"import { createUserWithEmailAndPassword, GoogleAuthProvider, sendPasswordResetEmail, signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth';\nimport { addDoc, collection, doc, getDoc, getDocs, query, setDoc, where } from 'firebase/firestore';\nimport { auth, firestore } from '../firebase_setup/firebase';\nconst googleProvider = new GoogleAuthProvider();\nconst registerWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(firestore, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(firestore, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logIn = (email, password) => {\n  try {\n    const result = signInWithEmailAndPassword(auth, email, password);\n    return result;\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst registerWithEmail = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    const uid = user.uid;\n    await setDoc(doc(firestore, \"users\", uid), {\n      name,\n      authProvider: \"local\",\n      email,\n      watchlist: []\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logout = async () => {\n  await signOut(auth);\n};\nconst getUserAdditionalData = async userId => {\n  const userRef = doc(firestore, 'users', userId);\n  try {\n    const result = await getDoc(userRef);\n    const fields = result.data();\n    console.log(fields);\n    return {\n      fields\n    };\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport { registerWithGoogle, logIn, registerWithEmail, sendPasswordReset, logout, getUserAdditionalData };","map":{"version":3,"names":["createUserWithEmailAndPassword","GoogleAuthProvider","sendPasswordResetEmail","signInWithEmailAndPassword","signInWithPopup","signOut","addDoc","collection","doc","getDoc","getDocs","query","setDoc","where","auth","firestore","googleProvider","registerWithGoogle","res","user","q","uid","docs","length","name","displayName","authProvider","email","err","console","error","alert","message","logIn","password","result","registerWithEmail","watchlist","sendPasswordReset","logout","getUserAdditionalData","userId","userRef","fields","data","log"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/services/authService.js"],"sourcesContent":["import { createUserWithEmailAndPassword, GoogleAuthProvider, sendPasswordResetEmail, signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getDocs, query, setDoc, where } from 'firebase/firestore';\r\nimport { auth, firestore } from '../firebase_setup/firebase';\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst registerWithGoogle = async () => {\r\n    try {\r\n        const res = await signInWithPopup(auth, googleProvider);\r\n        const user = res.user;\r\n        const q = query(collection(firestore, \"users\"), where(\"uid\", \"==\", user.uid));\r\n        const docs = await getDocs(q);\r\n        if (docs.docs.length === 0) {\r\n            await addDoc(collection(firestore, \"users\"), {\r\n                uid: user.uid,\r\n                name: user.displayName,\r\n                authProvider: \"google\",\r\n                email: user.email,\r\n            });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst logIn = (email, password) => {\r\n    try {\r\n        const result = signInWithEmailAndPassword(auth, email, password);\r\n        return result;\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst registerWithEmail = async (name, email, password) => {\r\n    try {\r\n        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = res.user;\r\n        const uid = user.uid;\r\n        await setDoc(doc(firestore, \"users\", uid), {\r\n            name,\r\n            authProvider: \"local\",\r\n            email,\r\n            watchlist: []\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst sendPasswordReset = async (email) => {\r\n    try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        alert(\"Password reset link sent!\");\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst logout = async () => {\r\n   await signOut(auth);\r\n};\r\n\r\nconst getUserAdditionalData = async (userId) => {\r\n    const userRef = doc(firestore, 'users', userId);\r\n    try {\r\n        const result = await getDoc(userRef);\r\n        const fields = result.data();\r\n        console.log(fields);\r\n        return { fields };\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nexport {\r\n    registerWithGoogle,\r\n    logIn,\r\n    registerWithEmail,\r\n    sendPasswordReset,\r\n    logout,\r\n    getUserAdditionalData\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}