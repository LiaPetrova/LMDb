{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Final PRoject -LMDb\\\\lmdb\\\\src\\\\components\\\\CommentSection\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport { useCommentsContext } from '../../contexts/CommentsContext';\nimport { postComment } from '../../services/commentsService';\nimport { CommentItem } from './CommentItem/CommentItem';\nimport styles from './CommentSection.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommentSection = _ref => {\n  _s();\n  let {\n    showId\n  } = _ref;\n  const [openWriteReview, setOpenWriteReview] = useState(false);\n  const [commentContent, setCommentContent] = useState('');\n  const {\n    currentUser\n  } = useAuthContext();\n  const {\n    comments\n  } = useCommentsContext();\n  useEffect(() => {});\n  const changeHandler = e => {\n    setCommentContent(e.target.value);\n  };\n  const postCommentHandler = async () => {\n    const result = await postComment(showId, currentUser.uid, commentContent);\n    console.log(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [comments.length > 0 && comments.map(x => /*#__PURE__*/_jsxDEV(CommentItem, {\n      comment: x\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 55\n    }, this)), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid) && !openWriteReview && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenWriteReview(true),\n      className: `btn`,\n      children: \"Write your review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 54\n    }, this), openWriteReview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['write-review'],\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: changeHandler,\n        value: commentContent,\n        name: \"comment\",\n        id: \"comment\",\n        cols: \"30\",\n        rows: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => postCommentHandler(),\n        className: `btn`,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"RhejFgNQuCtOZhOE4IDjxsWqQVc=\", false, function () {\n  return [useAuthContext, useCommentsContext];\n});\n_c = CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["useEffect","useState","useAuthContext","useCommentsContext","postComment","CommentItem","styles","jsxDEV","_jsxDEV","CommentSection","_ref","_s","showId","openWriteReview","setOpenWriteReview","commentContent","setCommentContent","currentUser","comments","changeHandler","e","target","value","postCommentHandler","result","uid","console","log","children","length","map","x","comment","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","onChange","name","id","cols","rows","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/components/CommentSection/CommentSection.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useAuthContext } from '../../contexts/AuthContext';\r\nimport { useCommentsContext } from '../../contexts/CommentsContext';\r\nimport { postComment } from '../../services/commentsService';\r\nimport { CommentItem } from './CommentItem/CommentItem';\r\nimport styles from './CommentSection.module.css';\r\n\r\nexport const CommentSection = ({showId}) => {\r\n   \r\n    const [openWriteReview, setOpenWriteReview] = useState(false);\r\n    const [commentContent, setCommentContent] = useState('');\r\n    const {currentUser} = useAuthContext();\r\n    const { comments } = useCommentsContext();\r\n\r\n    useEffect(() => {\r\n        \r\n    });\r\n\r\n    const changeHandler = (e) => {\r\n        setCommentContent(e.target.value)\r\n    };\r\n\r\n    const postCommentHandler = async () => {\r\n       const result = await postComment(showId, currentUser.uid, commentContent);\r\n       console.log(result);\r\n    }\r\n    return (\r\n        <section>\r\n            {comments.length > 0 && comments.map(x => <CommentItem comment = {x} />)}\r\n            {currentUser?.uid && !openWriteReview && <button\r\n                onClick={() => setOpenWriteReview(true)}\r\n                className={`btn`}>\r\n                Write your review\r\n            </button>}\r\n            {openWriteReview &&\r\n                <div className={styles['write-review']}>\r\n                    <textarea onChange={changeHandler} value={commentContent} name=\"comment\" id=\"comment\" cols=\"30\" rows=\"10\"></textarea>\r\n                    <button\r\n                onClick={() => postCommentHandler()}\r\n                className={`btn`}>\r\n                Send\r\n            </button>\r\n                </div>}\r\n        </section>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,cAAc,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAF,IAAA;EAEnC,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM;IAACgB;EAAW,CAAC,GAAGf,cAAc,EAAE;EACtC,MAAM;IAAEgB;EAAS,CAAC,GAAGf,kBAAkB,EAAE;EAEzCH,SAAS,CAAC,MAAM,CAEhB,CAAC,CAAC;EAEF,MAAMmB,aAAa,GAAIC,CAAC,IAAK;IACzBJ,iBAAiB,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,MAAM,GAAG,MAAMpB,WAAW,CAACQ,MAAM,EAAEK,WAAW,CAACQ,GAAG,EAAEV,cAAc,CAAC;IACzEW,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACtB,CAAC;EACD,oBACIhB,OAAA;IAAAoB,QAAA,GACKV,QAAQ,CAACW,MAAM,GAAG,CAAC,IAAIX,QAAQ,CAACY,GAAG,CAACC,CAAC,iBAAIvB,OAAA,CAACH,WAAW;MAAC2B,OAAO,EAAID;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,CAAC,EACvE,CAAAnB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEQ,GAAG,KAAI,CAACZ,eAAe,iBAAIL,OAAA;MACrC6B,OAAO,EAAEA,CAAA,KAAMvB,kBAAkB,CAAC,IAAI,CAAE;MACxCwB,SAAS,EAAG,KAAK;MAAAV,QAAA,EAAC;IAEtB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACRvB,eAAe,iBACZL,OAAA;MAAK8B,SAAS,EAAEhC,MAAM,CAAC,cAAc,CAAE;MAAAsB,QAAA,gBACnCpB,OAAA;QAAU+B,QAAQ,EAAEpB,aAAc;QAACG,KAAK,EAAEP,cAAe;QAACyB,IAAI,EAAC,SAAS;QAACC,EAAE,EAAC,SAAS;QAACC,IAAI,EAAC,IAAI;QAACC,IAAI,EAAC;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY,eACrH5B,OAAA;QACJ6B,OAAO,EAAEA,CAAA,KAAMd,kBAAkB,EAAG;QACpCe,SAAS,EAAG,KAAK;QAAAV,QAAA,EAAC;MAEtB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAElB,CAAC;AAAAzB,EAAA,CAtCYF,cAAc;EAAA,QAIDP,cAAc,EACfC,kBAAkB;AAAA;AAAAyC,EAAA,GAL9BnC,cAAc;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}