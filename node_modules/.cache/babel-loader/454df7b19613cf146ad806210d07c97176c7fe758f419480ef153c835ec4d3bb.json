{"ast":null,"code":"import { query } from 'express';\nimport { createUserWithEmailAndPassword, GoogleAuthProvider, sendPasswordResetEmail, signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth';\nimport { addDoc, collection, getDocs, where } from 'firebase/firestore';\nimport { auth, firestore, app } from '../firebase_setup/firebase';\nconst googleProvider = new GoogleAuthProvider();\nconst registerWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(firestore, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(firestore, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logIn = async (email, password) => {\n  try {\n    const result = await signInWithEmailAndPassword(auth, email, password);\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst registerWithEmail = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(firestore, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logout = () => {\n  signOut(auth);\n};\nexport { registerWithGoogle, logIn, registerWithEmail, sendPasswordReset, logout };","map":{"version":3,"names":["query","createUserWithEmailAndPassword","GoogleAuthProvider","sendPasswordResetEmail","signInWithEmailAndPassword","signInWithPopup","signOut","addDoc","collection","getDocs","where","auth","firestore","app","googleProvider","registerWithGoogle","res","user","q","uid","docs","length","name","displayName","authProvider","email","err","console","error","alert","message","logIn","password","result","log","registerWithEmail","sendPasswordReset","logout"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/services/authService.js"],"sourcesContent":["import { query } from 'express';\r\nimport { createUserWithEmailAndPassword, GoogleAuthProvider, sendPasswordResetEmail, signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, getDocs, where } from 'firebase/firestore';\r\nimport { auth, firestore, app } from '../firebase_setup/firebase';\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst registerWithGoogle = async () => {\r\n    try {\r\n        const res = await signInWithPopup(auth, googleProvider);\r\n        const user = res.user;\r\n        const q = query(collection(firestore, \"users\"), where(\"uid\", \"==\", user.uid));\r\n        const docs = await getDocs(q);\r\n        if (docs.docs.length === 0) {\r\n            await addDoc(collection(firestore, \"users\"), {\r\n                uid: user.uid,\r\n                name: user.displayName,\r\n                authProvider: \"google\",\r\n                email: user.email,\r\n            });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst logIn = async (email, password) => {\r\n    try {\r\n        const result = await signInWithEmailAndPassword(auth, email, password);\r\n        console.log(result);\r\n        return result;\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst registerWithEmail = async (name, email, password) => {\r\n    try {\r\n        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = res.user;\r\n        await addDoc(collection(firestore, \"users\"), {\r\n            uid: user.uid,\r\n            name,\r\n            authProvider: \"local\",\r\n            email,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst sendPasswordReset = async (email) => {\r\n    try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        alert(\"Password reset link sent!\");\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst logout = () => {\r\n    signOut(auth);\r\n};\r\nexport {\r\n    registerWithGoogle,\r\n    logIn,\r\n    registerWithEmail,\r\n    sendPasswordReset,\r\n    logout,\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}