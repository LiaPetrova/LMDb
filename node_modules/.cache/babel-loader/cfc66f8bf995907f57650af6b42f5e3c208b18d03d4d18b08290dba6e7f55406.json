{"ast":null,"code":"import { addDoc, collection, getDocs, orderBy, query, serverTimestamp, arrayUnion, doc, getDoc, updateDoc, arrayRemove, setDoc } from \"firebase/firestore\";\nimport { firestore } from \"../firebase_setup/firebase\";\nconst movieCollection = collection(firestore, \"movies\");\nconst seriesCollection = collection(firestore, \"series\");\nexport const addNewShow = async (type, showData) => {\n  let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\n  try {\n    await addDoc(collectionType, {\n      ...showData,\n      rating: {\n        ratingPoints: 0,\n        usersRated: []\n      },\n      createdAt: serverTimestamp()\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const getAll = async type => {\n  let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\n  const orderedQuery = query(collectionType, orderBy('createdAt', 'desc'));\n  try {\n    const result = await getDocs(orderedQuery).then(docs => {\n      let arr = [];\n      docs.forEach(doc => {\n        let fields = doc.data();\n        arr.push({\n          id: doc.id,\n          fields: fields\n        });\n      });\n      return arr;\n    });\n    // console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const getOne = async (showId, type) => {\n  let showType = '';\n  if (type === 'Movie') {\n    showType = 'movies';\n  } else if (type === 'Series') {\n    showType = 'series';\n  }\n  const showRef = doc(firestore, showType, showId);\n  try {\n    const result = await getDoc(showRef);\n    const id = result.id;\n    const fields = result.data();\n    return {\n      id,\n      fields\n    };\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const addToWishList = async (type, userId, showId) => {\n  const currentUserRef = doc(firestore, 'users', userId);\n  await updateDoc(currentUserRef, {\n    watchlist: arrayUnion({\n      showId,\n      type\n    })\n  });\n};\nexport const removeFromWatchlist = async (type, userId, showId) => {\n  const currentUserRef = doc(firestore, 'users', userId);\n  await updateDoc(currentUserRef, {\n    watchlist: arrayRemove({\n      showId,\n      type\n    })\n  });\n};\nexport const getAllFromWatchlist = async userId => {\n  const currentUserRef = collection(firestore, 'users');\n  try {\n    const result = await getDoc(doc(currentUserRef, userId));\n    // .then(doc => doc.data().watchlist);\n    const userWatchlist = result.data().watchlist;\n    return userWatchlist;\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const sendRating = async (type, userId, showId, ratePoints) => {\n  let showType = '';\n  if (type === 'Movie') {\n    showType = 'movies';\n  } else if (type === 'Series') {\n    showType = 'series';\n  }\n  const currentShowRef = doc(firestore, showType, showId);\n  await setDoc(currentShowRef, {\n    rating: {\n      usersRated: {\n        [userId]: ratePoints\n      },\n      ratingPoints: +ratePoints\n    }\n  }, {\n    merge: true\n  });\n};","map":{"version":3,"names":["addDoc","collection","getDocs","orderBy","query","serverTimestamp","arrayUnion","doc","getDoc","updateDoc","arrayRemove","setDoc","firestore","movieCollection","seriesCollection","addNewShow","type","showData","collectionType","rating","ratingPoints","usersRated","createdAt","err","console","error","alert","message","getAll","orderedQuery","result","then","docs","arr","forEach","fields","data","push","id","getOne","showId","showType","showRef","addToWishList","userId","currentUserRef","watchlist","removeFromWatchlist","getAllFromWatchlist","userWatchlist","sendRating","ratePoints","currentShowRef","merge"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/services/showsService.js"],"sourcesContent":["import { addDoc, collection, getDocs, orderBy, query, serverTimestamp, arrayUnion, doc, getDoc, updateDoc, arrayRemove, setDoc } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase_setup/firebase\";\r\n\r\n\r\nconst movieCollection = collection(firestore, \"movies\");\r\nconst seriesCollection = collection(firestore, \"series\");\r\n\r\n\r\nexport const addNewShow = async (type, showData) => {\r\n    let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\r\n    try {\r\n        await addDoc(collectionType, {\r\n            ...showData,\r\n            rating: {\r\n                ratingPoints: 0,\r\n                usersRated: []\r\n            },\r\n            createdAt: serverTimestamp()\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nexport const getAll = async (type) => {\r\n    let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\r\n\r\n    const orderedQuery = query(collectionType, orderBy('createdAt', 'desc'));\r\n    try {\r\n        const result = await getDocs(orderedQuery)\r\n            .then(docs => {\r\n                let arr = [];\r\n\r\n                docs.forEach((doc) => {\r\n                    let fields = doc.data();\r\n\r\n                    arr.push({\r\n                        id: doc.id,\r\n                        fields: fields\r\n                    });\r\n                });\r\n                return arr;\r\n            });\r\n        // console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nexport const getOne = async (showId, type) => {\r\n    let showType = '';\r\n    if (type === 'Movie') {\r\n        showType = 'movies'\r\n    } else if (type === 'Series') {\r\n        showType = 'series'\r\n    }\r\n    const showRef = doc(firestore, showType, showId);\r\n    try {\r\n        const result = await getDoc(showRef);\r\n        const id = result.id;\r\n        const fields = result.data();\r\n        return { id, fields };\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\n\r\nexport const addToWishList = async (type, userId, showId) => {\r\n    const currentUserRef = doc(firestore, 'users', userId);\r\n\r\n    await updateDoc(currentUserRef, {\r\n        watchlist: arrayUnion({ showId, type })\r\n    });\r\n};\r\n\r\nexport const removeFromWatchlist = async (type, userId, showId) => {\r\n    const currentUserRef = doc(firestore, 'users', userId);\r\n    await updateDoc(currentUserRef, {\r\n        watchlist: arrayRemove({ showId, type })\r\n    });\r\n};\r\n\r\nexport const getAllFromWatchlist = async (userId) => {\r\n    const currentUserRef = collection(firestore, 'users');\r\n    try {\r\n        const result = await getDoc(doc(currentUserRef, userId))\r\n        // .then(doc => doc.data().watchlist);\r\n        const userWatchlist = result.data().watchlist;\r\n        return userWatchlist;\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const sendRating = async (type, userId, showId, ratePoints) => {\r\n    let showType = '';\r\n    if (type === 'Movie') {\r\n        showType = 'movies'\r\n    } else if (type === 'Series') {\r\n        showType = 'series'\r\n    }\r\n    const currentShowRef = doc(firestore, showType, showId);\r\n\r\n    await setDoc(currentShowRef, { rating: { usersRated: { [userId]: ratePoints }, ratingPoints: +ratePoints } }, { merge: true } );\r\n\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,eAAe,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,oBAAoB;AAC1J,SAASC,SAAS,QAAQ,4BAA4B;AAGtD,MAAMC,eAAe,GAAGZ,UAAU,CAACW,SAAS,EAAE,QAAQ,CAAC;AACvD,MAAME,gBAAgB,GAAGb,UAAU,CAACW,SAAS,EAAE,QAAQ,CAAC;AAGxD,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;EAChD,IAAIC,cAAc,GAAGF,IAAI,KAAK,OAAO,GAAGH,eAAe,GAAGC,gBAAgB;EAC1E,IAAI;IACA,MAAMd,MAAM,CAACkB,cAAc,EAAE;MACzB,GAAGD,QAAQ;MACXE,MAAM,EAAE;QACJC,YAAY,EAAE,CAAC;QACfC,UAAU,EAAE;MAChB,CAAC;MACDC,SAAS,EAAEjB,eAAe;IAC9B,CAAC,CAAC;EACN,CAAC,CAAC,OAAOkB,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAOZ,IAAI,IAAK;EAClC,IAAIE,cAAc,GAAGF,IAAI,KAAK,OAAO,GAAGH,eAAe,GAAGC,gBAAgB;EAE1E,MAAMe,YAAY,GAAGzB,KAAK,CAACc,cAAc,EAAEf,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;EACxE,IAAI;IACA,MAAM2B,MAAM,GAAG,MAAM5B,OAAO,CAAC2B,YAAY,CAAC,CACrCE,IAAI,CAACC,IAAI,IAAI;MACV,IAAIC,GAAG,GAAG,EAAE;MAEZD,IAAI,CAACE,OAAO,CAAE3B,GAAG,IAAK;QAClB,IAAI4B,MAAM,GAAG5B,GAAG,CAAC6B,IAAI,EAAE;QAEvBH,GAAG,CAACI,IAAI,CAAC;UACLC,EAAE,EAAE/B,GAAG,CAAC+B,EAAE;UACVH,MAAM,EAAEA;QACZ,CAAC,CAAC;MACN,CAAC,CAAC;MACF,OAAOF,GAAG;IACd,CAAC,CAAC;IACN;IACA,OAAOH,MAAM;EAEjB,CAAC,CAAC,OAAOP,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMY,MAAM,GAAG,MAAAA,CAAOC,MAAM,EAAExB,IAAI,KAAK;EAC1C,IAAIyB,QAAQ,GAAG,EAAE;EACjB,IAAIzB,IAAI,KAAK,OAAO,EAAE;IAClByB,QAAQ,GAAG,QAAQ;EACvB,CAAC,MAAM,IAAIzB,IAAI,KAAK,QAAQ,EAAE;IAC1ByB,QAAQ,GAAG,QAAQ;EACvB;EACA,MAAMC,OAAO,GAAGnC,GAAG,CAACK,SAAS,EAAE6B,QAAQ,EAAED,MAAM,CAAC;EAChD,IAAI;IACA,MAAMV,MAAM,GAAG,MAAMtB,MAAM,CAACkC,OAAO,CAAC;IACpC,MAAMJ,EAAE,GAAGR,MAAM,CAACQ,EAAE;IACpB,MAAMH,MAAM,GAAGL,MAAM,CAACM,IAAI,EAAE;IAC5B,OAAO;MAAEE,EAAE;MAAEH;IAAO,CAAC;EACzB,CAAC,CAAC,OAAOZ,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACtB;AACJ,CAAC;AAGD,OAAO,MAAMgB,aAAa,GAAG,MAAAA,CAAO3B,IAAI,EAAE4B,MAAM,EAAEJ,MAAM,KAAK;EACzD,MAAMK,cAAc,GAAGtC,GAAG,CAACK,SAAS,EAAE,OAAO,EAAEgC,MAAM,CAAC;EAEtD,MAAMnC,SAAS,CAACoC,cAAc,EAAE;IAC5BC,SAAS,EAAExC,UAAU,CAAC;MAAEkC,MAAM;MAAExB;IAAK,CAAC;EAC1C,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAM+B,mBAAmB,GAAG,MAAAA,CAAO/B,IAAI,EAAE4B,MAAM,EAAEJ,MAAM,KAAK;EAC/D,MAAMK,cAAc,GAAGtC,GAAG,CAACK,SAAS,EAAE,OAAO,EAAEgC,MAAM,CAAC;EACtD,MAAMnC,SAAS,CAACoC,cAAc,EAAE;IAC5BC,SAAS,EAAEpC,WAAW,CAAC;MAAE8B,MAAM;MAAExB;IAAK,CAAC;EAC3C,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMgC,mBAAmB,GAAG,MAAOJ,MAAM,IAAK;EACjD,MAAMC,cAAc,GAAG5C,UAAU,CAACW,SAAS,EAAE,OAAO,CAAC;EACrD,IAAI;IACA,MAAMkB,MAAM,GAAG,MAAMtB,MAAM,CAACD,GAAG,CAACsC,cAAc,EAAED,MAAM,CAAC,CAAC;IACxD;IACA,MAAMK,aAAa,GAAGnB,MAAM,CAACM,IAAI,EAAE,CAACU,SAAS;IAC7C,OAAOG,aAAa;EACxB,CAAC,CAAC,OAAO1B,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACtB;AAEJ,CAAC;AAGD,OAAO,MAAMuB,UAAU,GAAG,MAAAA,CAAOlC,IAAI,EAAE4B,MAAM,EAAEJ,MAAM,EAAEW,UAAU,KAAK;EAClE,IAAIV,QAAQ,GAAG,EAAE;EACjB,IAAIzB,IAAI,KAAK,OAAO,EAAE;IAClByB,QAAQ,GAAG,QAAQ;EACvB,CAAC,MAAM,IAAIzB,IAAI,KAAK,QAAQ,EAAE;IAC1ByB,QAAQ,GAAG,QAAQ;EACvB;EACA,MAAMW,cAAc,GAAG7C,GAAG,CAACK,SAAS,EAAE6B,QAAQ,EAAED,MAAM,CAAC;EAEvD,MAAM7B,MAAM,CAACyC,cAAc,EAAE;IAAEjC,MAAM,EAAE;MAAEE,UAAU,EAAE;QAAE,CAACuB,MAAM,GAAGO;MAAW,CAAC;MAAE/B,YAAY,EAAE,CAAC+B;IAAW;EAAE,CAAC,EAAE;IAAEE,KAAK,EAAE;EAAK,CAAC,CAAE;AAEnI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}