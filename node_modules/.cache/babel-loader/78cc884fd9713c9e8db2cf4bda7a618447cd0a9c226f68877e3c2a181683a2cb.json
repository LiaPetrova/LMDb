{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Final PRoject -LMDb\\\\lmdb\\\\src\\\\components\\\\CommentSection\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport { getAllComments, postComment } from '../../services/commentsService';\nimport { CommentItem } from './CommentItem/CommentItem';\nimport styles from './CommentSection.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommentSection = _ref => {\n  _s();\n  let {\n    showId\n  } = _ref;\n  const [openWriteReview, setOpenWriteReview] = useState(false);\n  const [commentContent, setCommentContent] = useState('');\n  const {\n    currentUser\n  } = useAuthContext();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    getAllComments(showId).then(result => {\n      console.log(result);\n      setComments(result);\n    });\n  }, [showId]);\n  const changeHandler = e => {\n    setCommentContent(e.target.value);\n  };\n  const postCommentHandler = async () => {\n    await postComment(showId, currentUser.uid, commentContent).then(result => setComments(state => [...state, result]));\n    setCommentContent('');\n  };\n  const editCommentHandler = (commentId, commentContent) => {\n    openWriteReview(true);\n    setCommentContent(commentContent);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles['comment-section'],\n    children: [comments.length > 0 ? comments.map(x => /*#__PURE__*/_jsxDEV(CommentItem, {\n      editCommentHandler: editCommentHandler,\n      comment: x,\n      userId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid\n    }, x.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles['no-results'],\n      children: \"Nothing to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid) && !openWriteReview && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenWriteReview(true),\n      className: `btn ${styles['btn-write-review']}`,\n      children: \"Write your review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 54\n    }, this), openWriteReview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['write-review'],\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: `box-shadow`,\n        onChange: changeHandler,\n        value: commentContent,\n        name: \"comment\",\n        id: \"comment\",\n        cols: \"30\",\n        rows: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => postCommentHandler(),\n        className: `btn`,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"BhStyOfuW5aaY2tOKAZf9Un8S8w=\", false, function () {\n  return [useAuthContext];\n});\n_c = CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["useEffect","useState","useAuthContext","getAllComments","postComment","CommentItem","styles","jsxDEV","_jsxDEV","CommentSection","_ref","_s","showId","openWriteReview","setOpenWriteReview","commentContent","setCommentContent","currentUser","comments","setComments","then","result","console","log","changeHandler","e","target","value","postCommentHandler","uid","state","editCommentHandler","commentId","className","children","length","map","x","comment","userId","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","name","cols","rows","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/components/CommentSection/CommentSection.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useAuthContext } from '../../contexts/AuthContext';\r\nimport { getAllComments, postComment } from '../../services/commentsService';\r\nimport { CommentItem } from './CommentItem/CommentItem';\r\nimport styles from './CommentSection.module.css';\r\n\r\nexport const CommentSection = ({ showId }) => {\r\n\r\n    const [openWriteReview, setOpenWriteReview] = useState(false);\r\n    const [commentContent, setCommentContent] = useState('');\r\n    const { currentUser } = useAuthContext();\r\n    const [comments, setComments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllComments(showId)\r\n            .then(result => {\r\n                console.log(result);\r\n                setComments(result)\r\n            });\r\n\r\n    }, [showId]);\r\n\r\n\r\n\r\n    const changeHandler = (e) => {\r\n        setCommentContent(e.target.value)\r\n    };\r\n\r\n    const postCommentHandler = async () => {\r\n        await postComment(showId, currentUser.uid, commentContent)\r\n            .then(result => setComments(state => [...state, result]));\r\n        setCommentContent('');\r\n    };\r\n\r\n    const editCommentHandler = (commentId, commentContent) => {\r\n        openWriteReview(true);\r\n        setCommentContent(commentContent);\r\n    };\r\n    return (\r\n        <section className={styles['comment-section']}>\r\n            {comments.length > 0 ? comments.map(x =>\r\n                <CommentItem\r\n                    editCommentHandler={editCommentHandler}\r\n                    comment={x} key={x.id}\r\n                    userId={currentUser?.uid}\r\n                />)\r\n                : <p className={styles['no-results']}>Nothing to show</p>}\r\n            {currentUser?.uid && !openWriteReview && <button\r\n                onClick={() => setOpenWriteReview(true)}\r\n                className={`btn ${styles['btn-write-review']}`}>\r\n                Write your review\r\n            </button>}\r\n            {openWriteReview &&\r\n                <div className={styles['write-review']}>\r\n                    <textarea className={`box-shadow`} onChange={changeHandler} value={commentContent} name=\"comment\" id=\"comment\" cols=\"30\" rows=\"10\"></textarea>\r\n                    <button\r\n                        onClick={() => postCommentHandler()}\r\n                        className={`btn`}>\r\n                        Send\r\n                    </button>\r\n                </div>}\r\n        </section>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}