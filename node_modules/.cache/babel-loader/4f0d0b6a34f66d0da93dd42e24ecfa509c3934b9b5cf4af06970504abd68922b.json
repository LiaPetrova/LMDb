{"ast":null,"code":"import { addDoc, arrayRemove, arrayUnion, collection, deleteDoc, deleteField, doc, getDocs, orderBy, query, serverTimestamp, setDoc, Timestamp, updateDoc, where } from \"firebase/firestore\";\nimport { firestore } from \"../firebase_setup/firebase\";\nimport { getUserAdditionalData } from \"./authService\";\nconst commentCollection = collection(firestore, 'comments');\nexport const getAllComments = async showId => {\n  const orderedQuery = query(commentCollection, orderBy('createdAt', 'asc'), where('showId', '==', showId));\n  try {\n    const result = await getDocs(orderedQuery).then(docs => {\n      let arr = [];\n      docs.forEach(doc => {\n        let fields = doc.data();\n        arr.push({\n          id: doc.id,\n          fields: {\n            ...fields,\n            createdAt: fields.createdAt.toDate()\n          }\n        });\n      });\n      return arr;\n    });\n    // console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const postComment = async (showId, ownerId, commentContent) => {\n  const owner = await getUserAdditionalData(ownerId);\n  try {\n    const result = await addDoc(commentCollection, {\n      showId,\n      commentContent,\n      likes: [],\n      dislikes: [],\n      ownerId,\n      ownerName: owner.name,\n      createdAt: serverTimestamp()\n    });\n    return {\n      id: result.id,\n      fields: {\n        showId,\n        commentContent,\n        likes: [],\n        dislikes: [],\n        ownerId,\n        ownerName: owner.name,\n        createdAt: Date.now()\n      }\n    };\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const updateComment = async (commentId, newContent) => {\n  const currentCommentRef = doc(firestore, 'comments', commentId);\n  try {\n    const result = await updateDoc(currentCommentRef, {\n      commentContent: newContent\n    });\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const deleteComment = async commentId => {\n  const currentCommentRef = doc(firestore, 'comments', commentId);\n  return deleteDoc(currentCommentRef);\n};\nexport const sendReaction = async (reaction, commentId, userId) => {\n  const currentCommentRef = doc(firestore, 'comments', commentId);\n  try {\n    if (reaction === 'like') {\n      await updateDoc(currentCommentRef, {\n        likes: arrayUnion(userId)\n      });\n    } else {\n      await updateDoc(currentCommentRef, {\n        dislikes: arrayUnion(userId)\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const removeReaction = async (reaction, commentId, userId) => {\n  const currentCommentRef = doc(firestore, 'comments', commentId);\n  try {\n    if (reaction === 'like') {\n      await updateDoc(currentCommentRef, {\n        likes: arrayRemove(userId)\n      });\n    } else {\n      await updateDoc(currentCommentRef, {\n        dislikes: arrayRemove(userId)\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};","map":{"version":3,"names":["addDoc","arrayRemove","arrayUnion","collection","deleteDoc","deleteField","doc","getDocs","orderBy","query","serverTimestamp","setDoc","Timestamp","updateDoc","where","firestore","getUserAdditionalData","commentCollection","getAllComments","showId","orderedQuery","result","then","docs","arr","forEach","fields","data","push","id","createdAt","toDate","err","console","error","alert","message","postComment","ownerId","commentContent","owner","likes","dislikes","ownerName","name","Date","now","updateComment","commentId","newContent","currentCommentRef","log","deleteComment","sendReaction","reaction","userId","removeReaction"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/services/commentsService.js"],"sourcesContent":["import { addDoc, arrayRemove, arrayUnion, collection, deleteDoc, deleteField, doc, getDocs, orderBy, query, serverTimestamp, setDoc, Timestamp, updateDoc, where } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase_setup/firebase\";\r\nimport { getUserAdditionalData } from \"./authService\"\r\n\r\nconst commentCollection = collection(firestore, 'comments');\r\n\r\n\r\nexport const getAllComments = async (showId) => {\r\n    const orderedQuery = query(commentCollection, orderBy('createdAt', 'asc'), where('showId', '==', showId));\r\n    try {\r\n        const result = await getDocs(orderedQuery)\r\n            .then(docs => {\r\n                let arr = [];\r\n\r\n                docs.forEach((doc) => {\r\n                    let fields = doc.data();\r\n\r\n                    arr.push({\r\n                        id: doc.id,\r\n                        fields: { ...fields, createdAt: fields.createdAt.toDate() }\r\n                    });\r\n                });\r\n                return arr;\r\n            });\r\n        // console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nexport const postComment = async (showId, ownerId, commentContent) => {\r\n\r\n    const owner = await getUserAdditionalData(ownerId);\r\n    try {\r\n        const result = await addDoc(commentCollection, {\r\n            showId,\r\n            commentContent,\r\n            likes: [],\r\n            dislikes: [],\r\n            ownerId,\r\n            ownerName: owner.name,\r\n            createdAt: serverTimestamp()\r\n        });\r\n\r\n        return {\r\n            id: result.id, fields: {\r\n                showId,\r\n                commentContent,\r\n                likes: [],\r\n                dislikes: [],\r\n                ownerId,\r\n                ownerName: owner.name,\r\n                createdAt: Date.now()\r\n            }\r\n        };\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\n\r\nexport const updateComment = async (commentId, newContent) => {\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    try {\r\n\r\n        const result = await updateDoc(currentCommentRef, {\r\n           commentContent: newContent\r\n        });\r\n        console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n};\r\n\r\nexport const deleteComment = async (commentId) => {\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    return deleteDoc(currentCommentRef);\r\n};\r\n\r\nexport const sendReaction = async (reaction, commentId, userId) => {\r\n\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    try {\r\n        if (reaction === 'like') {\r\n            await updateDoc(currentCommentRef, {\r\n                likes: arrayUnion(userId)\r\n            });\r\n        } else {\r\n            await updateDoc(currentCommentRef, {\r\n                dislikes: arrayUnion(userId)\r\n            });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n}\r\n\r\nexport const removeReaction = async (reaction, commentId, userId) => {\r\n\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    try {\r\n        if (reaction === 'like') {\r\n            await updateDoc(currentCommentRef, {\r\n                likes: arrayRemove(userId)\r\n            });\r\n        } else {\r\n            await updateDoc(currentCommentRef, {\r\n                dislikes: arrayRemove(userId)\r\n            });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}