{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Final PRoject -LMDb\\\\lmdb\\\\src\\\\components\\\\auth\\\\Reset\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\nimport { auth } from \"../../../firebase_setup/firebase\";\nimport { useInput } from \"../../../hooks/useInput\";\nimport { sendPasswordReset } from \"../../../services/authService\";\nimport userValidation from \"../../../validationFunctions/validationFunctions\";\nimport styles from './Reset.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Reset = () => {\n  _s();\n  const email = useInput(userValidation.emailIsValid);\n  const [loading, error] = useAuthState(auth);\n  const {\n    currentUser\n  } = useAuthContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [notificationModal, setNotificationModal] = useState(false);\n  const navigate = useNavigate();\n  const formIsValid = email.fieldIsValid;\n  useEffect(() => {\n    if (currentUser !== null && currentUser !== void 0 && currentUser.uid) {\n      navigate(\"/\");\n    }\n  }, [currentUser, loading]);\n  const onPasswordResetHandler = async e => {\n    e.preventDefault();\n    if (formIsValid) {\n      await sendPasswordReset(email.value);\n      setNotificationModal(true);\n    }\n    ;\n  };\n  const closeNotificationModal = () => {\n    setNotificationModal(false);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: `${styles.modal} ${notificationModal ? styles['active'] : styles['inactive']}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['modal-content'],\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: closeNotificationModal,\n          className: styles['close'],\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.title,\n          children: \"Password reset link sent! Check your email!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles['action-btns'],\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => closeNotificationModal(),\n            className: `btn`,\n            children: \"Okey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form-section auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: onPasswordResetHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: 'heading',\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'input-box',\n          children: [email.hasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: 'alert',\n            children: \"Email should be valid!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `input ${email.hasError && 'input-alert'}`,\n            value: email.value,\n            onChange: email.onChange,\n            onBlur: email.onBlur,\n            placeholder: \"E-mail Address\",\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid || isLoading,\n          className: `btn action-btn reset-pass`,\n          children: \"Send password reset email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link anchor\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 44\n        }, this), \" now.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Reset, \"ZCKX1zhLG+H6uxZksfhR13PeCHs=\", false, function () {\n  return [useInput, useAuthState, useAuthContext, useNavigate];\n});\n_c = Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useEffect","useState","useAuthState","useNavigate","Link","useAuthContext","auth","useInput","sendPasswordReset","userValidation","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Reset","_s","email","emailIsValid","loading","error","currentUser","isLoading","setIsLoading","notificationModal","setNotificationModal","navigate","formIsValid","fieldIsValid","uid","onPasswordResetHandler","e","preventDefault","value","closeNotificationModal","children","className","modal","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","onSubmit","hasError","type","onChange","onBlur","placeholder","id","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/components/auth/Reset/Reset.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\r\nimport { auth } from \"../../../firebase_setup/firebase\";\r\nimport { useInput } from \"../../../hooks/useInput\";\r\nimport { sendPasswordReset } from \"../../../services/authService\";\r\nimport userValidation from \"../../../validationFunctions/validationFunctions\";\r\nimport styles from './Reset.module.css';\r\n\r\nexport const Reset = () => {\r\n    const email = useInput(userValidation.emailIsValid);\r\n\r\n    const [loading, error] = useAuthState(auth);\r\n    const { currentUser } = useAuthContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [notificationModal, setNotificationModal] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const formIsValid = email.fieldIsValid;\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser?.uid) {\r\n            navigate(\"/\");\r\n        }\r\n    }, [currentUser, loading]);\r\n\r\n    const onPasswordResetHandler = async (e) => {\r\n        e.preventDefault();\r\n        if (formIsValid) {\r\n            await sendPasswordReset(email.value);\r\n            setNotificationModal(true);\r\n        };\r\n    };\r\n\r\n    const closeNotificationModal = () => {\r\n        setNotificationModal(false);\r\n        navigate('/login');\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <section className={`${styles.modal} ${notificationModal ? styles['active'] : styles['inactive']}`} >\r\n                <div className={styles['modal-content']}>\r\n                    <span onClick={closeNotificationModal} className={styles['close']}>&times;</span>\r\n                    <h2 className={styles.title}>Password reset link sent! Check your email!</h2>\r\n\r\n                    <div className={styles['action-btns']}>\r\n                        <button\r\n                            onClick={() => closeNotificationModal()}\r\n                            className={`btn`}\r\n                        >Okey\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"form-section auth\">\r\n                <form className=\"form\" onSubmit={onPasswordResetHandler}>\r\n                    <h2 className={'heading'}>Reset Password</h2>\r\n                    <div className={'input-box'}>\r\n                        {/* <label className={'label'} htmlFor=\"email\">Email</label> */}\r\n                        {email.hasError && <p className={'alert'}>Email should be valid!</p>}\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`input ${email.hasError && 'input-alert'}`}\r\n                            value={email.value}\r\n                            onChange={email.onChange}\r\n                            onBlur={email.onBlur}\r\n                            placeholder=\"E-mail Address\"\r\n                            id=\"email\"\r\n                        />\r\n                    </div>\r\n\r\n                    <button\r\n                        disabled={!formIsValid || isLoading}\r\n                        className={`btn action-btn reset-pass`}\r\n                    >\r\n                        Send password reset email\r\n                    </button>\r\n                </form>\r\n                <div className=\"link anchor\">\r\n                    Don't have an account? <Link className=\"link\" to=\"/register\">Register</Link> now.\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}