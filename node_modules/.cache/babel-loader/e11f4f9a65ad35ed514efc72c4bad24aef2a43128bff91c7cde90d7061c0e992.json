{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Final PRoject -LMDb\\\\lmdb\\\\src\\\\components\\\\auth\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../../firebase_setup/firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"./Login.css\";\nimport { logIn, registerWithGoogle } from \"../../../services/authService\";\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\nimport userValidation from \"../../../validationFunctions/userValidation\";\nimport { useInput } from \"../../../hooks/useInput\";\nimport styles from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const [loading] = useAuthState(auth);\n  const {\n    currentUser\n  } = useAuthContext();\n  const navigate = useNavigate();\n  const email = useInput(userValidation.isEmpty);\n  const password = useInput(userValidation.isEmpty);\n  const formIsValid = email.fieldIsValid && password.fieldIsValid;\n  useEffect(() => {\n    if (loading) {\n      // maybe trigger a loading screen\n      return;\n    }\n    if (currentUser) {\n      console.log('already logged in');\n      navigate('/');\n    }\n    ;\n  }, [currentUser]);\n  const onLoginHandler = async e => {\n    e.preventDefault();\n    const result = await logIn(email, password);\n    navigate('/');\n    return result;\n  };\n  const onGoogleRegisterHandler = () => {\n    registerWithGoogle();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: onLoginHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: 'heading',\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'input-box',\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: 'label',\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `input ${email.hasError && 'input-alert'}`,\n            value: email.value,\n            onChange: email.onChange,\n            onBlur: email.onBlur,\n            placeholder: \"E-mail Address\",\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'input-box',\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: 'label',\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: `input ${email.hasError && 'input-alert'}`,\n            value: password.value,\n            onChange: password.onChange,\n            onBlur: password.onBlur,\n            placeholder: \"Password\",\n            id: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${styles['google-btn']}`,\n        onClick: onGoogleRegisterHandler,\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__link\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: \"/reset\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__link\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 44\n        }, this), \" now.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"X1XE0vkRy7dhX0JDho1gRsoiNQU=\", false, function () {\n  return [useAuthState, useAuthContext, useNavigate, useInput, useInput];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","Link","useNavigate","auth","useAuthState","logIn","registerWithGoogle","useAuthContext","userValidation","useInput","styles","jsxDEV","_jsxDEV","Login","_s","loading","currentUser","navigate","email","isEmpty","password","formIsValid","fieldIsValid","console","log","onLoginHandler","e","preventDefault","result","onGoogleRegisterHandler","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","hasError","value","onChange","onBlur","placeholder","id","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/components/auth/Login/Login.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../../firebase_setup/firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport \"./Login.css\";\r\nimport { logIn, registerWithGoogle } from \"../../../services/authService\";\r\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\r\nimport userValidation from \"../../../validationFunctions/userValidation\";\r\nimport { useInput } from \"../../../hooks/useInput\";\r\nimport styles from './Login.module.css';\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const [loading] = useAuthState(auth);\r\n    const { currentUser } = useAuthContext();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const email = useInput(userValidation.isEmpty);\r\n    const password = useInput(userValidation.isEmpty);\r\n\r\n    const formIsValid = email.fieldIsValid && password.fieldIsValid;\r\n\r\n\r\n    useEffect(() => {\r\n        if (loading) {\r\n            // maybe trigger a loading screen\r\n            return;\r\n        }\r\n        if (currentUser) {\r\n            console.log('already logged in');\r\n            navigate('/');\r\n        };\r\n    }, [currentUser]);\r\n\r\n    const onLoginHandler = async (e) => {\r\n        e.preventDefault();\r\n        const result = await logIn(email, password);\r\n        navigate('/');\r\n        return result;\r\n    };\r\n\r\n    const onGoogleRegisterHandler = () => {\r\n        registerWithGoogle();\r\n    };\r\n\r\n    return (\r\n        <section className=\"form-section\">\r\n            <div className=\"login__container\">\r\n                <form className=\"form\" onSubmit={onLoginHandler}>\r\n                    <h2 className={'heading'}>Login</h2>\r\n                    <div className={'input-box'}>\r\n                        <label className={'label'} htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`input ${email.hasError && 'input-alert'}`}\r\n                            value={email.value}\r\n                            onChange={email.onChange}\r\n                            onBlur={email.onBlur}\r\n                            placeholder=\"E-mail Address\"\r\n                            id=\"email\"\r\n                        />\r\n                    </div>\r\n                    <div className={'input-box'}>\r\n                        <label className={'label'} htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className={`input ${email.hasError && 'input-alert'}`}\r\n                            value={password.value}\r\n                            onChange={password.onChange}\r\n                            onBlur={password.onBlur}\r\n                            placeholder=\"Password\"\r\n                            id=\"password\"\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        className=\"btn\"\r\n                    >\r\n                        Login\r\n                    </button>\r\n                </form>\r\n                <button className={`btn ${styles['google-btn']}`} onClick={onGoogleRegisterHandler}>\r\n                    Login with Google\r\n                </button>\r\n                <div className=\"login__link\">\r\n                    <Link className=\"link\" to=\"/reset\">Forgot Password</Link>\r\n                </div>\r\n                <div className=\"login__link\">\r\n                    Don't have an account? <Link className=\"link\" to=\"/register\">Register</Link> now.\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}