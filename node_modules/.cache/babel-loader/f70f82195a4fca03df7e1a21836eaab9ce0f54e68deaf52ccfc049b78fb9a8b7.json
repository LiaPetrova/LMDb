{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Final PRoject -LMDb\\\\lmdb\\\\src\\\\components\\\\auth\\\\Reset\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\nimport { auth } from \"../../../firebase_setup/firebase\";\nimport { useInput } from \"../../../hooks/useInput\";\nimport { sendPasswordReset } from \"../../../services/authService\";\nimport userValidation from \"../../../validationFunctions/userValidation\";\nimport \"./Reset.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reset() {\n  _s();\n  const email = useInput(userValidation.emailIsValid);\n  const [loading, error] = useAuthState(auth);\n  const {\n    currentUser\n  } = useAuthContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const formIsValid = email.fieldIsValid;\n  useEffect(() => {\n    if (currentUser.uid) {\n      navigate(\"/\");\n    }\n  }, [currentUser, loading]);\n  const onPasswordResetHandler = () => {\n    if (formIsValid) {\n      sendPasswordReset(email.value);\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form-section auth\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: onPasswordResetHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: 'heading',\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'input-box',\n          children: [email.hasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: 'alert',\n            children: \"Email should be valid!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `input ${email.hasError && 'input-alert'}`,\n            value: email.value,\n            onChange: email.onChange,\n            onBlur: email.onBlur,\n            placeholder: \"E-mail Address\",\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid || isLoading,\n          className: \"btn action-btn\",\n          children: \"Send password reset email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link anchor\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 40\n        }, this), \" now.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this)\n  // <div className=\"reset\">\n  //     <div className=\"reset__container\">\n  //         <input\n  //             type=\"text\"\n  //             className=\"reset__textBox\"\n  //             value={email}\n  //             onChange={(e) => setEmail(e.target.value)}\n  //             placeholder=\"E-mail Address\"\n  //         />\n  //         <button\n  //             className=\"reset__btn\"\n  //             onClick={() => sendPasswordReset(email)}\n  //         >\n  //             Send password reset email\n  //         </button>\n  //         <div>\n  //             Don't have an account? <Link to=\"/register\">Register</Link> now.\n  //         </div>\n  //     </div>\n  // </div>\n  ;\n}\n_s(Reset, \"sX5VglI1zXSy75K06YMGhmvN3ek=\", false, function () {\n  return [useInput, useAuthState, useAuthContext, useNavigate];\n});\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useEffect","useState","useAuthState","useNavigate","Link","useAuthContext","auth","useInput","sendPasswordReset","userValidation","jsxDEV","_jsxDEV","Reset","_s","email","emailIsValid","loading","error","currentUser","isLoading","setIsLoading","navigate","formIsValid","fieldIsValid","uid","onPasswordResetHandler","value","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","hasError","type","onChange","onBlur","placeholder","id","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/components/auth/Reset/Reset.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\r\nimport { auth } from \"../../../firebase_setup/firebase\";\r\nimport { useInput } from \"../../../hooks/useInput\";\r\nimport { sendPasswordReset } from \"../../../services/authService\";\r\nimport userValidation from \"../../../validationFunctions/userValidation\";\r\nimport \"./Reset.css\";\r\nfunction Reset() {\r\n    const email = useInput(userValidation.emailIsValid);\r\n\r\n    const [ loading, error] = useAuthState(auth);\r\n    const { currentUser } = useAuthContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const formIsValid = email.fieldIsValid;\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser.uid) {\r\n            navigate(\"/\");\r\n        }\r\n    }, [currentUser, loading]);\r\n\r\n    const onPasswordResetHandler = () => {\r\n        if(formIsValid) {\r\n            sendPasswordReset(email.value);\r\n        };\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"form-section auth\">\r\n        <div className=\"login__container\">\r\n            <form className=\"form\" onSubmit={onPasswordResetHandler}>\r\n                <h2 className={'heading'}>Reset Password</h2>\r\n                <div className={'input-box'}>\r\n                    {/* <label className={'label'} htmlFor=\"email\">Email</label> */}\r\n                    {email.hasError && <p className={'alert'}>Email should be valid!</p>}\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`input ${email.hasError && 'input-alert'}`}\r\n                        value={email.value}\r\n                        onChange={email.onChange}\r\n                        onBlur={email.onBlur}\r\n                        placeholder=\"E-mail Address\"\r\n                        id=\"email\"\r\n                    />\r\n                </div>\r\n                \r\n                <button\r\n                disabled={!formIsValid || isLoading}\r\n                    className=\"btn action-btn\"\r\n                >\r\n                    Send password reset email\r\n                </button>\r\n            </form>\r\n            <div className=\"link anchor\">\r\n                Don't have an account? <Link className=\"link\" to=\"/register\">Register</Link> now.\r\n            </div>\r\n        </div>\r\n\r\n    </section>\r\n        // <div className=\"reset\">\r\n        //     <div className=\"reset__container\">\r\n        //         <input\r\n        //             type=\"text\"\r\n        //             className=\"reset__textBox\"\r\n        //             value={email}\r\n        //             onChange={(e) => setEmail(e.target.value)}\r\n        //             placeholder=\"E-mail Address\"\r\n        //         />\r\n        //         <button\r\n        //             className=\"reset__btn\"\r\n        //             onClick={() => sendPasswordReset(email)}\r\n        //         >\r\n        //             Send password reset email\r\n        //         </button>\r\n        //         <div>\r\n        //             Don't have an account? <Link to=\"/register\">Register</Link> now.\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n    );\r\n}\r\nexport default Reset;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}