{"ast":null,"code":"import { query } from \"express\";\nimport { addDoc, collection, getDocs, orderBy, serverTimestamp } from \"firebase/firestore\";\nimport { firestore } from \"../firebase_setup/firebase\";\nconst movieCollection = collection(firestore, \"movies\");\nconst seriesCollection = collection(firestore, \"series\");\nexport const addNewShow = async (type, showData) => {\n  let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\n  try {\n    await addDoc(collectionType, {\n      ...showData,\n      rating: '',\n      createdAt: serverTimestamp()\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nexport const getAll = async type => {\n  let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\n  const orderedQuery = query(collectionType, orderBy('createdAt', 'desc'));\n  try {\n    await getDocs(orderedQuery).then(docs => {\n      let arr = [];\n      docs.forEach(doc => {\n        let fields = doc.data();\n        arr.push({\n          id: doc.id,\n          fields: fields\n        });\n      });\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};","map":{"version":3,"names":["query","addDoc","collection","getDocs","orderBy","serverTimestamp","firestore","movieCollection","seriesCollection","addNewShow","type","showData","collectionType","rating","createdAt","err","console","error","alert","message","getAll","orderedQuery","then","docs","arr","forEach","doc","fields","data","push","id"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/services/showsService.js"],"sourcesContent":["import { query } from \"express\";\r\nimport { addDoc, collection, getDocs, orderBy, serverTimestamp } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase_setup/firebase\";\r\n\r\nconst movieCollection = collection(firestore, \"movies\");\r\nconst seriesCollection = collection(firestore, \"series\");\r\n\r\nexport const addNewShow = async (type, showData) => {\r\n    let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\r\n    try{\r\n    await addDoc(collectionType, {\r\n        ...showData,\r\n        rating: '',\r\n        createdAt: serverTimestamp()\r\n    });\r\n} catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n}\r\n};\r\n\r\nexport const getAll = async (type) => {\r\n    let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\r\n    \r\n    const orderedQuery = query(collectionType, orderBy('createdAt', 'desc'));\r\n    try {\r\n        await getDocs(orderedQuery)\r\n            .then(docs => {\r\n                let arr = [];\r\n\r\n                docs.forEach((doc) => {\r\n                    let fields = doc.data();\r\n\r\n                    arr.push({\r\n                        id: doc.id,\r\n                        fields: fields\r\n                    });\r\n                }); \r\n            });\r\n    \r\n    } catch(err) {\r\n        console.error(err);\r\n    alert(err.message);\r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,SAAS;AAC/B,SAASC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAEC,eAAe,QAAQ,oBAAoB;AAC1F,SAASC,SAAS,QAAQ,4BAA4B;AAEtD,MAAMC,eAAe,GAAGL,UAAU,CAACI,SAAS,EAAE,QAAQ,CAAC;AACvD,MAAME,gBAAgB,GAAGN,UAAU,CAACI,SAAS,EAAE,QAAQ,CAAC;AAExD,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;EAChD,IAAIC,cAAc,GAAGF,IAAI,KAAK,OAAO,GAAGH,eAAe,GAAGC,gBAAgB;EAC1E,IAAG;IACH,MAAMP,MAAM,CAACW,cAAc,EAAE;MACzB,GAAGD,QAAQ;MACXE,MAAM,EAAE,EAAE;MACVC,SAAS,EAAET,eAAe;IAC9B,CAAC,CAAC;EACN,CAAC,CAAC,OAAOU,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACtB;AACA,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAOV,IAAI,IAAK;EAClC,IAAIE,cAAc,GAAGF,IAAI,KAAK,OAAO,GAAGH,eAAe,GAAGC,gBAAgB;EAE1E,MAAMa,YAAY,GAAGrB,KAAK,CAACY,cAAc,EAAER,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;EACxE,IAAI;IACA,MAAMD,OAAO,CAACkB,YAAY,CAAC,CACtBC,IAAI,CAACC,IAAI,IAAI;MACV,IAAIC,GAAG,GAAG,EAAE;MAEZD,IAAI,CAACE,OAAO,CAAEC,GAAG,IAAK;QAClB,IAAIC,MAAM,GAAGD,GAAG,CAACE,IAAI,EAAE;QAEvBJ,GAAG,CAACK,IAAI,CAAC;UACLC,EAAE,EAAEJ,GAAG,CAACI,EAAE;UACVH,MAAM,EAAEA;QACZ,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;EAEV,CAAC,CAAC,OAAMZ,GAAG,EAAE;IACTC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACtBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EAClB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}