{"ast":null,"code":"import { auth, firestore, app } from '../firebase_setup/firebase';\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(firestore, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(firestore, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    const result = await signInWithEmailAndPassword(auth, email, password);\n    console.log(result);\n    return result;\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(firestore, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logout = () => {\n  signOut(auth);\n};\nexport { signInWithGoogle, logInWithEmailAndPassword, registerWithEmailAndPassword, sendPasswordReset, logout };","map":{"version":3,"names":["auth","firestore","app","googleProvider","GoogleAuthProvider","signInWithGoogle","res","signInWithPopup","user","q","query","collection","where","uid","docs","getDocs","length","addDoc","name","displayName","authProvider","email","err","console","error","alert","message","logInWithEmailAndPassword","password","result","signInWithEmailAndPassword","log","registerWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordReset","sendPasswordResetEmail","logout","signOut"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/services/authService.js"],"sourcesContent":["import { auth, firestore, app } from '../firebase_setup/firebase';\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    const res = await signInWithPopup(auth, googleProvider);\r\n    const user = res.user;\r\n    const q = query(collection(firestore, \"users\"), where(\"uid\", \"==\", user.uid));\r\n    const docs = await getDocs(q);\r\n    if (docs.docs.length === 0) {\r\n      await addDoc(collection(firestore, \"users\"), {\r\n        uid: user.uid,\r\n        name: user.displayName,\r\n        authProvider: \"google\",\r\n        email: user.email,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\nconst logInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n   const result = await signInWithEmailAndPassword(auth, email, password);\r\n   console.log(result);\r\n   return result;\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n  try {\r\n    const res = await createUserWithEmailAndPassword(auth, email, password);\r\n    const user = res.user;\r\n    await addDoc(collection(firestore, \"users\"), {\r\n      uid: user.uid,\r\n      name,\r\n      authProvider: \"local\",\r\n      email,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\nconst sendPasswordReset = async (email) => {\r\n  try {\r\n    await sendPasswordResetEmail(auth, email);\r\n    alert(\"Password reset link sent!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\nconst logout = () => {\r\n  signOut(auth);\r\n};\r\nexport {\r\n  signInWithGoogle,\r\n  logInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n  sendPasswordReset,\r\n  logout,\r\n};"],"mappings":"AAAA,SAASA,IAAI,EAAEC,SAAS,EAAEC,GAAG,QAAQ,4BAA4B;AAEjE,MAAMC,cAAc,GAAG,IAAIC,kBAAkB,EAAE;AAC/C,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,eAAe,CAACP,IAAI,EAAEG,cAAc,CAAC;IACvD,MAAMK,IAAI,GAAGF,GAAG,CAACE,IAAI;IACrB,MAAMC,CAAC,GAAGC,KAAK,CAACC,UAAU,CAACV,SAAS,EAAE,OAAO,CAAC,EAAEW,KAAK,CAAC,KAAK,EAAE,IAAI,EAAEJ,IAAI,CAACK,GAAG,CAAC,CAAC;IAC7E,MAAMC,IAAI,GAAG,MAAMC,OAAO,CAACN,CAAC,CAAC;IAC7B,IAAIK,IAAI,CAACA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;MAC1B,MAAMC,MAAM,CAACN,UAAU,CAACV,SAAS,EAAE,OAAO,CAAC,EAAE;QAC3CY,GAAG,EAAEL,IAAI,CAACK,GAAG;QACbK,IAAI,EAAEV,IAAI,CAACW,WAAW;QACtBC,YAAY,EAAE,QAAQ;QACtBC,KAAK,EAAEb,IAAI,CAACa;MACd,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACpB;AACF,CAAC;AACD,MAAMC,yBAAyB,GAAG,MAAAA,CAAON,KAAK,EAAEO,QAAQ,KAAK;EAC3D,IAAI;IACH,MAAMC,MAAM,GAAG,MAAMC,0BAA0B,CAAC9B,IAAI,EAAEqB,KAAK,EAAEO,QAAQ,CAAC;IACtEL,OAAO,CAACQ,GAAG,CAACF,MAAM,CAAC;IACnB,OAAOA,MAAM;EACd,CAAC,CAAC,OAAOP,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACpB;AACF,CAAC;AACD,MAAMM,4BAA4B,GAAG,MAAAA,CAAOd,IAAI,EAAEG,KAAK,EAAEO,QAAQ,KAAK;EACpE,IAAI;IACF,MAAMtB,GAAG,GAAG,MAAM2B,8BAA8B,CAACjC,IAAI,EAAEqB,KAAK,EAAEO,QAAQ,CAAC;IACvE,MAAMpB,IAAI,GAAGF,GAAG,CAACE,IAAI;IACrB,MAAMS,MAAM,CAACN,UAAU,CAACV,SAAS,EAAE,OAAO,CAAC,EAAE;MAC3CY,GAAG,EAAEL,IAAI,CAACK,GAAG;MACbK,IAAI;MACJE,YAAY,EAAE,OAAO;MACrBC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACpB;AACF,CAAC;AACD,MAAMQ,iBAAiB,GAAG,MAAOb,KAAK,IAAK;EACzC,IAAI;IACF,MAAMc,sBAAsB,CAACnC,IAAI,EAAEqB,KAAK,CAAC;IACzCI,KAAK,CAAC,2BAA2B,CAAC;EACpC,CAAC,CAAC,OAAOH,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACpB;AACF,CAAC;AACD,MAAMU,MAAM,GAAGA,CAAA,KAAM;EACnBC,OAAO,CAACrC,IAAI,CAAC;AACf,CAAC;AACD,SACEK,gBAAgB,EAChBsB,yBAAyB,EACzBK,4BAA4B,EAC5BE,iBAAiB,EACjBE,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}