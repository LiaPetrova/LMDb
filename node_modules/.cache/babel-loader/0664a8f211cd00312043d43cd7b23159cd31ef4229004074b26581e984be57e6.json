{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Final PRoject -LMDb\\\\lmdb\\\\src\\\\components\\\\CommentSection\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport { getAllComments, postComment } from '../../services/commentsService';\nimport { CommentItem } from './CommentItem/CommentItem';\nimport { DeleteModal } from './CommentItem/DeleteModal/DeleteModal';\nimport styles from './CommentSection.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CommentSection = _ref => {\n  _s();\n  let {\n    showId\n  } = _ref;\n  const [openWriteReview, setOpenWriteReview] = useState(false);\n  const [commentContent, setCommentContent] = useState('');\n  const {\n    currentUser\n  } = useAuthContext();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    getAllComments(showId).then(result => {\n      console.log(result);\n      setComments(result);\n    });\n  }, [showId]);\n  const changeHandler = e => {\n    setCommentContent(e.target.value);\n  };\n  const postCommentHandler = async () => {\n    await postComment(showId, currentUser.uid, commentContent).then(result => setComments(state => [...state, result]));\n    setCommentContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DeleteModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles['comment-section'],\n      children: [comments.length > 0 ? comments.map(x => /*#__PURE__*/_jsxDEV(CommentItem, {\n        setOpenWriteReview: setOpenWriteReview,\n        comment: x,\n        userId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles['no-results'],\n        children: \"Nothing to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid) && !openWriteReview && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOpenWriteReview(true),\n        className: `btn ${styles['btn-write-review']}`,\n        children: \"Write your review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 58\n      }, this), openWriteReview && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['write-review'],\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `box-shadow`,\n          onChange: changeHandler,\n          value: commentContent,\n          name: \"comment\",\n          id: \"comment\",\n          cols: \"30\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => postCommentHandler(),\n          className: `btn`,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CommentSection, \"BhStyOfuW5aaY2tOKAZf9Un8S8w=\", false, function () {\n  return [useAuthContext];\n});\n_c = CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["useEffect","useState","useAuthContext","getAllComments","postComment","CommentItem","DeleteModal","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentSection","_ref","_s","showId","openWriteReview","setOpenWriteReview","commentContent","setCommentContent","currentUser","comments","setComments","then","result","console","log","changeHandler","e","target","value","postCommentHandler","uid","state","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","x","comment","userId","id","onClick","onChange","name","cols","rows","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/components/CommentSection/CommentSection.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useAuthContext } from '../../contexts/AuthContext';\r\nimport { getAllComments, postComment } from '../../services/commentsService';\r\nimport { CommentItem } from './CommentItem/CommentItem';\r\nimport { DeleteModal } from './CommentItem/DeleteModal/DeleteModal';\r\nimport styles from './CommentSection.module.css';\r\n\r\nexport const CommentSection = ({ showId }) => {\r\n\r\n    const [openWriteReview, setOpenWriteReview] = useState(false);\r\n    const [commentContent, setCommentContent] = useState('');\r\n    const { currentUser } = useAuthContext();\r\n    const [comments, setComments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllComments(showId)\r\n            .then(result => {\r\n                console.log(result);\r\n                setComments(result)\r\n            });\r\n\r\n    }, [showId]);\r\n\r\n\r\n\r\n    const changeHandler = (e) => {\r\n        setCommentContent(e.target.value)\r\n    };\r\n\r\n    const postCommentHandler = async () => {\r\n        await postComment(showId, currentUser.uid, commentContent)\r\n            .then(result => setComments(state => [...state, result]));\r\n        setCommentContent('');\r\n    }\r\n    return (\r\n        <>\r\n            <DeleteModal />\r\n            <section className={styles['comment-section']}>\r\n                {comments.length > 0 ? comments.map(x =>\r\n                    <CommentItem\r\n                        setOpenWriteReview={setOpenWriteReview}\r\n                        comment={x}\r\n                        key={x.id}\r\n                        userId={currentUser?.uid}\r\n                    />)\r\n                    : <p className={styles['no-results']}>Nothing to show</p>}\r\n                {currentUser?.uid && !openWriteReview && <button\r\n                    onClick={() => setOpenWriteReview(true)}\r\n                    className={`btn ${styles['btn-write-review']}`}>\r\n                    Write your review\r\n                </button>}\r\n                {openWriteReview &&\r\n                    <div className={styles['write-review']}>\r\n                        <textarea className={`box-shadow`} onChange={changeHandler} value={commentContent} name=\"comment\" id=\"comment\" cols=\"30\" rows=\"10\"></textarea>\r\n                        <button\r\n                            onClick={() => postCommentHandler()}\r\n                            className={`btn`}>\r\n                            Send\r\n                        </button>\r\n                    </div>}\r\n            </section>\r\n        </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}