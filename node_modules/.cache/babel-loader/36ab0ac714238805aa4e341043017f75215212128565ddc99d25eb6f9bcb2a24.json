{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Final PRoject -LMDb\\\\lmdb\\\\src\\\\components\\\\auth\\\\Reset\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\nimport { auth } from \"../../../firebase_setup/firebase\";\nimport { useInput } from \"../../../hooks/useInput\";\nimport { sendPasswordReset } from \"../../../services/authService\";\nimport userValidation from \"../../../validationFunctions/userValidation\";\nimport styles from './Reset.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Reset = () => {\n  _s();\n  const email = useInput(userValidation.emailIsValid);\n  const [loading, error] = useAuthState(auth);\n  const {\n    currentUser\n  } = useAuthContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [notificationModal, setNotificationModal] = useState(false);\n  const navigate = useNavigate();\n  const formIsValid = email.fieldIsValid;\n  useEffect(() => {\n    if (currentUser !== null && currentUser !== void 0 && currentUser.uid) {\n      navigate(\"/\");\n    }\n  }, [currentUser, loading]);\n  const onPasswordResetHandler = () => {\n    if (formIsValid) {\n      sendPasswordReset(email.value);\n      setNotificationModal(true);\n    }\n    ;\n  };\n  const closeNotificationModal = () => {\n    setNotificationModal(false);\n    navigate('/login');\n  };\n  return (\n    /*#__PURE__*/\n    //         import styles from './DeleteModal.module.css'\n    // export const DeleteModal = ({\n    //     closeDeleteModal,\n    //     deleteModal,\n    //     deleteCommentHandler\n    // }) => {\n    //     const outsideClickHandler = (e) => {\n    //         if (e.target.tagName === 'SECTION') {\n    //             setTimeout(() => closeDeleteModal(), 300)\n    //             // closeRateModal();\n    //         }\n    //     };\n    //     return (\n    _jsxDEV(_Fragment, {\n      children: [notificationModal && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: `${styles.modal} ${notificationModal ? styles['active'] : styles['inactive']}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles['modal-content'],\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: closeNotificationModal,\n            className: styles['close'],\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.title,\n            children: \"We have send you an email!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles['action-btns'],\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => closeNotificationModal(),\n              className: `btn`,\n              children: \"Okey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"form-section auth\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: onPasswordResetHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: 'heading',\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'input-box',\n            children: [email.hasError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: 'alert',\n              children: \"Email should be valid!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `input ${email.hasError && 'input-alert'}`,\n              value: email.value,\n              onChange: email.onChange,\n              onBlur: email.onBlur,\n              placeholder: \"E-mail Address\",\n              id: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !formIsValid || isLoading,\n            className: \"btn action-btn\",\n            children: \"Send password reset email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"link anchor\",\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 44\n          }, this), \" now.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  );\n};\n_s(Reset, \"ZCKX1zhLG+H6uxZksfhR13PeCHs=\", false, function () {\n  return [useInput, useAuthState, useAuthContext, useNavigate];\n});\n_c = Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useEffect","useState","useAuthState","useNavigate","Link","useAuthContext","auth","useInput","sendPasswordReset","userValidation","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Reset","_s","email","emailIsValid","loading","error","currentUser","isLoading","setIsLoading","notificationModal","setNotificationModal","navigate","formIsValid","fieldIsValid","uid","onPasswordResetHandler","value","closeNotificationModal","children","className","modal","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","onSubmit","hasError","type","onChange","onBlur","placeholder","id","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/components/auth/Reset/Reset.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\r\nimport { auth } from \"../../../firebase_setup/firebase\";\r\nimport { useInput } from \"../../../hooks/useInput\";\r\nimport { sendPasswordReset } from \"../../../services/authService\";\r\nimport userValidation from \"../../../validationFunctions/userValidation\";\r\nimport styles from './Reset.module.css';\r\n\r\nexport const Reset = () => {\r\n    const email = useInput(userValidation.emailIsValid);\r\n\r\n    const [loading, error] = useAuthState(auth);\r\n    const { currentUser } = useAuthContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [notificationModal, setNotificationModal] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const formIsValid = email.fieldIsValid;\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser?.uid) {\r\n            navigate(\"/\");\r\n        }\r\n    }, [currentUser, loading]);\r\n\r\n    const onPasswordResetHandler = () => {\r\n        if (formIsValid) {\r\n            sendPasswordReset(email.value);\r\n            setNotificationModal(true);\r\n        };\r\n    };\r\n\r\n    const closeNotificationModal = () => {\r\n        setNotificationModal(false);\r\n        navigate('/login');\r\n    }\r\n\r\n\r\n    return (\r\n        //         import styles from './DeleteModal.module.css'\r\n\r\n        // export const DeleteModal = ({\r\n        //     closeDeleteModal,\r\n        //     deleteModal,\r\n        //     deleteCommentHandler\r\n        // }) => {\r\n\r\n        //     const outsideClickHandler = (e) => {\r\n        //         if (e.target.tagName === 'SECTION') {\r\n        //             setTimeout(() => closeDeleteModal(), 300)\r\n        //             // closeRateModal();\r\n        //         }\r\n        //     };\r\n\r\n        //     return (\r\n        <>\r\n            {notificationModal && <section className={`${styles.modal} ${notificationModal ? styles['active'] : styles['inactive']}`} >\r\n                <div className={styles['modal-content']}>\r\n                    <span onClick={closeNotificationModal} className={styles['close']}>&times;</span>\r\n                    <h2 className={styles.title}>We have send you an email!</h2>\r\n\r\n                    <div className={styles['action-btns']}>\r\n                        <button\r\n                            onClick={() => closeNotificationModal()}\r\n                            className={`btn`}\r\n                        >Okey\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </section>}\r\n\r\n            <section className=\"form-section auth\">\r\n                <form className=\"form\" onSubmit={onPasswordResetHandler}>\r\n                    <h2 className={'heading'}>Reset Password</h2>\r\n                    <div className={'input-box'}>\r\n                        {/* <label className={'label'} htmlFor=\"email\">Email</label> */}\r\n                        {email.hasError && <p className={'alert'}>Email should be valid!</p>}\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`input ${email.hasError && 'input-alert'}`}\r\n                            value={email.value}\r\n                            onChange={email.onChange}\r\n                            onBlur={email.onBlur}\r\n                            placeholder=\"E-mail Address\"\r\n                            id=\"email\"\r\n                        />\r\n                    </div>\r\n\r\n                    <button\r\n                        disabled={!formIsValid || isLoading}\r\n                        className=\"btn action-btn\"\r\n                    >\r\n                        Send password reset email\r\n                    </button>\r\n                </form>\r\n                <div className=\"link anchor\">\r\n                    Don't have an account? <Link className=\"link\" to=\"/register\">Register</Link> now.\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}