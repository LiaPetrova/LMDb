{"ast":null,"code":"import validator from 'validator';\nconst emailIsValid = value => validator.isEmail(value);\nconst passwordIsLength = value => validator.isLength(value, {\n  min: 6\n});\nconst nameIsLength = value => validator.isLength(value, {\n  min: 5\n});\nconst isEqual = (pass, rePass) => validator.equals(pass, rePass);\nconst isEmpty = value => !validator.isEmpty(value);\nconst userValidation = {\n  emailIsValid,\n  passwordIsLength,\n  nameIsLength,\n  isEqual,\n  isEmpty\n};\nexport default userValidation;","map":{"version":3,"names":["validator","emailIsValid","value","isEmail","passwordIsLength","isLength","min","nameIsLength","isEqual","pass","rePass","equals","isEmpty","userValidation"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/validationFunctions/userValidation.js"],"sourcesContent":["import validator from 'validator';\r\n\r\n\r\nconst emailIsValid = (value) => validator.isEmail(value);\r\n\r\nconst passwordIsLength = (value) => validator.isLength(value, { min: 6 });\r\n\r\nconst nameIsLength = (value) => validator.isLength(value, { min: 5 });\r\n\r\nconst isEqual = (pass, rePass) => validator.equals(pass, rePass);\r\n\r\nconst isEmpty = (value) => !(validator.isEmpty(value));\r\n\r\nconst userValidation = {\r\n    emailIsValid,\r\n    passwordIsLength,\r\n    nameIsLength,\r\n    isEqual,\r\n    isEmpty,\r\n};\r\n\r\n\r\nexport default userValidation;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,WAAW;AAGjC,MAAMC,YAAY,GAAIC,KAAK,IAAKF,SAAS,CAACG,OAAO,CAACD,KAAK,CAAC;AAExD,MAAME,gBAAgB,GAAIF,KAAK,IAAKF,SAAS,CAACK,QAAQ,CAACH,KAAK,EAAE;EAAEI,GAAG,EAAE;AAAE,CAAC,CAAC;AAEzE,MAAMC,YAAY,GAAIL,KAAK,IAAKF,SAAS,CAACK,QAAQ,CAACH,KAAK,EAAE;EAAEI,GAAG,EAAE;AAAE,CAAC,CAAC;AAErE,MAAME,OAAO,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAKV,SAAS,CAACW,MAAM,CAACF,IAAI,EAAEC,MAAM,CAAC;AAEhE,MAAME,OAAO,GAAIV,KAAK,IAAK,CAAEF,SAAS,CAACY,OAAO,CAACV,KAAK,CAAE;AAEtD,MAAMW,cAAc,GAAG;EACnBZ,YAAY;EACZG,gBAAgB;EAChBG,YAAY;EACZC,OAAO;EACPI;AACJ,CAAC;AAGD,eAAeC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}