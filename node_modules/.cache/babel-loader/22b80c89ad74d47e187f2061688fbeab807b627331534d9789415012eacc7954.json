{"ast":null,"code":"import { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { firestore } from \"../firebase_setup/firebase\";\nconst movieCollection = collection(firestore, \"movies\");\nconst seriesCollection = collection(firestore, \"series\");\nexport const addNewShow = async (type, showData) => {\n  let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\n  try {\n    await addDoc(collectionType, {\n      ...showData,\n      rating: '',\n      createdAt: serverTimestamp()\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};","map":{"version":3,"names":["addDoc","collection","serverTimestamp","firestore","movieCollection","seriesCollection","addNewShow","type","showData","collectionType","rating","createdAt","err","console","error","alert","message"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/services/showsService.js"],"sourcesContent":["import { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase_setup/firebase\";\r\n\r\nconst movieCollection = collection(firestore, \"movies\");\r\nconst seriesCollection = collection(firestore, \"series\");\r\n\r\nexport const addNewShow = async (type, showData) => {\r\n    let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\r\n    try{\r\n    await addDoc(collectionType, {\r\n        ...showData,\r\n        rating: '',\r\n        createdAt: serverTimestamp()\r\n    });\r\n} catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n}\r\n};\r\n\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,UAAU,EAAEC,eAAe,QAAQ,oBAAoB;AACxE,SAASC,SAAS,QAAQ,4BAA4B;AAEtD,MAAMC,eAAe,GAAGH,UAAU,CAACE,SAAS,EAAE,QAAQ,CAAC;AACvD,MAAME,gBAAgB,GAAGJ,UAAU,CAACE,SAAS,EAAE,QAAQ,CAAC;AAExD,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;EAChD,IAAIC,cAAc,GAAGF,IAAI,KAAK,OAAO,GAAGH,eAAe,GAAGC,gBAAgB;EAC1E,IAAG;IACH,MAAML,MAAM,CAACS,cAAc,EAAE;MACzB,GAAGD,QAAQ;MACXE,MAAM,EAAE,EAAE;MACVC,SAAS,EAAET,eAAe;IAC9B,CAAC,CAAC;EACN,CAAC,CAAC,OAAOU,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;EACtB;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}