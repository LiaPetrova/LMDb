{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Final PRoject -LMDb\\\\lmdb\\\\src\\\\pages\\\\GenreCatalog\\\\GenreCatalog.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ShowCard } from '../../components/shared/ShowCard/ShowCard';\nimport { useShowsContext } from '../../contexts/ShowsConext';\nimport styles from './GenresCatalog.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GenreCatalog = () => {\n  _s();\n  const {\n    allShowsList,\n    watchlist,\n    setWatchlist\n  } = useShowsContext();\n  const {\n    genre\n  } = useParams();\n  const [filteredShows, setFilteredShows] = useState([]);\n  useEffect(() => {\n    setFilteredShows(allShowsList.filter(x => x.fields.genreList.includes(`${genre.slice(0, 1).toUpperCase()}${genre.slice(1)}`)));\n  }, [allShowsList, genre]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.section,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.shows,\n      children: filteredShows.length > 0 ? filteredShows.map(x => /*#__PURE__*/_jsxDEV(ShowCard, {\n        show: x.fields,\n        id: x.id,\n        watchlist: watchlist,\n        setWatchlist: setWatchlist\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles['no-results'],\n        children: \"Nothing to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(GenreCatalog, \"KUbxtckiG1h9V6Or17enm9o5Sm4=\", false, function () {\n  return [useShowsContext, useParams];\n});\n_c = GenreCatalog;\nvar _c;\n$RefreshReg$(_c, \"GenreCatalog\");","map":{"version":3,"names":["useEffect","useState","useParams","ShowCard","useShowsContext","styles","jsxDEV","_jsxDEV","GenreCatalog","_s","allShowsList","watchlist","setWatchlist","genre","filteredShows","setFilteredShows","filter","x","fields","genreList","includes","slice","toUpperCase","className","section","children","shows","length","map","show","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Final PRoject -LMDb/lmdb/src/pages/GenreCatalog/GenreCatalog.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ShowCard } from '../../components/shared/ShowCard/ShowCard';\r\nimport { useShowsContext } from '../../contexts/ShowsConext';\r\nimport styles from './GenresCatalog.module.css';\r\n\r\nexport const GenreCatalog = () => {\r\n    const { allShowsList, watchlist, setWatchlist } = useShowsContext();\r\n    const { genre }  = useParams();\r\n    const [filteredShows, setFilteredShows] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setFilteredShows(allShowsList.filter(x => x.fields.genreList.includes(`${genre.slice(0,1).toUpperCase()}${genre.slice(1)}`)))\r\n    }, [allShowsList, genre]);\r\n    return (\r\n        <section className={styles.section}>\r\n            {/* <div className={styles['title-wrapper']}>\r\n                <h2 className={styles.title}>Browse throw newest movies</h2>\r\n            </div> */}\r\n        <div className={styles.shows}>\r\n            {filteredShows.length > 0 ? filteredShows.map(x =>\r\n                <ShowCard key={x.id} show={x.fields} id={x.id} watchlist={watchlist} setWatchlist={setWatchlist} />)\r\n                : <p className={styles['no-results']}>Nothing to show</p>}\r\n        </div>\r\n    </section>\r\n    );\r\n};"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,2CAA2C;AACpE,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGR,eAAe,EAAE;EACnE,MAAM;IAAES;EAAM,CAAC,GAAIX,SAAS,EAAE;EAC9B,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAItDD,SAAS,CAAC,MAAM;IACZe,gBAAgB,CAACL,YAAY,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAE,GAAEP,KAAK,CAACQ,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,WAAW,EAAG,GAAET,KAAK,CAACQ,KAAK,CAAC,CAAC,CAAE,EAAC,CAAC,CAAC,CAAC;EACjI,CAAC,EAAE,CAACX,YAAY,EAAEG,KAAK,CAAC,CAAC;EACzB,oBACIN,OAAA;IAASgB,SAAS,EAAElB,MAAM,CAACmB,OAAQ;IAAAC,QAAA,eAInClB,OAAA;MAAKgB,SAAS,EAAElB,MAAM,CAACqB,KAAM;MAAAD,QAAA,EACxBX,aAAa,CAACa,MAAM,GAAG,CAAC,GAAGb,aAAa,CAACc,GAAG,CAACX,CAAC,iBAC3CV,OAAA,CAACJ,QAAQ;QAAY0B,IAAI,EAAEZ,CAAC,CAACC,MAAO;QAACY,EAAE,EAAEb,CAAC,CAACa,EAAG;QAACnB,SAAS,EAAEA,SAAU;QAACC,YAAY,EAAEA;MAAa,GAAjFK,CAAC,CAACa,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAgF,CAAC,gBAClG3B,OAAA;QAAGgB,SAAS,EAAElB,MAAM,CAAC,YAAY,CAAE;QAAAoB,QAAA,EAAC;MAAe;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC3D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd,CAAC;AAACzB,EAAA,CAtBWD,YAAY;EAAA,QAC6BJ,eAAe,EAC9CF,SAAS;AAAA;AAAAiC,EAAA,GAFnB3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}