[{"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\firebase_setup\\firebase.js":"4","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\contexts\\AuthContext.js":"5","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\authService.js":"6","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\layout\\Header\\Header.js":"7","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Login\\Login.js":"8","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Logout\\Logout.js":"9","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Register\\Register.js":"10","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Reset\\Reset.js":"11","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Home\\Home.js":"12","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\Hero\\Hero.js":"13","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Admin\\AddNew\\AddNew.js":"14","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\showsService.js":"15","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\NewestMovies\\NewestMovies.js":"16","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\contexts\\ShowsConext.js":"17","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\shared\\ShowCard\\ShowCard.js":"18","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\NewestSeries\\NewestSeries.js":"19","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Watchlist\\Watchlist.js":"20","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\MoviesCatalog\\MoviesCatalog.js":"21","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\parsers.js":"22","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\SeriesCatalog\\SeriesCatalog.js":"23","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\ShowDetails\\ShowDetails.js":"24","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\RatingModal\\RatingModal.js":"25","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentSection.js":"26","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\commentsService.js":"27","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentItem\\CommentItem.js":"28","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\timeAgoHadler.js":"29","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentItem\\DeleteModal\\DeleteModal.js":"30","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\layout\\Header\\SearchPanel\\SearchPanel.js":"31","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\filterSearchResults.js":"32","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Admin\\EditShow\\EditShow.js":"33","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\hooks\\useInput.js":"34","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\validationFunctions\\showValidation.js":"35","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Genres\\Genres.js":"36","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Genres\\GenreCard\\GenreCard.js":"37","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\GenreCatalog\\GenreCatalog.js":"38","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\validationFunctions\\validationFunctions.js":"39"},{"size":588,"mtime":1678453763555,"results":"40","hashOfConfig":"41"},{"size":2292,"mtime":1680647393756,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1678362285368,"results":"43","hashOfConfig":"41"},{"size":725,"mtime":1678702216125,"results":"44","hashOfConfig":"41"},{"size":1265,"mtime":1680040331845,"results":"45","hashOfConfig":"41"},{"size":2505,"mtime":1680649104577,"results":"46","hashOfConfig":"41"},{"size":5956,"mtime":1680519280319,"results":"47","hashOfConfig":"41"},{"size":4033,"mtime":1680650186667,"results":"48","hashOfConfig":"41"},{"size":230,"mtime":1678712090926,"results":"49","hashOfConfig":"41"},{"size":7043,"mtime":1680650186667,"results":"50","hashOfConfig":"41"},{"size":3630,"mtime":1680650313062,"results":"51","hashOfConfig":"41"},{"size":608,"mtime":1679489879419,"results":"52","hashOfConfig":"41"},{"size":473,"mtime":1679348163053,"results":"53","hashOfConfig":"41"},{"size":11430,"mtime":1680643215197,"results":"54","hashOfConfig":"41"},{"size":5183,"mtime":1680525431009,"results":"55","hashOfConfig":"41"},{"size":1070,"mtime":1679525768982,"results":"56","hashOfConfig":"41"},{"size":2729,"mtime":1680364605102,"results":"57","hashOfConfig":"41"},{"size":6291,"mtime":1679852684386,"results":"58","hashOfConfig":"41"},{"size":1091,"mtime":1680641646715,"results":"59","hashOfConfig":"41"},{"size":931,"mtime":1679588891396,"results":"60","hashOfConfig":"41"},{"size":897,"mtime":1680640380481,"results":"61","hashOfConfig":"41"},{"size":624,"mtime":1679934414100,"results":"62","hashOfConfig":"41"},{"size":849,"mtime":1680640321121,"results":"63","hashOfConfig":"41"},{"size":13856,"mtime":1680561073955,"results":"64","hashOfConfig":"41"},{"size":3108,"mtime":1680519127937,"results":"65","hashOfConfig":"41"},{"size":3532,"mtime":1680650326247,"results":"66","hashOfConfig":"41"},{"size":3615,"mtime":1680358792770,"results":"67","hashOfConfig":"41"},{"size":7412,"mtime":1680519062461,"results":"68","hashOfConfig":"41"},{"size":1688,"mtime":1680300650606,"results":"69","hashOfConfig":"41"},{"size":1278,"mtime":1680364965078,"results":"70","hashOfConfig":"41"},{"size":3296,"mtime":1680639768199,"results":"71","hashOfConfig":"41"},{"size":227,"mtime":1680364961853,"results":"72","hashOfConfig":"41"},{"size":13650,"mtime":1680560076271,"results":"73","hashOfConfig":"41"},{"size":698,"mtime":1680609606390,"results":"74","hashOfConfig":"41"},{"size":708,"mtime":1680559121645,"results":"75","hashOfConfig":"41"},{"size":2606,"mtime":1680639606539,"results":"76","hashOfConfig":"41"},{"size":534,"mtime":1680612022861,"results":"77","hashOfConfig":"41"},{"size":1279,"mtime":1680640300598,"results":"78","hashOfConfig":"41"},{"size":638,"mtime":1680650242024,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"cqavjr",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"83"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"83"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"83"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"83"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\index.js",[],[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\App.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\firebase_setup\\firebase.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\contexts\\AuthContext.js",["206"],[],"import { onAuthStateChanged } from \"firebase/auth\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../firebase_setup/firebase\";\r\nimport { getUserAdditionalData } from \"../services/authService\";\r\n\r\nexport const AuthContext = createContext();\r\nexport const useAuthContext = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(useAuthState(auth));\r\n    // const [userAdditionalData, setUserAdditionalData] = useState({});\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user) => setCurrentUser(user));\r\n\r\n        setIsAdmin(currentUser?.uid === process.env.REACT_APP_ADMIN_UID);\r\n        setLoading(false);\r\n        // getUserAdditionalData\r\n        // .then(result => setUserAdditionalData(result));\r\n\r\n        return unsubscribe;\r\n    }, [currentUser, isAdmin]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ currentUser, loading, isAdmin }}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n\r\n};\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\authService.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\layout\\Header\\Header.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Login\\Login.js",["207"],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Logout\\Logout.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Register\\Register.js",["208"],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Reset\\Reset.js",["209","210","211"],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Home\\Home.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\Hero\\Hero.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Admin\\AddNew\\AddNew.js",["212","213"],[],"import { useState } from 'react';\r\nimport { useAuthContext } from '../../../contexts/AuthContext';\r\nimport { addNewShow } from '../../../services/showsService';\r\nimport styles from '../Admin.module.css';\r\n\r\nexport const AddNew = () => {\r\n    const { isAdmin } = useAuthContext();\r\n    const [values, setValues] = useState({ type: '', title: '', year: 0, desc: '', duration: 0 });\r\n    const [imageList, setImageList] = useState(['']);\r\n    const [actorsList, setActorsList] = useState([{ fullName: '', roleName: '', imageUrl: '', wikiUrl: '' }]);\r\n    const [genreList, setGenreList] = useState(['']);\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'movieImgUrl') {\r\n            const list = [...imageList];\r\n            list[index] = value;\r\n            setImageList(list);\r\n        } else if (name === 'genre') {\r\n            const list = [...genreList];\r\n            list[index] = value;\r\n            setGenreList(list);\r\n        } else {\r\n            const list = [...actorsList];\r\n            list[index][name] = value;\r\n            setActorsList(list);\r\n        }\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = (e, index, inputName) => {\r\n        e.preventDefault();\r\n        if (inputName === 'movie') {\r\n            const list = [...imageList];\r\n            list.splice(index, 1);\r\n            setImageList(list);\r\n        } else if (inputName === 'actor') {\r\n            const list = [...actorsList];\r\n            list.splice(index, 1);\r\n            setActorsList(list);\r\n        } else if (inputName === 'genre') {\r\n            const list = [...genreList];\r\n            list.splice(index, 1);\r\n            setGenreList(list);\r\n        }\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClick = (e, inputName) => {\r\n        e.preventDefault();\r\n        if (inputName === 'movie') {\r\n            setImageList([...imageList, '']);\r\n        } else if (inputName === 'actor') {\r\n            setActorsList([...actorsList, { fullName: '', roleName: '', imageUrl: '', wikiUrl: '' }])\r\n        } else if (inputName === 'genre') {\r\n            setGenreList([...genreList, '']);\r\n        }\r\n    };\r\n\r\n    const handleSimpleInputChange = (e) => {\r\n        setValues(state => ({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        }));\r\n        // console.log(values);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let { type, title, year, desc, duration, director } = values;\r\n        year = Number(year);\r\n        duration = Number(duration);\r\n        const showData = { type, title, year, duration, director, desc, imageList, actorsList, genreList };\r\n        if (type === 'Movie') {\r\n            addNewShow('Movie', showData);\r\n        } else {\r\n            addNewShow('Series', showData);\r\n        }\r\n        console.log(JSON.stringify(showData));\r\n    }\r\n\r\n    return (\r\n        <section action=\"\" className={'form-section'}>\r\n            <h2 className={'heading'}>Add new show</h2>\r\n            <form action=\"\" className={'form'} onSubmit={submitHandler}>\r\n                <div className={'input-box'}>\r\n                    <div className={'label'}>Type of show</div>\r\n                    <div>\r\n                        <input\r\n                            className={'input-radio'}\r\n                            type=\"radio\"\r\n                            id='movie'\r\n                            name='type'\r\n                            defaultValue={'Movie'}\r\n                            onChange={handleSimpleInputChange}\r\n                        />\r\n                        <label htmlFor=\"movie\">Movie</label>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className='input-radio'\r\n                            type=\"radio\"\r\n                            id='series'\r\n                            name='type'\r\n                            defaultValue={'Series'}\r\n                            onChange={handleSimpleInputChange}\r\n                        />\r\n                        <label htmlFor=\"series\">Series</label>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className={'input-box'}>\r\n                    <label className={'label'} htmlFor=\"title\">Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name='title'\r\n                        id='title'\r\n                        className='input'\r\n                        onChange={handleSimpleInputChange}\r\n                    />\r\n                </div>\r\n                <div className={'input-box'}>\r\n                    <label className={'label'} htmlFor=\"year\">Year</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name='year'\r\n                        id='year'\r\n                        className={'input'}\r\n                        onChange={handleSimpleInputChange}\r\n                    />\r\n                </div>\r\n                <div className={'input-box'}>\r\n                    <label className={'label'} htmlFor=\"duration\">Duration</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name='duration'\r\n                        id='duration'\r\n                        className={'input'}\r\n                        onChange={handleSimpleInputChange}\r\n                    />\r\n                </div>\r\n                <div className={'input-box'}>\r\n                    <label className={'label'} htmlFor=\"director\">Director</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name='director'\r\n                        id='director'\r\n                        className={'input'}\r\n                        onChange={handleSimpleInputChange}\r\n                    />\r\n                </div>\r\n                <div className={'input-box'}>\r\n                    <label className={'label'} htmlFor=\"genre\">Genre</label>\r\n                </div>\r\n                {genreList.map((x, i) => {\r\n                    return (\r\n                        <div className=\"input-box\" key={i}>\r\n                            <input\r\n                                className='input'\r\n                                name=\"genre\"\r\n                                value={x}\r\n                                onChange={e => handleInputChange(e, i)}\r\n                            />\r\n\r\n                            <div className=\"btn-box\">\r\n                                {genreList.length !== 1 && <button\r\n                                    className=\"btn\"\r\n                                    onClick={(e) => handleRemoveClick(e, i, 'genre')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                {genreList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'genre')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n\r\n\r\n                <label className={'label'} htmlFor=\"desc\">Description</label>\r\n                <textarea\r\n                    name='desc'\r\n                    id='desc'\r\n                    className={`${'input'} ${'textarea'}`}\r\n                    onChange={handleSimpleInputChange}\r\n                />\r\n                <div className={'images'}>\r\n                    <label className={'label'} htmlFor=\"imgUrl\">Image URL</label>\r\n                    {/* <button onClick={addNewInput} className={`btn`}><i className=\"fa-solid fa-plus\"></i></button> */}\r\n                    {imageList.map((x, i) => {\r\n                        return (\r\n                            <div className=\"box\" key={i}>\r\n                                <input\r\n                                    className={'input'}\r\n                                    name=\"movieImgUrl\"\r\n                                    value={x}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                />\r\n\r\n                                <div className=\"btn-box\">\r\n                                    {imageList.length !== 1 && <button\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => handleRemoveClick(e, i, 'movie')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                    {imageList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'movie')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                    {imageList.join(', ')}\r\n\r\n                    <label className={'label'} htmlFor=\"imgUrl\">Actors</label>\r\n\r\n                    {actorsList.map((x, i) => {\r\n                        return (\r\n                            <div key={i}>\r\n                                <input\r\n                                    className={'input'}\r\n                                    name=\"fullName\"\r\n                                    placeholder=\"Full Name\"\r\n                                    value={x.fullName}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                />\r\n\r\n                                <input\r\n                                    className={'input'}\r\n                                    name=\"roleName\"\r\n                                    placeholder=\"Role Name\"\r\n                                    value={x.roleName}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                />\r\n\r\n                                <input\r\n                                    className={'input'}\r\n                                    name=\"imageUrl\"\r\n                                    placeholder=\"Image URL\"\r\n                                    value={x.imageUrl}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                />\r\n\r\n                                <input\r\n                                    className={'input'}\r\n                                    name=\"wikiUrl\"\r\n                                    placeholder=\"Link to Wikipedia\"\r\n                                    value={x.wikiUrl}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                />\r\n\r\n                                <div className=\"btn-box\">\r\n                                    {actorsList.length !== 1 && <button\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => handleRemoveClick(e, i, 'actor')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                    {actorsList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'actor')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                    {/* {JSON.stringify(actorsList)} */}\r\n\r\n                </div>\r\n                <button className={`btn ${'action-btn'}`}>Submit</button>\r\n            </form>\r\n           \r\n        </section>\r\n    )\r\n};","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\showsService.js",["214","215"],[],"import { addDoc, collection, getDocs, orderBy, query, serverTimestamp, arrayUnion, doc, getDoc, updateDoc, arrayRemove, setDoc, FieldValue, increment, deleteField } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase_setup/firebase\";\r\n\r\n\r\nconst movieCollection = collection(firestore, \"movies\");\r\nconst seriesCollection = collection(firestore, \"series\");\r\n\r\n\r\nexport const addNewShow = async (type, showData) => {\r\n    let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\r\n    try {\r\n        await addDoc(collectionType, {\r\n            ...showData,\r\n            rating: {\r\n                ratingPoints: 0,\r\n                usersRated: []\r\n            },\r\n            createdAt: serverTimestamp()\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nexport const editShow = async (type, showId, showData) => {\r\n    let showType = '';\r\n    if (type === 'Movie') {\r\n        showType = 'movies'\r\n    } else if (type === 'Series') {\r\n        showType = 'series'\r\n    }\r\n    const currentShowRef = doc(firestore, showType, showId);\r\n    try {\r\n\r\n        const result = await updateDoc(currentShowRef, {\r\n            ...showData\r\n        }, { merge: true });\r\n        console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n}\r\n\r\nexport const getAll = async (type) => {\r\n    let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\r\n\r\n    const orderedQuery = query(collectionType, orderBy('createdAt', 'desc'));\r\n    try {\r\n        const result = await getDocs(orderedQuery)\r\n            .then(docs => {\r\n                let arr = [];\r\n\r\n                docs.forEach((doc) => {\r\n                    let fields = doc.data();\r\n\r\n                    arr.push({\r\n                        id: doc.id,\r\n                        fields: fields\r\n                    });\r\n                });\r\n                return arr;\r\n            });\r\n        // console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nexport const getOne = async (showId, type) => {\r\n    let showType = '';\r\n    if (type === 'Movie') {\r\n        showType = 'movies'\r\n    } else if (type === 'Series') {\r\n        showType = 'series'\r\n    }\r\n    const showRef = doc(firestore, showType, showId);\r\n    try {\r\n        const result = await getDoc(showRef);\r\n        const id = result.id;\r\n        const fields = result.data();\r\n        return { id, fields };\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\n\r\nexport const addToWishList = async (type, userId, showId) => {\r\n    const currentUserRef = doc(firestore, 'users', userId);\r\n\r\n    await updateDoc(currentUserRef, {\r\n        watchlist: arrayUnion({ showId, type })\r\n    });\r\n};\r\n\r\nexport const removeFromWatchlist = async (type, userId, showId) => {\r\n    const currentUserRef = doc(firestore, 'users', userId);\r\n    await updateDoc(currentUserRef, {\r\n        watchlist: arrayRemove({ showId, type })\r\n    });\r\n};\r\n\r\nexport const getAllFromWatchlist = async (userId) => {\r\n    const currentUserRef = collection(firestore, 'users');\r\n    try {\r\n        const result = await getDoc(doc(currentUserRef, userId))\r\n        // .then(doc => doc.data().watchlist);\r\n        const userWatchlist = result.data().watchlist;\r\n        return userWatchlist;\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const handleRating = async (action, type, userId, showId, ratePoints, usersRatedCount, oldRatingPoints, userHasRated, currentUserRating) => {\r\n    let showType = '';\r\n    if (type === 'Movie') {\r\n        showType = 'movies'\r\n    } else if (type === 'Series') {\r\n        showType = 'series'\r\n    }\r\n    const currentShowRef = doc(firestore, showType, showId);\r\n    // const result = await getDoc(currentShowRef);\r\n    // const fields = result.data();\r\n    // const oldRatingPoints = fields.rating.ratingPoints;\r\n    // let usersRatedCount = Object.keys(fields.rating.usersRated).length;\r\n    // const currentUserRating = fields.rating.usersRated[userId];\r\n    let newRatingPoints = 0;\r\n\r\n    if (action === 'send') {\r\n        if (userHasRated) {\r\n\r\n            newRatingPoints = ((oldRatingPoints * usersRatedCount) - currentUserRating + ratePoints) / usersRatedCount;\r\n        } else {\r\n            newRatingPoints = ((oldRatingPoints * usersRatedCount) + ratePoints) / (usersRatedCount + 1);\r\n            usersRatedCount++;\r\n        }\r\n\r\n        await setDoc(currentShowRef, { rating: { usersRated: { [userId]: ratePoints }, ratingPoints: newRatingPoints } }, { merge: true });\r\n\r\n    } else if (action === 'remove') {\r\n        console.log(newRatingPoints);\r\n        newRatingPoints = ((oldRatingPoints * usersRatedCount) - currentUserRating) / (usersRatedCount - 1) || 0;\r\n        usersRatedCount--;\r\n\r\n        await setDoc(currentShowRef, { rating: { usersRated: { [userId]: deleteField() }, ratingPoints: newRatingPoints } }, { merge: true });\r\n    }\r\n    return {newRatingPoints, usersRatedCount};\r\n};\r\n\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\NewestMovies\\NewestMovies.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\contexts\\ShowsConext.js",["216","217"],[],"import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { getAll, getAllFromWatchlist, getOne } from \"../services/showsService\";\r\nimport { useAuthContext } from \"./AuthContext\";\r\n\r\nconst ShowsContext = createContext();\r\nexport const useShowsContext = () => useContext(ShowsContext);\r\nexport const ShowsProvider = ({ children }) => {\r\n    const [moviesList, setMoviesList] = useState([]);\r\n    const [seriesList, setSeriesList] = useState([]);\r\n    const [allShowsList, setAllShowsList] = useState([]);\r\n    const [userWatchlist, setUserWatchlist] = useState([]);\r\n    const [watchlist, setWatchlist] = useState([]);\r\n    const { currentUser } = useAuthContext();\r\n    useEffect(() => {\r\n\r\n        getAll('Movie')\r\n            .then(docs => {\r\n                docs.forEach((doc) => {\r\n                    // arr.push({\r\n                    //     id: doc.id,\r\n                    //     fields: doc.fields\r\n                    // });\r\n                    setMoviesList(state => [...state, { id: doc.id, fields: doc.fields }]);\r\n                    console.log(moviesList);\r\n                });\r\n                // setMoviesList(arr);\r\n            });\r\n        getAll('Series')\r\n            .then(docs => {\r\n                docs.forEach((doc) => {\r\n                    // arr.push({\r\n                    //     id: doc.id,\r\n                    //     fields: doc.fields\r\n                    // });\r\n                    setSeriesList(state => [...state, { id: doc.id, fields: doc.fields }]);\r\n                });\r\n                // setMoviesList(arr);\r\n            });\r\n    }, []);\r\n    useEffect(() => {\r\n\r\n        if (currentUser?.uid) {\r\n            getAllFromWatchlist(currentUser.uid)\r\n                .then(result => {\r\n                    setUserWatchlist(result);\r\n                    result.forEach(async (x) => {\r\n                        const show = await getOne(x.showId, x.type);\r\n                        setWatchlist(state => [...state, { id: show.id, fields: show.fields }]);\r\n                    });\r\n                });\r\n        };\r\n\r\n    }, [currentUser?.uid]);\r\n\r\n    useEffect(() => {\r\n        setAllShowsList([...seriesList, ...moviesList]);\r\n    }, [moviesList, seriesList])\r\n\r\n//     useEffect(() => {\r\n// console.log(userWatchlist);\r\n//        userWatchlist.forEach(async (x) => {\r\n//             const show = await getOne(x.showId, x.type);\r\n//             setWatchlist(state => [...state, { id: show.id, fields: show.fields }]);\r\n//             console.log(watchlist);\r\n//         });\r\n\r\n//     }, [userWatchlist]);\r\n\r\n    return <ShowsContext.Provider value={{ moviesList, seriesList, watchlist, setWatchlist, allShowsList }}>\r\n        {children}\r\n    </ShowsContext.Provider>\r\n};","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\shared\\ShowCard\\ShowCard.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\NewestSeries\\NewestSeries.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Watchlist\\Watchlist.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\MoviesCatalog\\MoviesCatalog.js",["218"],[],"import { Link } from \"react-router-dom\";\r\nimport { ShowCard } from \"../../components/shared/ShowCard/ShowCard\";\r\nimport { useShowsContext } from \"../../contexts/ShowsConext\";\r\nimport styles from './MoviesCatalog.module.css';\r\n\r\nexport const MoviesCatalog = () => {\r\n    const { moviesList, watchlist, setWatchlist } = useShowsContext();\r\n\r\n    \r\n    return (\r\n        <section className={styles.section}>\r\n            {/* <div className={styles['title-wrapper']}>\r\n                <h2 className={styles.title}>Browse throw newest movies</h2>\r\n            </div> */}\r\n        <div className={styles.movies}>\r\n            {moviesList.length > 0 ? moviesList.map(x =>\r\n                <ShowCard key={x.id} show={x.fields} id={x.id} watchlist={watchlist} setWatchlist={setWatchlist} />)\r\n                : <p className={'no-results'}>Nothing to show...</p>}\r\n        </div>\r\n    </section>\r\n    );\r\n};","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\parsers.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\SeriesCatalog\\SeriesCatalog.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\ShowDetails\\ShowDetails.js",["219"],[],"import { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\"\r\nimport { CommentSection } from \"../../components/CommentSection/CommentSection\";\r\nimport { RatingModal } from \"../../components/RatingModal/RatingModal\";\r\nimport { useAuthContext } from \"../../contexts/AuthContext\";\r\nimport { getOne, handleRating, sendRating } from \"../../services/showsService\";\r\nimport { durationParser, yearParser } from \"../../utils/parsers\";\r\nimport styles from './ShowDetails.module.css';\r\n\r\nexport const ShowDetails = () => {\r\n    const navigate = useNavigate();\r\n    const { showId, type } = useParams();\r\n    const [show, setShow] = useState({});\r\n    const { currentUser, isAdmin } = useAuthContext();\r\n    const [rateShow, setRateShow] = useState(false);\r\n    const [commentSectionOpen, setCommentSectionOpen] = useState(false);\r\n    const [selectedSlide, setSelectedSlide] = useState(0);\r\n\r\n    const openRateModal = () => {\r\n        if (!currentUser) {\r\n            return navigate('/login');\r\n        }\r\n        setRateShow(true);\r\n    }\r\n    const closeRateModal = () => setRateShow(false);\r\n    const [hasRatedWith, setHasRatedWith] = useState(0);\r\n    const [hasRated, setHasRated] = useState(false);\r\n    const [currentRating, setCurrentRating] = useState(0);\r\n    const [usersRatedCount, setUsersRatedCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getOne(showId, type)\r\n            .then(result => {\r\n                setShow(result.fields);\r\n                setHasRated(result.fields.rating?.usersRated.hasOwnProperty(currentUser?.uid));\r\n                setHasRatedWith(Number(result.fields.rating?.usersRated[currentUser?.uid]));\r\n                setCurrentRating(result.fields.rating.ratingPoints);\r\n                setUsersRatedCount(Object.keys(result.fields.rating.usersRated).length);\r\n            });\r\n        console.log(currentUser);\r\n\r\n    }, [showId, type, currentUser]);\r\n\r\n    const rateShowHandler = (rating) => {\r\n        handleRating('send', type, currentUser.uid, showId, rating, usersRatedCount, currentRating, hasRated, hasRatedWith)\r\n            .then(result => {\r\n                setCurrentRating(result.newRatingPoints);\r\n                setUsersRatedCount(result.usersRatedCount);\r\n            });\r\n        setHasRated(true);\r\n        setHasRatedWith(rating);\r\n        closeRateModal();\r\n    };\r\n\r\n    const removeRateHandler = (rating) => {\r\n        handleRating('remove', type, currentUser.uid, showId, rating, usersRatedCount, currentRating, hasRated, hasRatedWith)\r\n            .then(result => {\r\n                setCurrentRating(result.newRatingPoints);\r\n                setUsersRatedCount(result.usersRatedCount);\r\n            });\r\n        setHasRated(false);\r\n        setHasRatedWith(0);\r\n        closeRateModal();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <RatingModal\r\n                closeRateModal={closeRateModal}\r\n                rateShow={rateShow}\r\n                title={show.title}\r\n                hasRatedWith={hasRatedWith}\r\n                rateShowHandler={rateShowHandler}\r\n                removeRateHandler={removeRateHandler}\r\n            />\r\n\r\n            {show.title &&\r\n                <div className={`${styles['page-wrapper']}`}>\r\n\r\n\r\n                    <div className={styles['background']}>\r\n                        <img src={show.imageList[1]} alt='background' className={styles['bgn-img']} />\r\n                    </div>\r\n                    <div className={styles['sections-wrapper']}>\r\n                        <section className={`${styles['details-section']} width`}>\r\n                            {isAdmin && <Link to={`/${type}/${showId}/edit`}><button className={`${styles.edit} btn`}>Edit</button></Link>}\r\n\r\n                            <div className={styles.header}>\r\n                                <div className={styles['left-side']}>\r\n                                    <h2 className={styles.title}>{show.title}</h2>\r\n                                    <div className={styles['small-info']}>\r\n                                        <p>{show.type}</p>\r\n                                        <i className=\"fa-solid fa-circle\"></i>\r\n                                        <p>{yearParser(show.year)}</p>\r\n                                        <i className=\"fa-solid fa-circle\"></i>\r\n                                        <p>{durationParser(show.duration)}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={styles['rating-wrapper']}>\r\n\r\n                                    <div\r\n                                        className={styles['current-rating']}\r\n                                    >\r\n                                        <p className={styles['rating-label']}>LMDb Rate</p>\r\n                                        <div>\r\n                                            <i className=\"fa-solid fa-star\"></i>\r\n                                            {currentRating === 0 ?\r\n                                                <p className={styles['rating-points']}>No rating yet</p>\r\n                                                : <div className={styles['rating-content']}>\r\n                                                    <p className={styles['rating-points']}>{currentRating} / 10</p>\r\n                                                    <p className={styles['users-rated']}>({usersRatedCount})</p>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div\r\n                                        className={styles['your-rating']}\r\n                                    >\r\n\r\n                                        <p className={styles['rating-label']}>Your Rate</p>\r\n                                        {hasRated ?\r\n                                            <div>\r\n                                                <button onClick={openRateModal}><i className=\"fa-solid fa-star\"></i></button>\r\n                                                <p className={styles['rating-points']}>{hasRatedWith} / 10</p>\r\n                                            </div>\r\n                                            :\r\n                                            <div>\r\n                                                <button onClick={openRateModal}><i className=\"fa-regular fa-star\"></i></button>\r\n                                                <p className={styles['rating-points']}>Rate</p>\r\n                                            </div>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={styles['details-main']}>\r\n                                <div className={styles['img-wrapper']}>\r\n                                    <div className={styles['img-container']}>\r\n                                        <div className={styles.carousel} aria-label=\"Gallery\">\r\n                                            <ol className={styles['carousel__viewport']}>\r\n                                                {show.imageList.map((x, i) => {\r\n                                                    return <li key={i} id={`carousel__slide${i}`}\r\n                                                        tabIndex=\"0\"\r\n                                                        className={styles['carousel__slide']}>\r\n                                                        <div className={styles['carousel__snapper']}>\r\n                                                            <img src={x} alt=\"\" />\r\n                                                        </div>\r\n                                                    </li>\r\n                                                })}\r\n\r\n\r\n                                            </ol>\r\n                                            <aside className={styles['carousel__navigation__sides']}>\r\n                                                <div className={styles['arrows-container']}>\r\n                                                    <a\r\n                                                        title={`Go to previous`}\r\n                                                        href={`#carousel__slide${selectedSlide-1}`}\r\n                                                        className={`${styles['carousel__navigation-arrow']} ${selectedSlide > 0 ? '' : styles['hidden']}`}\r\n                                                        onClick={() => setTimeout(() => setSelectedSlide(currentSlide => currentSlide -1 ), 100)}\r\n                                                        \r\n                                                        >\r\n                                                        <i className=\"fa-solid fa-chevron-left\"></i>\r\n                                                    </a>\r\n                                                    \r\n                                                    <a\r\n                                                        title={`Go to next`}\r\n                                                        href={`#carousel__slide${selectedSlide+1}`}\r\n                                                        className={`${styles['carousel__navigation-arrow']} ${selectedSlide < show.imageList.length -1 ? '' : styles['hidden']}`}\r\n                                                        onClick={() => setTimeout(() => setSelectedSlide(currentSlide => currentSlide + 1), 100)}\r\n                                                    >\r\n                                                        <i className=\"fa-solid fa-chevron-right box-shadow\"></i>\r\n                                                    </a>\r\n                                                    \r\n                                                    \r\n\r\n                                                </div>\r\n                                            </aside>\r\n                                            <aside className={styles['carousel__navigation']}>\r\n                                                <ol className={styles['carousel__navigation-list']}>\r\n                                                    {show.imageList.map((x, i) => {\r\n                                                        return <li key={i} className={styles['carousel__navigation-item']}>\r\n                                                            <a\r\n                                                                title={`Go to slide ${i}`}\r\n                                                                onClick={() => setSelectedSlide(i)}\r\n                                                                href={`#carousel__slide${i}`}\r\n                                                                className={`${styles['carousel__navigation-button']} ${selectedSlide === i ? styles.selected : ''}`}>Go to slide {i}</a>\r\n                                                        </li>\r\n                                                    })}\r\n\r\n                                                </ol>\r\n                                            </aside>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={styles['content']}>\r\n                                    <p className={styles.director}><span>Directer By:</span>{show.director}</p>\r\n                                    <p className={styles.desc}><span>Summary:</span>{show.desc}</p>\r\n                                    <div className={styles.genres}>\r\n                                        {show.genreList.map(x => {\r\n                                            return <span key={x} className={styles.genre}>{x}</span>\r\n                                        })}\r\n                                    </div>\r\n                                    <div className={styles['actor-list']}>\r\n                                        <ul className={styles['actors']}>\r\n                                            {show.actorsList.map(x =>\r\n                                                <li className={`${styles['actor']}`} key={x.fullName}>\r\n                                                    <img className={`${styles['img']} box-shadow`} src={x.imageUrl} alt=\"actor\" />\r\n                                                    <div className={styles['names-container']}>\r\n                                                        <p><span>Actors Name:</span>{x.fullName}</p>\r\n                                                        <p><span>Role Name:</span>{x.roleName}</p>\r\n                                                    </div>\r\n                                                </li>)}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <a href=\"#comment-section\" className=\"link\" onClick={() => setCommentSectionOpen(!commentSectionOpen)}>\r\n                                <div className={styles['title-wrapper']}>\r\n                                    <div className={styles.devider}></div>\r\n                                    <h2 className={styles.title}>Users Reviews</h2>\r\n                                    {commentSectionOpen ? <i className=\"fa-solid fa-angle-up\"></i> : <i className=\"fa-solid fa-angle-down\"></i>}\r\n                                </div>\r\n                            </a>\r\n                            {commentSectionOpen && <CommentSection id='comment-section' showId={showId} />}\r\n\r\n                        </section>\r\n                    </div>\r\n\r\n                </div>}\r\n        </>\r\n    );\r\n};","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\RatingModal\\RatingModal.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentSection.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\commentsService.js",["220","221","222"],[],"import { addDoc, arrayRemove, arrayUnion, collection, deleteDoc, deleteField, doc, getDocs, orderBy, query, serverTimestamp, setDoc, Timestamp, updateDoc, where } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase_setup/firebase\";\r\nimport { getUserAdditionalData } from \"./authService\"\r\n\r\nconst commentCollection = collection(firestore, 'comments');\r\n\r\n\r\nexport const getAllComments = async (showId) => {\r\n    const orderedQuery = query(commentCollection, orderBy('createdAt', 'asc'), where('showId', '==', showId));\r\n    try {\r\n        const result = await getDocs(orderedQuery)\r\n            .then(docs => {\r\n                let arr = [];\r\n\r\n                docs.forEach((doc) => {\r\n                    let fields = doc.data();\r\n\r\n                    arr.push({\r\n                        id: doc.id,\r\n                        fields: { ...fields, createdAt: fields.createdAt.toDate() }\r\n                    });\r\n                });\r\n                return arr;\r\n            });\r\n        // console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nexport const postComment = async (showId, ownerId, commentContent) => {\r\n\r\n    const owner = await getUserAdditionalData(ownerId);\r\n    try {\r\n        const result = await addDoc(commentCollection, {\r\n            showId,\r\n            commentContent,\r\n            likes: [],\r\n            dislikes: [],\r\n            ownerId,\r\n            ownerName: owner.name,\r\n            createdAt: serverTimestamp()\r\n        });\r\n\r\n        return {\r\n            id: result.id, fields: {\r\n                showId,\r\n                commentContent,\r\n                likes: [],\r\n                dislikes: [],\r\n                ownerId,\r\n                ownerName: owner.name,\r\n                createdAt: Date.now()\r\n            }\r\n        };\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\n\r\nexport const updateComment = async (commentId, newContent) => {\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    try {\r\n\r\n        const result = await updateDoc(currentCommentRef, {\r\n           commentContent: newContent\r\n        });\r\n        console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n};\r\n\r\nexport const deleteComment = async (commentId) => {\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    return deleteDoc(currentCommentRef);\r\n};\r\n\r\nexport const sendReaction = async (reaction, commentId, userId) => {\r\n\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    try {\r\n        if (reaction === 'like') {\r\n            await updateDoc(currentCommentRef, {\r\n                likes: arrayUnion(userId)\r\n            });\r\n        } else {\r\n            await updateDoc(currentCommentRef, {\r\n                dislikes: arrayUnion(userId)\r\n            });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n}\r\n\r\nexport const removeReaction = async (reaction, commentId, userId) => {\r\n\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    try {\r\n        if (reaction === 'like') {\r\n            await updateDoc(currentCommentRef, {\r\n                likes: arrayRemove(userId)\r\n            });\r\n        } else {\r\n            await updateDoc(currentCommentRef, {\r\n                dislikes: arrayRemove(userId)\r\n            });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n}","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentItem\\CommentItem.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\timeAgoHadler.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentItem\\DeleteModal\\DeleteModal.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\layout\\Header\\SearchPanel\\SearchPanel.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\filterSearchResults.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Admin\\EditShow\\EditShow.js",["223"],[],"import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { editShow, getOne } from \"../../../services/showsService\";\r\nimport styles from '../Admin.module.css';\r\n\r\n\r\nexport const EditShow = () => {\r\n    const { showId, type } = useParams();\r\n    const [show, setShow] = useState({});\r\n    const [values, setValues] = useState({\r\n        type: '',\r\n        title: '',\r\n        year: 0,\r\n        desc: '',\r\n        duration: 0,\r\n        director: ''\r\n    });\r\n    const [imageList, setImageList] = useState(['']);\r\n    const [actorsList, setActorsList] = useState([{ fullName: '', roleName: '', imageUrl: '', wikiUrl: '' }]);\r\n    const [genreList, setGenreList] = useState(['']);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        getOne(showId, type)\r\n            .then(result => {\r\n                setShow(result.fields);\r\n                setGenreList(result.fields.genreList);\r\n                setActorsList(result.fields.actorsList);\r\n                setImageList(result.fields.imageList);\r\n                setValues({\r\n                    type: result.fields.type,\r\n                    title: result.fields.title,\r\n                    year: result.fields.year,\r\n                    desc: result.fields.desc,\r\n                    duration: result.fields.duration,\r\n                    director: result.fields.director\r\n\r\n                });\r\n            });\r\n\r\n\r\n    }, [showId, type]);\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'movieImgUrl') {\r\n            const list = [...imageList];\r\n            list[index] = value;\r\n            setImageList(list);\r\n        } else if (name === 'genre') {\r\n            const list = [...genreList];\r\n            list[index] = value;\r\n            setGenreList(list);\r\n        } else {\r\n            const list = [...actorsList];\r\n            list[index][name] = value;\r\n            setActorsList(list);\r\n        }\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = (e, index, inputName) => {\r\n        e.preventDefault();\r\n        if (inputName === 'movie') {\r\n            const list = [...imageList];\r\n            list.splice(index, 1);\r\n            setImageList(list);\r\n        } else if (inputName === 'actor') {\r\n            const list = [...actorsList];\r\n            list.splice(index, 1);\r\n            setActorsList(list);\r\n        } else if (inputName === 'genre') {\r\n            const list = [...genreList];\r\n            list.splice(index, 1);\r\n            setGenreList(list);\r\n        }\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClick = (e, inputName) => {\r\n        e.preventDefault();\r\n        if (inputName === 'movie') {\r\n            setImageList([...imageList, '']);\r\n        } else if (inputName === 'actor') {\r\n            setActorsList([...actorsList, { fullName: '', roleName: '', imageUrl: '', wikiUrl: '' }])\r\n        } else if (inputName === 'genre') {\r\n            setGenreList([...genreList, '']);\r\n        }\r\n    };\r\n\r\n    const handleSimpleInputChange = (e) => {\r\n        setValues(state => ({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        }));\r\n        // console.log(values);\r\n    };\r\n\r\n    const editHandler = (e) => {\r\n        e.preventDefault();\r\n        let { type, title, year, desc, duration, director } = values;\r\n        year = Number(year);\r\n        duration = Number(duration);\r\n        const showData = { type, title, year, duration, director, desc, imageList, actorsList, genreList };\r\n        if (type === 'Movie') {\r\n            editShow('Movie', showId, showData);\r\n        } else {\r\n            editShow('Series', showId, showData);\r\n        }\r\n        navigate(`/catalog/${type}/${showId}`);\r\n        console.log(JSON.stringify(showData));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <section action=\"\" className={styles['section']}>\r\n            <h2 className={styles.heading}>Edit show</h2>\r\n            <form action=\"\" className={styles.form} onSubmit={editHandler}>\r\n                <div className={styles['input-box']}>\r\n                    <div className={styles.label}>Type of show</div>\r\n                    <div>\r\n                        <input\r\n                            className={styles['input-radio']}\r\n                            type=\"radio\"\r\n                            id='movie'\r\n                            name='type'\r\n                            onChange={handleSimpleInputChange}\r\n                            checked={values.type === 'Movie'}\r\n\r\n                        />\r\n                        <label htmlFor=\"movie\">Movie</label>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className={styles['input-radio']}\r\n                            type=\"radio\"\r\n                            id='series'\r\n                            name='type'\r\n                            onChange={handleSimpleInputChange}\r\n                            checked={values.type === 'Series'}\r\n\r\n                        />\r\n                        <label htmlFor=\"series\">Series</label>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className={styles['input-box']}>\r\n                    <label className={styles.label} htmlFor=\"title\">Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name='title'\r\n                        id='title'\r\n                        className={styles.input}\r\n                        onChange={handleSimpleInputChange}\r\n                        // defaultValue={show.title}\r\n                        value={values.title}\r\n                        required\r\n\r\n                    />\r\n                    <div className={styles['input-box']}>\r\n                        <label className={styles.label} htmlFor=\"year\">Year</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name='year'\r\n                            id='year'\r\n                            className={styles.input}\r\n                            onChange={handleSimpleInputChange}\r\n                            value={values.year}\r\n                            required\r\n\r\n                        />\r\n                    </div>\r\n                    <div className={styles['input-box']}>\r\n                        <label className={styles.label} htmlFor=\"duration\">Duration</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name='duration'\r\n                            id='duration'\r\n                            className={styles.input}\r\n                            onChange={handleSimpleInputChange}\r\n                            value={values.duration}\r\n                            required\r\n\r\n                        />\r\n                    </div>\r\n                    <div className={styles['input-box']}>\r\n                        <label className={styles.label} htmlFor=\"director\">Director</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name='director'\r\n                            id='director'\r\n                            className={styles.input}\r\n                            onChange={handleSimpleInputChange}\r\n                            value={values.director}\r\n                            required\r\n\r\n                        />\r\n                    </div>\r\n                    <div className={styles['input-box']}>\r\n                        <label className={styles.label} htmlFor=\"genre\">Genre</label>\r\n                    </div>\r\n                    {genreList?.map((x, i) => {\r\n                        return (\r\n                            <div className=\"box\" key={i}>\r\n                                <input\r\n                                    className={styles.input}\r\n                                    name=\"genre\"\r\n                                    value={x}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                    required\r\n\r\n                                />\r\n\r\n                                <div className=\"btn-box\">\r\n                                    {genreList.length !== 1 && <button\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => handleRemoveClick(e, i, 'genre')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                    {genreList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'genre')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n\r\n                    <label className={styles.label} htmlFor=\"desc\">Description</label>\r\n                    <textarea\r\n                        name='desc'\r\n                        id='desc'\r\n                        className={`${styles.input} ${styles.textarea}`}\r\n                        onChange={handleSimpleInputChange}\r\n                        value={values.desc}\r\n                        required\r\n\r\n                    />\r\n                    <div className={styles.images}>\r\n                        <label className={styles.label} htmlFor=\"imgUrl\">Image URL</label>\r\n                        {imageList.map((x, i) => {\r\n                            return (\r\n                                <div className=\"box\" key={i}>\r\n                                    <input\r\n                                        className={styles.input}\r\n                                        name=\"movieImgUrl\"\r\n                                        value={x}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        required\r\n\r\n                                    />\r\n\r\n                                    <div className=\"btn-box\">\r\n                                        {imageList.length !== 1 && <button\r\n                                            className=\"btn\"\r\n                                            onClick={(e) => handleRemoveClick(e, i, 'movie')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                        {imageList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'movie')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        {/* {imageList.join(', ')} */}\r\n\r\n                        <label className={styles.label} htmlFor=\"imgUrl\">Actors</label>\r\n\r\n                        {actorsList.map((x, i) => {\r\n                            return (\r\n                                <div key={i}>\r\n                                    <input\r\n                                        className={styles.input}\r\n                                        name=\"fullName\"\r\n                                        placeholder=\"Full Name\"\r\n                                        defaultValue={x.fullName}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        required\r\n\r\n                                    />\r\n\r\n                                    <input\r\n                                        className={styles.input}\r\n                                        name=\"roleName\"\r\n                                        placeholder=\"Role Name\"\r\n                                        defaultValue={x.roleName}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                    />\r\n\r\n                                    <input\r\n                                        className={styles.input}\r\n                                        name=\"imageUrl\"\r\n                                        placeholder=\"Image URL\"\r\n                                        defaultValue={x.imageUrl}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        required\r\n\r\n                                    />\r\n\r\n                                    <input\r\n                                        className={styles.input}\r\n                                        name=\"wikiUrl\"\r\n                                        placeholder=\"Link to Wikipedia\"\r\n                                        defaultValue={x.wikiUrl}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        required\r\n\r\n                                    />\r\n\r\n                                    <div className=\"btn-box\">\r\n                                        {actorsList.length !== 1 && <button\r\n                                            className=\"btn\"\r\n                                            onClick={(e) => handleRemoveClick(e, i, 'actor')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                        {actorsList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'actor')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <button className={`btn ${styles['submit-btn']}`}>Submit</button>\r\n            </form>\r\n\r\n        </section>\r\n    );\r\n};","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\hooks\\useInput.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\validationFunctions\\showValidation.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Genres\\Genres.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Genres\\GenreCard\\GenreCard.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\GenreCatalog\\GenreCatalog.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\validationFunctions\\validationFunctions.js",[],[],{"ruleId":"224","severity":1,"message":"225","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":31},{"ruleId":"228","severity":1,"message":"229","line":35,"column":8,"nodeType":"230","endLine":35,"endColumn":21,"suggestions":"231"},{"ruleId":"224","severity":1,"message":"232","line":12,"column":27,"nodeType":"226","messageId":"227","endLine":12,"endColumn":32},{"ruleId":"224","severity":1,"message":"232","line":15,"column":21,"nodeType":"226","messageId":"227","endLine":15,"endColumn":26},{"ruleId":"224","severity":1,"message":"233","line":17,"column":23,"nodeType":"226","messageId":"227","endLine":17,"endColumn":35},{"ruleId":"228","severity":1,"message":"234","line":29,"column":8,"nodeType":"230","endLine":29,"endColumn":30,"suggestions":"235"},{"ruleId":"224","severity":1,"message":"236","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":14},{"ruleId":"224","severity":1,"message":"237","line":7,"column":13,"nodeType":"226","messageId":"227","endLine":7,"endColumn":20},{"ruleId":"224","severity":1,"message":"238","line":1,"column":129,"nodeType":"226","messageId":"227","endLine":1,"endColumn":139},{"ruleId":"224","severity":1,"message":"239","line":1,"column":141,"nodeType":"226","messageId":"227","endLine":1,"endColumn":150},{"ruleId":"224","severity":1,"message":"240","line":11,"column":12,"nodeType":"226","messageId":"227","endLine":11,"endColumn":25},{"ruleId":"228","severity":1,"message":"241","line":39,"column":8,"nodeType":"230","endLine":39,"endColumn":10,"suggestions":"242"},{"ruleId":"224","severity":1,"message":"243","line":1,"column":10,"nodeType":"226","messageId":"227","endLine":1,"endColumn":14},{"ruleId":"224","severity":1,"message":"244","line":6,"column":32,"nodeType":"226","messageId":"227","endLine":6,"endColumn":42},{"ruleId":"224","severity":1,"message":"245","line":1,"column":66,"nodeType":"226","messageId":"227","endLine":1,"endColumn":77},{"ruleId":"224","severity":1,"message":"246","line":1,"column":126,"nodeType":"226","messageId":"227","endLine":1,"endColumn":132},{"ruleId":"224","severity":1,"message":"247","line":1,"column":134,"nodeType":"226","messageId":"227","endLine":1,"endColumn":143},{"ruleId":"224","severity":1,"message":"248","line":9,"column":12,"nodeType":"226","messageId":"227","endLine":9,"endColumn":16},"no-unused-vars","'getUserAdditionalData' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loading' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["249"],"'error' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["250"],"'styles' is defined but never used.","'isAdmin' is assigned a value but never used.","'FieldValue' is defined but never used.","'increment' is defined but never used.","'userWatchlist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'moviesList'. Either include it or remove the dependency array.",["251"],"'Link' is defined but never used.","'sendRating' is defined but never used.","'deleteField' is defined but never used.","'setDoc' is defined but never used.","'Timestamp' is defined but never used.","'show' is assigned a value but never used.",{"desc":"252","fix":"253"},{"desc":"252","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [currentUser, loading, navigate]",{"range":"257","text":"258"},{"range":"259","text":"258"},"Update the dependencies array to be: [moviesList]",{"range":"260","text":"261"},[1157,1170],"[currentUser, loading, navigate]",[1088,1110],[1599,1601],"[moviesList]"]