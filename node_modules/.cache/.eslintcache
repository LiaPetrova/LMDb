[{"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\contexts\\AuthContext.js":"4","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Admin\\EditShow\\EditShow.js":"5","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\layout\\Header\\Header.js":"6","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Login\\Login.js":"7","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\guards\\AuthGuard.js":"8","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\contexts\\ShowsConext.js":"9","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Genres\\Genres.js":"10","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Home\\Home.js":"11","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\MoviesCatalog\\MoviesCatalog.js":"12","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\SeriesCatalog\\SeriesCatalog.js":"13","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\ShowDetails\\ShowDetails.js":"14","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\GenreCatalog\\GenreCatalog.js":"15","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\PageNotFound\\PageNotFound.js":"16","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Watchlist\\Watchlist.js":"17","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Admin\\AddNew\\AddNew.js":"18","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Register\\Register.js":"19","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Logout\\Logout.js":"20","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Reset\\Reset.js":"21","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\shared\\Loader\\Loader.js":"22","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\shared\\ShowCard\\ShowCard.js":"23","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\showsService.js":"24","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\parsers.js":"25","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Genres\\GenreCard\\GenreCard.js":"26","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\authService.js":"27","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\shared\\SortDropDown\\SortDropDown.js":"28","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentSection.js":"29","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\RatingModal\\RatingModal.js":"30","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\Hero\\Hero.js":"31","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\NewestMovies\\NewestMovies.js":"32","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\NewestSeries\\NewestSeries.js":"33","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\Top10\\Top10.js":"34","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\firebase_setup\\firebase.js":"35","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\validationFunctions\\validationFunctions.js":"36","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\hooks\\useInput.js":"37","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\renderSortedShows.js":"38","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\commentsService.js":"39","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentItem\\CommentItem.js":"40","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\Top10\\Top10Card\\TopTenCard.js":"41","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\timeAgoHadler.js":"42","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentItem\\DeleteModal\\DeleteModal.js":"43","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\guards\\GuestGuard.js":"44","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\guards\\AdminGuard.js":"45","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\filterSearchResults.js":"46","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\validationFunctions\\validationFunctions.js":"47","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\layout\\Header\\SearchPanel\\SearchPanel.js":"48"},{"size":600,"mtime":1680739548996,"results":"49","hashOfConfig":"50"},{"size":5946,"mtime":1680910092526,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":1678362285368,"results":"52","hashOfConfig":"50"},{"size":1253,"mtime":1680739065933,"results":"53","hashOfConfig":"50"},{"size":13751,"mtime":1680910015698,"results":"54","hashOfConfig":"50"},{"size":8615,"mtime":1680958641171,"results":"55","hashOfConfig":"50"},{"size":3724,"mtime":1680871980177,"results":"56","hashOfConfig":"50"},{"size":448,"mtime":1680873025818,"results":"57","hashOfConfig":"50"},{"size":4243,"mtime":1680905642020,"results":"58","hashOfConfig":"50"},{"size":2639,"mtime":1680909421293,"results":"59","hashOfConfig":"50"},{"size":709,"mtime":1680909631510,"results":"60","hashOfConfig":"50"},{"size":1449,"mtime":1680869116432,"results":"61","hashOfConfig":"50"},{"size":1452,"mtime":1680869162317,"results":"62","hashOfConfig":"50"},{"size":15865,"mtime":1680927351022,"results":"63","hashOfConfig":"50"},{"size":1825,"mtime":1680869149933,"results":"64","hashOfConfig":"50"},{"size":1241,"mtime":1680909881310,"results":"65","hashOfConfig":"50"},{"size":1388,"mtime":1680908567457,"results":"66","hashOfConfig":"50"},{"size":11713,"mtime":1680910014314,"results":"67","hashOfConfig":"50"},{"size":5768,"mtime":1680909184702,"results":"68","hashOfConfig":"50"},{"size":342,"mtime":1680696092219,"results":"69","hashOfConfig":"50"},{"size":3648,"mtime":1680909822799,"results":"70","hashOfConfig":"50"},{"size":933,"mtime":1680868986610,"results":"71","hashOfConfig":"50"},{"size":6823,"mtime":1680923574211,"results":"72","hashOfConfig":"50"},{"size":5302,"mtime":1680874590848,"results":"73","hashOfConfig":"50"},{"size":2119,"mtime":1680871980184,"results":"74","hashOfConfig":"50"},{"size":534,"mtime":1680612022861,"results":"75","hashOfConfig":"50"},{"size":2324,"mtime":1680697500274,"results":"76","hashOfConfig":"50"},{"size":1760,"mtime":1680868961294,"results":"77","hashOfConfig":"50"},{"size":3545,"mtime":1680739958264,"results":"78","hashOfConfig":"50"},{"size":3111,"mtime":1680925214007,"results":"79","hashOfConfig":"50"},{"size":490,"mtime":1680696884323,"results":"80","hashOfConfig":"50"},{"size":1053,"mtime":1680869116431,"results":"81","hashOfConfig":"50"},{"size":1036,"mtime":1680869116431,"results":"82","hashOfConfig":"50"},{"size":2130,"mtime":1680919900792,"results":"83","hashOfConfig":"50"},{"size":725,"mtime":1678702216125,"results":"84","hashOfConfig":"50"},{"size":638,"mtime":1680917672374,"results":"85","hashOfConfig":"50"},{"size":764,"mtime":1680868546600,"results":"86","hashOfConfig":"50"},{"size":1080,"mtime":1680734311391,"results":"87","hashOfConfig":"50"},{"size":3615,"mtime":1680358792770,"results":"88","hashOfConfig":"50"},{"size":7412,"mtime":1680519062461,"results":"89","hashOfConfig":"50"},{"size":750,"mtime":1680900191573,"results":"90","hashOfConfig":"50"},{"size":1688,"mtime":1680300650606,"results":"91","hashOfConfig":"50"},{"size":1278,"mtime":1680364965078,"results":"92","hashOfConfig":"50"},{"size":430,"mtime":1680696846262,"results":"93","hashOfConfig":"50"},{"size":450,"mtime":1680702190339,"results":"94","hashOfConfig":"50"},{"size":227,"mtime":1680364961853,"results":"95","hashOfConfig":"50"},{"size":638,"mtime":1680650242024,"results":"96","hashOfConfig":"50"},{"size":3364,"mtime":1680871330732,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"cqavjr",{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"101"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"101"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"101"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"101"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"101"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"101"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"101"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"101"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\index.js",[],[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\App.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\contexts\\AuthContext.js",["257"],[],"import { onAuthStateChanged } from \"firebase/auth\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../firebase_setup/firebase\";\r\nimport { getUserAdditionalData } from \"../services/authService\";\r\n\r\nexport const AuthContext = createContext();\r\nexport const useAuthContext = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(useAuthState(auth));\r\n    // const [userAdditionalData, setUserAdditionalData] = useState({});\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user) => setCurrentUser(user));\r\n        if(currentUser?.uid) {\r\n            setIsAdmin(currentUser?.uid === process.env.REACT_APP_ADMIN_UID);\r\n            setLoading(false);\r\n        } else {\r\n            setIsAdmin(false);\r\n        }\r\n        return unsubscribe;\r\n    }, [currentUser]);\r\n    \r\n\r\n    return (\r\n        <AuthContext.Provider value={{ currentUser, loading, isAdmin }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n\r\n};\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Admin\\EditShow\\EditShow.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\layout\\Header\\Header.js",["258","259","260"],[],"import { memo, useCallback, useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport logo from '../../../assets/images/logo.png';\r\nimport { useAuthContext } from '../../../contexts/AuthContext';\r\nimport { useShowsContext } from '../../../contexts/ShowsConext';\r\nimport { filterSearchResults } from '../../../utils/filterSearchResults';\r\nimport styles from './Header.module.css';\r\nimport SearchPanel from './SearchPanel/SearchPanel';\r\nlet lastScrollTop = 0;\r\n\r\nconst Header = () => {\r\n\r\n    const { currentUser, isAdmin } = useAuthContext();\r\n    const [headerBgn, setHeaderBgn] = useState(false);\r\n    const [showHeader, setShowHeader] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchPanel, setSearchPanel] = useState(false);\r\n    const [searchResult, setSearchResults] = useState([]);\r\n    const { allShowsList, moviesList, seriesList } = useShowsContext();\r\n    const [type, setType] = useState('All');\r\n    const [hamburgerIsOpen, setHamburgerIsOpen] = useState(false);\r\n\r\n\r\n    const openSearchPanel = useCallback(() => setSearchPanel(true), []);\r\n    const closeSearchPanel = useCallback(() => {\r\n        setSearchPanel(false)\r\n        setSearchTerm('');\r\n    }, []);\r\n\r\n    const changeHandler = useCallback((e) => {\r\n        if (e.target.name === 'type') {\r\n            setType(e.target.value);\r\n        } else {\r\n            setSearchTerm(e.target.value);\r\n        }\r\n        if (e.target.name === 'searchTerm') {\r\n            if (type === 'movies') {\r\n                setSearchResults(filterSearchResults(moviesList, e.target.value));\r\n            } else if (type === 'series') {\r\n                setSearchResults(filterSearchResults(seriesList, e.target.value));\r\n            } else {\r\n                setSearchResults(filterSearchResults(allShowsList, e.target.value));\r\n            }\r\n            openSearchPanel(true);\r\n        }\r\n    }, []);\r\n\r\n    const hamburgerMenuHandler = () => {\r\n        setHamburgerIsOpen(!hamburgerIsOpen);\r\n    };\r\n\r\n\r\n    const changeBackground = useCallback(() => {\r\n        if (window.scrollY >= 120) {\r\n            setHeaderBgn(true)\r\n        } else {\r\n            setHeaderBgn(false)\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    const toggleHeader = useCallback(() => {\r\n        let st = window.pageYOffset || document.documentElement.scrollTop;\r\n        if (st > lastScrollTop) {\r\n            setShowHeader(false);\r\n        } else if (st < lastScrollTop) {\r\n            setShowHeader(true);\r\n        } // else was horizontal scroll\r\n        lastScrollTop = st <= 0 ? 0 : st;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        changeBackground()\r\n        window.addEventListener(\"scroll\", changeBackground);\r\n        window.addEventListener(\"scroll\", toggleHeader);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <header className={`${styles.header} width ${headerBgn ? styles['header-bgn'] : ''} ${showHeader ? '' : styles['header-inactive']}`}>\r\n                <div className={styles.logo}>\r\n                    <Link to='/'><img src={logo} alt=\"\" className={styles[\"logo-img\"]} /></Link>\r\n                </div>\r\n\r\n                <div className={styles.search}>\r\n                    <select className={styles['select']} name=\"type\" id=\"type\" onChange={changeHandler}>\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"movies\">Movies</option>\r\n                        <option value=\"series\">Series</option>\r\n                    </select>\r\n                    <input type=\"text\" value={searchTerm} onChange={changeHandler} name='searchTerm' />\r\n                    <button\r\n                        // onClick={} \r\n                        className={styles['search-btn']}>\r\n                        <i className={`fa-solid fa-magnifying-glass box-shadow`}></i>\r\n\r\n                    </button>\r\n                </div>\r\n\r\n                <div className={styles['hamburger-wrapper']}>\r\n\r\n                    <i \r\n                    className={`${styles.hamburger} ${hamburgerIsOpen ? styles['i-active'] : styles['i-inactive']} fa-solid fa-xmark`} \r\n                    onClick={hamburgerMenuHandler}\r\n                    >\r\n                    </i>\r\n\r\n                    <i \r\n                    onClick={hamburgerMenuHandler} \r\n                    className={`${hamburgerIsOpen ? styles['i-inactive'] : styles['i-active']} fa-solid fa-bars`} \r\n                    ></i>\r\n                    <ul className={`${styles[\"nav-list\"]} ${hamburgerIsOpen ? styles.active : styles.inactive}`}>\r\n                        {isAdmin &&\r\n                            <li className={styles[\"nav-list-item\"]}>\r\n                                <Link to=\"/add\" className={styles.link}>Add</Link>\r\n                            </li>}\r\n                        <li className={styles[\"nav-list-item\"]}>\r\n                            <Link to=\"/movies\" className={styles.link}>Movies</Link>\r\n                        </li>\r\n\r\n                        <li className={styles[\"nav-list-item\"]}>\r\n                            <Link to='/series' className={styles.link}>Series</Link>\r\n                        </li>\r\n                        <li className={styles[\"nav-list-item\"]}>\r\n                            <Link to='/genres' className={styles.link}>Genres</Link>\r\n                        </li>\r\n                        {!currentUser ?\r\n                            <>\r\n                                <li className={styles[\"nav-list-item\"]}>\r\n                                    <Link to='/login' className={styles.link}>Login</Link>\r\n                                </li>\r\n                                <li className={styles[\"nav-list-item\"]}>\r\n                                    <Link to='/register' className={styles.link}>Register</Link>\r\n                                </li>\r\n                            </>\r\n                            : <>\r\n                                <li className={styles[\"nav-list-item\"]}>\r\n                                    <Link to='/watchlist' className={styles.link}>Watchlist</Link>\r\n                                </li>\r\n                                <li className={styles[\"nav-list-item\"]}>\r\n                                    <Link to='/logout' className={styles.link}>Logout</Link>\r\n                                </li>\r\n\r\n                            </>\r\n                        }\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n                <nav className={styles['nav-desctop']}>\r\n                    <ul className={styles[\"nav-list\"]}>\r\n                        {isAdmin &&\r\n                            <li className={styles[\"nav-list-item\"]}>\r\n                                <Link to=\"/add\" className={styles.link}>Add</Link>\r\n                            </li>}\r\n                        <li className={styles[\"nav-list-item\"]}>\r\n                            <Link to=\"/movies\" className={styles.link}>Movies</Link>\r\n                        </li>\r\n\r\n                        <li className={styles[\"nav-list-item\"]}>\r\n                            <Link to='/series' className={styles.link}>Series</Link>\r\n                        </li>\r\n                        <li className={styles[\"nav-list-item\"]}>\r\n                            <Link to='/genres' className={styles.link}>Genres</Link>\r\n                        </li>\r\n                        {!currentUser ?\r\n                            <>\r\n                                <li className={styles[\"nav-list-item\"]}>\r\n                                    <Link to='/login' className={styles.link}>Login</Link>\r\n                                </li>\r\n                                <li className={styles[\"nav-list-item\"]}>\r\n                                    <Link to='/register' className={styles.link}>Register</Link>\r\n                                </li>\r\n                            </>\r\n                            : <>\r\n                                <li className={styles[\"nav-list-item\"]}>\r\n                                    <Link to='/watchlist' className={styles.link}>Watchlist</Link>\r\n                                </li>\r\n                                <li className={styles[\"nav-list-item\"]}>\r\n                                    <Link to='/logout' className={styles.link}>Logout</Link>\r\n                                </li>\r\n\r\n                            </>\r\n                        }\r\n\r\n                    </ul>\r\n                </nav>\r\n\r\n            </header>\r\n            <SearchPanel searchResult={searchResult} closeSearchPanel={closeSearchPanel} searchPanel={searchPanel} />\r\n        </>\r\n\r\n    );\r\n};\r\nexport default memo(Header);","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Login\\Login.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\guards\\AuthGuard.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\contexts\\ShowsConext.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Genres\\Genres.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Home\\Home.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\MoviesCatalog\\MoviesCatalog.js",["261"],[],"import { useCallback, useState } from \"react\";\r\nimport Loader from \"../../components/shared/Loader/Loader\";\r\nimport ShowCard from \"../../components/shared/ShowCard/ShowCard\";\r\nimport SortDropDown from \"../../components/shared/SortDropDown/SortDropDown\";\r\nimport { useShowsContext } from \"../../contexts/ShowsConext\";\r\nimport styles from './MoviesCatalog.module.css';\r\n\r\nexport const MoviesCatalog = () => {\r\n    const { moviesList } = useShowsContext();\r\n    const [end, setEnd] = useState(5);\r\n    const { showsSort } = useShowsContext();\r\n\r\n    const CallBack = useCallback((sortedShows) => {\r\n        return showsSort(sortedShows, 'Movie');\r\n    }, []);\r\n\r\n    return (\r\n        <section className={styles.section}>\r\n            <SortDropDown handleCallBack={CallBack} showsList={moviesList} />\r\n            {/* <div className={styles['title-wrapper']}>\r\n                <h2 className={styles.title}>Browse throw newest movies</h2>\r\n            </div> */}\r\n            <div className={styles.movies}>\r\n                {moviesList.length > 0 ? moviesList.slice(0, end).map(x =>\r\n                    <ShowCard key={x.id} show={x.fields} id={x.id} />)\r\n                    : <Loader />}\r\n            </div>\r\n            {end < moviesList.length &&\r\n                <button className=\"btn action-btn\" onClick={() => setEnd(state => state + 5)} >\r\n                    Load More\r\n                </button>\r\n            }\r\n        </section>\r\n    );\r\n};","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\SeriesCatalog\\SeriesCatalog.js",["262"],[],"import { useCallback, useState } from \"react\";\r\nimport Loader from \"../../components/shared/Loader/Loader\";\r\nimport ShowCard from \"../../components/shared/ShowCard/ShowCard\";\r\nimport SortDropDown from \"../../components/shared/SortDropDown/SortDropDown\";\r\nimport { useShowsContext } from \"../../contexts/ShowsConext\";\r\nimport styles from './SeriesCatalog.module.css';\r\n\r\nexport const SeriesCatalog = () => {\r\n    const { seriesList } = useShowsContext();\r\n    const [end, setEnd] = useState(5);\r\n    const { showsSort } = useShowsContext();\r\n\r\n    const CallBack = useCallback((sortedShows) => {\r\n        return showsSort(sortedShows, 'Series');\r\n    }, []);\r\n\r\n    return (\r\n        <section className={styles.section}>\r\n            {/* <div className={styles['title-wrapper']}>\r\n                <h2 className={styles.title}>Browse throw newest movies</h2>\r\n            </div> */}\r\n            <SortDropDown handleCallBack={CallBack} showsList={seriesList} />\r\n\r\n            <div className={styles.series}>\r\n                {seriesList.length > 0 ? seriesList.slice(0, end).map(x =>\r\n                    <ShowCard key={x.id} show={x.fields} id={x.id} />)\r\n                    : <Loader />}\r\n            </div>\r\n            {end < seriesList.length &&\r\n                <button className=\"btn action-btn\" onClick={() => setEnd(state => state + 5)} >\r\n                    Load More\r\n                </button>\r\n            }\r\n        </section>\r\n    );\r\n};","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\ShowDetails\\ShowDetails.js",["263","264"],["265"],"import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\"\r\nimport { CommentSection } from \"../../components/CommentSection/CommentSection\";\r\nimport RatingModal from \"../../components/RatingModal/RatingModal\";\r\nimport Loader from \"../../components/shared/Loader/Loader\";\r\nimport { useAuthContext } from \"../../contexts/AuthContext\";\r\nimport { useShowsContext } from \"../../contexts/ShowsConext\";\r\nimport { deleteShow, getOne, handleRating } from \"../../services/showsService\";\r\nimport { useParsers } from \"../../utils/parsers\";\r\nimport styles from './ShowDetails.module.css';\r\n\r\nexport const ShowDetails = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const { showId, type } = useParams();\r\n    const [show, setShow] = useState({});\r\n    const { currentUser, isAdmin } = useAuthContext();\r\n    const [rateShow, setRateShow] = useState(false);\r\n    const [commentSectionOpen, setCommentSectionOpen] = useState(false);\r\n    const [selectedSlide, setSelectedSlide] = useState(0);\r\n    const [hasRatedWith, setHasRatedWith] = useState(0);\r\n    const [hasRated, setHasRated] = useState(false);\r\n    const [currentRating, setCurrentRating] = useState(0);\r\n    const [usersRatedCount, setUsersRatedCount] = useState(0);\r\n    const { showEdit, setWatchlist, showDelete } = useShowsContext();\r\n\r\n    const parsers = useParsers();\r\n\r\n\r\n\r\n    const closeRateModal = useCallback(() => setRateShow(false), []);\r\n    const openRateModal = () => {\r\n        if (!currentUser) {\r\n            return navigate('/login');\r\n        }\r\n        setRateShow(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getOne(showId, type)\r\n            .then(result => {\r\n                setShow(result.fields);\r\n                setHasRated(result.fields.rating?.usersRated.hasOwnProperty(currentUser?.uid));\r\n                setHasRatedWith(Number(result.fields.rating?.usersRated[currentUser?.uid]));\r\n                setCurrentRating(result.fields.rating.ratingPoints);\r\n                setUsersRatedCount(Object.keys(result.fields.rating.usersRated).length);\r\n            });\r\n\r\n    }, [showId, type, currentUser]);\r\n\r\n    const rateShowHandler = (rating) => {\r\n        handleRating('send', type, currentUser?.uid, showId, rating, usersRatedCount, currentRating, hasRated, hasRatedWith)\r\n            .then(result => {\r\n                setCurrentRating(result.newRatingPoints);\r\n                setUsersRatedCount(result.usersRatedCount);\r\n                if (type === 'Movie') {\r\n                    showEdit(showId, { id: showId, fields: { ...show, rating: { ratingPoints: result.newRatingPoints } } }, 'Movie');\r\n                } else {\r\n                    showEdit(showId, { id: showId, fields: { ...show, rating: { ratingPoints: result.newRatingPoints } } }, 'Series');\r\n                }\r\n                setWatchlist(state => state.map(x => x.id === showId ? { id: showId, fields: { ...show, rating: { ratingPoints: result.newRatingPoints } } } : x));\r\n            });\r\n        setHasRated(true);\r\n        setHasRatedWith(rating);\r\n        closeRateModal();\r\n\r\n    };\r\n\r\n    const removeRateHandler = (rating) => {\r\n        handleRating('remove', type, currentUser?.uid, showId, rating, usersRatedCount, currentRating, hasRated, hasRatedWith)\r\n            .then(result => {\r\n                setCurrentRating(result.newRatingPoints);\r\n                setUsersRatedCount(result.usersRatedCount);\r\n                if (type === 'Movie') {\r\n                    showEdit(showId, { id: showId, fields: { ...show, rating: { ratingPoints: result.newRatingPoints } } }, 'Movie');\r\n\r\n                } else {\r\n                    showEdit(showId, { id: showId, fields: { ...show, rating: { ratingPoints: result.newRatingPoints } } }, 'Series');\r\n                }\r\n                setWatchlist(state => state.map(x => x.id === showId ? { id: showId, fields: { ...show, rating: { ratingPoints: result.newRatingPoints } } } : x));\r\n            });\r\n        setHasRated(false);\r\n        setHasRatedWith(0);\r\n        closeRateModal();\r\n    };\r\n\r\n    const deleteShowHandler = useCallback(() => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if (confirm(`Are you sure you want to delete ${show.title}`)) {\r\n            deleteShow(showId, type);\r\n            showDelete(showId, type);\r\n            if (type === 'Movie') {\r\n                return navigate('/movies');\r\n            }\r\n            return navigate('/series');\r\n        }\r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <RatingModal\r\n                closeRateModal={closeRateModal}\r\n                rateShow={rateShow}\r\n                title={show.title}\r\n                hasRatedWith={hasRatedWith}\r\n                rateShowHandler={rateShowHandler}\r\n                removeRateHandler={removeRateHandler}\r\n            />\r\n\r\n            {show.title ?\r\n                <div className={`${styles['page-wrapper']}`}>\r\n\r\n\r\n                    <div className={styles['background']}>\r\n                        <img src={show.imageList[1]} alt='background' className={styles['bgn-img']} />\r\n                    </div>\r\n                    <div className={styles['sections-wrapper']}>\r\n                        <section className={`${styles['details-section']} width`}>\r\n                            {isAdmin &&\r\n                                < div className={styles['admin-buttons']}>\r\n                                    <Link to={`/${type}/${showId}/edit`}><button className={`${styles.edit} btn`}>Edit</button></Link>\r\n                                    <button className='btn' onClick={deleteShowHandler}>Delete</button>\r\n                                </div>\r\n                            }\r\n\r\n                            <div className={styles.header}>\r\n                                <div className={styles['left-side']}>\r\n                                    <h2 className={styles.title}>{show.title}</h2>\r\n                                    <div className={styles['small-info']}>\r\n                                        <p>{show.type}</p>\r\n                                        <i className=\"fa-solid fa-circle\"></i>\r\n                                        <p>{parsers.yearParser(show.year)}</p>\r\n                                        <i className=\"fa-solid fa-circle\"></i>\r\n                                        <p>{parsers.durationParser(show.duration)}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={styles['rating-wrapper']}>\r\n\r\n                                    <div\r\n                                        className={styles['current-rating']}\r\n                                    >\r\n                                        <p className={styles['rating-label']}>LMDb Rate</p>\r\n                                        <div>\r\n                                            <i className=\"fa-solid fa-star\"></i>\r\n                                            {currentRating === 0 ?\r\n                                                <p className={styles['rating-points']}>No rating yet</p>\r\n                                                : <div className={styles['rating-content']}>\r\n                                                    <p className={styles['rating-points']}>{currentRating} / 10</p>\r\n                                                    <p className={styles['users-rated']}>({usersRatedCount})</p>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div\r\n                                        className={styles['your-rating']}\r\n                                    >\r\n\r\n                                        <p className={styles['rating-label']}>Your Rate</p>\r\n                                        {hasRated ?\r\n                                            <div>\r\n                                                <button onClick={openRateModal}><i className=\"fa-solid fa-star\"></i></button>\r\n                                                <p className={styles['rating-points']}>{hasRatedWith} / 10</p>\r\n                                            </div>\r\n                                            :\r\n                                            <div>\r\n                                                <button onClick={openRateModal}><i className=\"fa-regular fa-star\"></i></button>\r\n                                                <p className={styles['rating-points']}>Rate</p>\r\n                                            </div>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={styles['details-main']}>\r\n                                <div className={styles['img-wrapper']}>\r\n                                    <div className={styles['img-container']}>\r\n                                        <div className={styles.carousel} aria-label=\"Gallery\">\r\n                                            <ol className={styles['carousel__viewport']}>\r\n                                                {show.imageList.map((x, i) => {\r\n                                                    return <li key={i} id={`carousel__slide${i}`}\r\n                                                        tabIndex=\"0\"\r\n                                                        className={styles['carousel__slide']}>\r\n                                                        <div className={styles['carousel__snapper']}>\r\n                                                            <img src={x} alt=\"\" />\r\n                                                        </div>\r\n                                                    </li>\r\n                                                })}\r\n\r\n\r\n                                            </ol>\r\n                                            <aside className={styles['carousel__navigation__sides']}>\r\n                                                <div className={styles['arrows-container']}>\r\n                                                    <a\r\n                                                        title={`Go to previous`}\r\n                                                        href={`#carousel__slide${selectedSlide - 1}`}\r\n                                                        className={`${styles['carousel__navigation-arrow']} ${selectedSlide > 0 ? '' : styles['hidden']}`}\r\n                                                        onClick={() => setTimeout(() => setSelectedSlide(currentSlide => currentSlide - 1), 100)}\r\n\r\n                                                    >\r\n                                                        <i className=\"fa-solid fa-chevron-left\"></i>\r\n                                                    </a>\r\n\r\n                                                    <a\r\n                                                        title={`Go to next`}\r\n                                                        href={`#carousel__slide${selectedSlide + 1}`}\r\n                                                        className={`${styles['carousel__navigation-arrow']} ${selectedSlide < show.imageList.length - 1 ? '' : styles['hidden']}`}\r\n                                                        onClick={() => setTimeout(() => setSelectedSlide(currentSlide => currentSlide + 1), 100)}\r\n                                                    >\r\n                                                        <i className=\"fa-solid fa-chevron-right box-shadow\"></i>\r\n                                                    </a>\r\n\r\n\r\n\r\n                                                </div>\r\n                                            </aside>\r\n                                            <aside className={styles['carousel__navigation']}>\r\n                                                <ol className={styles['carousel__navigation-list']}>\r\n                                                    {show.imageList.map((x, i) => {\r\n                                                        return <li key={i} className={styles['carousel__navigation-item']}>\r\n                                                            <a\r\n                                                                title={`Go to slide ${i}`}\r\n                                                                onClick={() => setSelectedSlide(i)}\r\n                                                                href={`#carousel__slide${i}`}\r\n                                                                className={`${styles['carousel__navigation-button']} ${selectedSlide === i ? styles.selected : ''}`}>Go to slide {i}</a>\r\n                                                        </li>\r\n                                                    })}\r\n\r\n                                                </ol>\r\n                                            </aside>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={styles['content']}>\r\n                                    <p className={styles.director}><span>Directer By:</span>{show.director}</p>\r\n                                    <p className={styles.desc}><span>Summary:</span>{show.desc}</p>\r\n                                    <div className={styles.genres}>\r\n                                        {show.genreList.map(x => {\r\n                                            return <span key={x} className={styles.genre}>{x}</span>\r\n                                        })}\r\n                                    </div>\r\n                                    <div className={styles['actor-list']}>\r\n                                        <ul className={styles['actors']}>\r\n                                            {show.actorsList.map(x =>\r\n                                                <li className={`${styles['actor']}`} key={x.fullName}>\r\n                                                    <Link to={x.wikiUrl} target=\"_blank\" title=\"See Wikipedia page\">\r\n                                                        <img className={`${styles['img']} box-shadow`} src={x.imageUrl} alt=\"actor\" />\r\n                                                    </Link>\r\n                                                    <div className={styles['names-container']}>\r\n                                                        <p><span>Actors Name:</span>{x.fullName}</p>\r\n                                                        <p><span>Role Name:</span>{x.roleName}</p>\r\n                                                    </div>\r\n                                                </li>)}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <a href=\"#comment-section\" className=\"link\" onClick={() => setCommentSectionOpen(!commentSectionOpen)}>\r\n                                <div className={styles['title-wrapper']}>\r\n                                    <div className={styles.devider}></div>\r\n                                    <h2 className={styles.title}>Users Reviews</h2>\r\n                                    {commentSectionOpen ? <i className=\"fa-solid fa-angle-up\"></i> : <i className=\"fa-solid fa-angle-down\"></i>}\r\n                                </div>\r\n                            </a>\r\n                            {commentSectionOpen && <CommentSection id='comment-section' showId={showId} />}\r\n\r\n                        </section>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                : <Loader />}\r\n        </>\r\n    );\r\n};",[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\GenreCatalog\\GenreCatalog.js",["266"],[],"import { useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ShowCard from '../../components/shared/ShowCard/ShowCard';\r\nimport SortDropDown from '../../components/shared/SortDropDown/SortDropDown';\r\nimport { useShowsContext } from '../../contexts/ShowsConext';\r\nimport styles from './GenresCatalog.module.css';\r\n\r\nexport const GenreCatalog = () => {\r\n    const { allShowsList } = useShowsContext();\r\n    const { genre } = useParams();\r\n    const [filteredShows, setFilteredShows] = useState([]);\r\n    const { showsSort } = useShowsContext();\r\n    const [end, setEnd] = useState(5);\r\n\r\n    useEffect(() => {\r\n        const genreName = `${genre.slice(0, 1).toUpperCase()}${genre.slice(1)}`;\r\n        setFilteredShows(allShowsList.filter(x => x.fields.genreList.includes(genreName)));\r\n    }, [allShowsList, genre]);\r\n\r\n    const CallBack = useCallback((sortedShows) => {\r\n        return showsSort(sortedShows, 'Movie');\r\n    }, []);\r\n    return (\r\n        <section className={styles.section}>\r\n            {/* <div className={styles['title-wrapper']}>\r\n                <h2 className={styles.title}>Browse throw newest movies</h2>\r\n            </div> */}\r\n            <SortDropDown handleCallBack={CallBack} showsList={filteredShows} />\r\n            <div className={styles.shows}>\r\n                {filteredShows.length > 0 ? filteredShows.slice(0, end).map(x =>\r\n                    <ShowCard key={x.id} show={x.fields} id={x.id} />)\r\n                    : <p className={'no-results'}>Nothing to show...</p>}\r\n            </div>\r\n            {end < filteredShows.length &&\r\n                <button className=\"btn action-btn\" onClick={() => setEnd(state => state + 5)} >\r\n                    Load More\r\n                </button>\r\n            }\r\n        </section>\r\n    );\r\n};","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\PageNotFound\\PageNotFound.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Watchlist\\Watchlist.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Admin\\AddNew\\AddNew.js",["267"],[],"import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuthContext } from '../../../contexts/AuthContext';\r\nimport { useShowsContext } from '../../../contexts/ShowsConext';\r\nimport { addNewShow } from '../../../services/showsService';\r\n\r\nconst AddNew = () => {\r\n    const [values, setValues] = useState({ type: '', title: '', year: 0, desc: '', duration: 0 });\r\n    const [imageList, setImageList] = useState(['']);\r\n    const [actorsList, setActorsList] = useState([{ fullName: '', roleName: '', imageUrl: '', wikiUrl: '' }]);\r\n    const [genreList, setGenreList] = useState(['']);\r\n    const navigate = useNavigate();\r\n    const { showAdd } = useShowsContext();\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'movieImgUrl') {\r\n            const list = [...imageList];\r\n            list[index] = value;\r\n            setImageList(list);\r\n        } else if (name === 'genre') {\r\n            const list = [...genreList];\r\n            list[index] = value;\r\n            setGenreList(list);\r\n        } else {\r\n            const list = [...actorsList];\r\n            list[index][name] = value;\r\n            setActorsList(list);\r\n        }\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = (e, index, inputName) => {\r\n        e.preventDefault();\r\n        if (inputName === 'movie') {\r\n            const list = [...imageList];\r\n            list.splice(index, 1);\r\n            setImageList(list);\r\n        } else if (inputName === 'actor') {\r\n            const list = [...actorsList];\r\n            list.splice(index, 1);\r\n            setActorsList(list);\r\n        } else if (inputName === 'genre') {\r\n            const list = [...genreList];\r\n            list.splice(index, 1);\r\n            setGenreList(list);\r\n        }\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClick = (e, inputName) => {\r\n        e.preventDefault();\r\n        if (inputName === 'movie') {\r\n            setImageList([...imageList, '']);\r\n        } else if (inputName === 'actor') {\r\n            setActorsList([...actorsList, { fullName: '', roleName: '', imageUrl: '', wikiUrl: '' }])\r\n        } else if (inputName === 'genre') {\r\n            setGenreList([...genreList, '']);\r\n        }\r\n    };\r\n\r\n    const handleSimpleInputChange = (e) => {\r\n        setValues(state => ({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        }));\r\n        // console.log(values);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let { type, title, year, desc, duration, director } = values;\r\n        year = Number(year);\r\n        duration = Number(duration);\r\n        const showData = { type, title, year, duration, director, desc, imageList, actorsList, genreList };\r\n        if (type === 'Movie') {\r\n            addNewShow('Movie', showData)\r\n                .then(result => {\r\n                    showAdd(result, type);\r\n                });\r\n            navigate(`/movies`);\r\n        } else {\r\n            addNewShow('Series', showData)\r\n                .then(result => {\r\n                    showAdd(result, type);\r\n                });\r\n            navigate(`/series`);\r\n        }\r\n        toast.success(`You added ${title} to the ${type} collection!`)\r\n    }\r\n\r\n    return (\r\n        <section action=\"\" className={'form-section'}>\r\n            <h2 className={'heading'}>Add new show</h2>\r\n            <form action=\"\" className={'form'} onSubmit={submitHandler}>\r\n                <div className={'input-box'}>\r\n                    <div className={'label'}>Type of show</div>\r\n                    <div>\r\n                        <input\r\n                            className={'input-radio'}\r\n                            type=\"radio\"\r\n                            id='movie'\r\n                            name='type'\r\n                            defaultValue={'Movie'}\r\n                            onChange={handleSimpleInputChange}\r\n                        />\r\n                        <label htmlFor=\"movie\">Movie</label>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className='input-radio'\r\n                            type=\"radio\"\r\n                            id='series'\r\n                            name='type'\r\n                            defaultValue={'Series'}\r\n                            onChange={handleSimpleInputChange}\r\n                        />\r\n                        <label htmlFor=\"series\">Series</label>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className={'input-box'}>\r\n                    <label className={'label'} htmlFor=\"title\">Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name='title'\r\n                        id='title'\r\n                        className='input'\r\n                        onChange={handleSimpleInputChange}\r\n                    />\r\n                </div>\r\n                <div className={'input-box'}>\r\n                    <label className={'label'} htmlFor=\"year\">Year</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name='year'\r\n                        id='year'\r\n                        className={'input'}\r\n                        onChange={handleSimpleInputChange}\r\n                    />\r\n                </div>\r\n                <div className={'input-box'}>\r\n                    <label className={'label'} htmlFor=\"duration\">Duration</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name='duration'\r\n                        id='duration'\r\n                        className={'input'}\r\n                        onChange={handleSimpleInputChange}\r\n                    />\r\n                </div>\r\n                <div className={'input-box'}>\r\n                    <label className={'label'} htmlFor=\"director\">Director</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name='director'\r\n                        id='director'\r\n                        className={'input'}\r\n                        onChange={handleSimpleInputChange}\r\n                    />\r\n                </div>\r\n                <div className={'input-box'}>\r\n                    <label className={'label'} htmlFor=\"genre\">Genre</label>\r\n                </div>\r\n                {genreList.map((x, i) => {\r\n                    return (\r\n                        <div className=\"input-box\" key={i}>\r\n                            <input\r\n                                className='input'\r\n                                name=\"genre\"\r\n                                value={x}\r\n                                onChange={e => handleInputChange(e, i)}\r\n                            />\r\n\r\n                            <div className=\"btn-box\">\r\n                                {genreList.length !== 1 && <button\r\n                                    className=\"btn\"\r\n                                    onClick={(e) => handleRemoveClick(e, i, 'genre')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                {genreList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'genre')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n\r\n\r\n                <label className={'label'} htmlFor=\"desc\">Description</label>\r\n                <textarea\r\n                    name='desc'\r\n                    id='desc'\r\n                    className={`${'input'} ${'textarea'}`}\r\n                    onChange={handleSimpleInputChange}\r\n                />\r\n                <div className={'images'}>\r\n                    <label className={'label'} htmlFor=\"imgUrl\">Image URL</label>\r\n                    {imageList.map((x, i) => {\r\n                        return (\r\n                            <div className=\"box\" key={i}>\r\n                                <input\r\n                                    className={'input'}\r\n                                    name=\"movieImgUrl\"\r\n                                    value={x}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                />\r\n\r\n                                <div className=\"btn-box\">\r\n                                    {imageList.length !== 1 && <button\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => handleRemoveClick(e, i, 'movie')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                    {imageList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'movie')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                    <label className={'label'} htmlFor=\"imgUrl\">Actors</label>\r\n\r\n                    {actorsList.map((x, i) => {\r\n                        return (\r\n                            <div key={i}>\r\n                                <input\r\n                                    className={'input'}\r\n                                    name=\"fullName\"\r\n                                    placeholder=\"Full Name\"\r\n                                    value={x.fullName}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                />\r\n\r\n                                <input\r\n                                    className={'input'}\r\n                                    name=\"roleName\"\r\n                                    placeholder=\"Role Name\"\r\n                                    value={x.roleName}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                />\r\n\r\n                                <input\r\n                                    className={'input'}\r\n                                    name=\"imageUrl\"\r\n                                    placeholder=\"Image URL\"\r\n                                    value={x.imageUrl}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                />\r\n\r\n                                <input\r\n                                    className={'input'}\r\n                                    name=\"wikiUrl\"\r\n                                    placeholder=\"Link to Wikipedia\"\r\n                                    value={x.wikiUrl}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n                                />\r\n\r\n                                <div className=\"btn-box\">\r\n                                    {actorsList.length !== 1 && <button\r\n                                        className=\"btn\"\r\n                                        onClick={(e) => handleRemoveClick(e, i, 'actor')}><i className=\"fa-solid fa-minus\"></i></button>}\r\n                                    {actorsList.length - 1 === i && <button className=\"btn\" onClick={(e) => handleAddClick(e, 'actor')}><i className=\"fa-solid fa-plus\"></i></button>}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                    {/* {JSON.stringify(actorsList)} */}\r\n\r\n                </div>\r\n                <button className={`btn ${'action-btn'}`}>Submit</button>\r\n            </form>\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddNew;","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Register\\Register.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Logout\\Logout.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\auth\\Reset\\Reset.js",["268","269"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\r\nimport { auth } from \"../../../firebase_setup/firebase\";\r\nimport { useInput } from \"../../../hooks/useInput\";\r\nimport { sendPasswordReset } from \"../../../services/authService\";\r\nimport validationFunctions from \"../../../utils/validationFunctions/validationFunctions\";\r\nimport styles from './Reset.module.css';\r\n\r\nconst Reset = () => {\r\n    const email = useInput(validationFunctions.emailIsValid);\r\n\r\n    const [loading ] = useAuthState(auth);\r\n    const { currentUser } = useAuthContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [notificationModal, setNotificationModal] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const formIsValid = email.fieldIsValid;\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser?.uid) {\r\n            navigate(\"/\");\r\n        }\r\n    }, [currentUser, loading]);\r\n\r\n    const onPasswordResetHandler = async (e) => {\r\n        e.preventDefault();\r\n        if (formIsValid) {\r\n            await sendPasswordReset(email.value);\r\n            setNotificationModal(true);\r\n        };\r\n    };\r\n\r\n    const closeNotificationModal = () => {\r\n        setNotificationModal(false);\r\n        navigate('/login');\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <section className={`${styles.modal} ${notificationModal ? styles['active'] : styles['inactive']}`} >\r\n                <div className={styles['modal-content']}>\r\n                    <span onClick={closeNotificationModal} className={styles['close']}>&times;</span>\r\n                    <h2 className={styles.title}>Password reset link sent! Check your email!</h2>\r\n\r\n                    <div className={styles['action-btns']}>\r\n                        <button\r\n                            onClick={() => closeNotificationModal()}\r\n                            className={`btn`}\r\n                        >Okey\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"form-section auth\">\r\n                <form className=\"form\" onSubmit={onPasswordResetHandler}>\r\n                    <h2 className={'heading'}>Reset Password</h2>\r\n                    <div className={'input-box'}>\r\n                        {/* <label className={'label'} htmlFor=\"email\">Email</label> */}\r\n                        {email.hasError && <p className={'alert'}>Email should be valid!</p>}\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`input ${email.hasError && 'input-alert'}`}\r\n                            value={email.value}\r\n                            onChange={email.onChange}\r\n                            onBlur={email.onBlur}\r\n                            placeholder=\"E-mail Address\"\r\n                            id=\"email\"\r\n                        />\r\n                    </div>\r\n\r\n                    <button\r\n                        disabled={!formIsValid || isLoading}\r\n                        className={`btn action-btn reset-pass`}\r\n                    >\r\n                        Send password reset email\r\n                    </button>\r\n                </form>\r\n                <div className=\"link anchor\">\r\n                    Don't have an account? <Link className=\"link\" to=\"/register\">Register</Link> now.\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reset;\r\n","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\shared\\Loader\\Loader.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\shared\\ShowCard\\ShowCard.js",["270","271"],[],"import { Link } from 'react-router-dom';\r\nimport { useAuthContext } from '../../../contexts/AuthContext';\r\nimport styles from './ShowCard.module.css';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { addToWishList, removeFromWatchlist } from '../../../services/showsService';\r\nimport { useParsers } from '../../../utils/parsers';\r\nimport { toast } from 'react-toastify';\r\nimport { useShowsContext } from '../../../contexts/ShowsConext';\r\nimport { useCallback } from 'react';\r\nimport {memo} from 'react';\r\n\r\nconst ShowCard = ({ show, id, page }) => {\r\n\r\n    const parsers = useParsers();\r\n    const { watchlist, setWatchlist } = useShowsContext();\r\n    const { currentUser } = useAuthContext();\r\n    const navigate = useNavigate();\r\n\r\n    console.log('raboti');\r\n\r\n    const isAdded = watchlist?.some(x => x.id === id);\r\n\r\n    const addToWatchListHandler = useCallback(() => {\r\n        if (!currentUser) {\r\n            toast.error('You need to be logged in to do that!')\r\n            return navigate('/login');\r\n        }\r\n        addToWishList(show.type, currentUser.uid, id);\r\n        setWatchlist(state => [...state, { fields: show, id: id }]);\r\n        toast.success(`You added ${show.title} to your watchlist!`);\r\n    }, []);\r\n\r\n    const removeFromWatchlistHandler = useCallback(() => {\r\n        removeFromWatchlist(show.type, currentUser.uid, id);\r\n        setWatchlist(state => state.filter(x => x.id !== id));\r\n        toast.info(`You removed ${show.title} from your     !`);\r\n\r\n    }, []);\r\n    return (\r\n        <>\r\n            {show && <article\r\n                className={page === 'Home' ?\r\n                    styles['home-card-wrapper']\r\n                    : styles['catalog-card-wrapper']\r\n                }\r\n            >\r\n\r\n                <Link className='link' to={`/catalog/${show.type}/${id}`}>\r\n\r\n                    <div\r\n                        className={page === 'Home' ?\r\n                            styles['home-card']\r\n                            : styles['catalog-card']\r\n                        }\r\n                    >\r\n\r\n                        <div\r\n                            className={page === 'Home' ?\r\n                                styles['home-img-container']\r\n                                : styles['catalog-img-container']\r\n                            }\r\n                        >\r\n                            <img src={show.imageList[0]} alt=\"show\" />\r\n                        </div>\r\n                        <div\r\n                            className={page === 'Home' ?\r\n                                styles['home-content']\r\n                                : styles['catalog-content']\r\n                            }\r\n                        >\r\n\r\n                            <div className={page === 'Home' ?\r\n                                styles['home-show-info']\r\n                                : styles['catalog-show-info']\r\n                            }>\r\n                                <div className={page === 'Home' ? '' : styles['title-wrapper']}>\r\n                                    <p\r\n                                        className={page === 'Home' ?\r\n                                            styles['home-title']\r\n                                            : styles['catalog-title']\r\n                                        }\r\n                                    >{show.title}</p>\r\n\r\n\r\n                                    <p\r\n                                        className={page === 'Home' ?\r\n                                            styles['home-year']\r\n                                            : styles['catalog-year']\r\n                                        }\r\n                                    >{parsers.yearParser(show.year)}</p>\r\n\r\n\r\n                                </div>\r\n                                {page !== 'Home' &&\r\n                                    <p className={styles.duration}>\r\n                                        {parsers.durationParser(show.duration)}\r\n                                    </p>}\r\n                                <div\r\n                                    className={page === 'Home' ?\r\n                                        styles['home-rating']\r\n                                        : styles['catalog-rating']\r\n                                    }\r\n                                >\r\n                                    <i className=\"fa-solid fa-star\"></i>\r\n                                    {show.rating.ratingPoints === 0 ?\r\n                                        <p className={page === 'Home' ?\r\n                                            styles['home-rating-points']\r\n                                            : styles['catalog-rating-points']\r\n                                        }>No rating yet</p>\r\n                                        : <p className={page === 'Home' ?\r\n                                            styles['home-rating-points']\r\n                                            : styles['catalog-rating-points']\r\n                                        }>{show.rating.ratingPoints} / 10</p>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                                {page !== 'Home' &&\r\n                                    <div className={styles.genres}>\r\n                                        {show.genreList.map(x => {\r\n                                            return <span key={x} className={styles.genre}>{x}</span>\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n\r\n                                {page !== 'Home' &&\r\n                                    <div className={styles.desc}>{parsers.textShortener(show.desc)}</div>\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                {isAdded ?\r\n                    // <i className={`${styles.add} fa-solid fa-bookmark`}></i> \r\n                    <button\r\n                        onClick={removeFromWatchlistHandler}\r\n                        className={page === 'Home' ?\r\n                            styles['home-remove']\r\n                            : styles['catalog-remove']\r\n                        }\r\n                    ><i className=\"fa-solid fa-minus\"></i>\r\n                    </button>\r\n                    : <button\r\n                        onClick={addToWatchListHandler}\r\n                        className={page === 'Home' ?\r\n                            styles['home-add']\r\n                            : styles['catalog-add']\r\n                        }><i className=\"fa-solid fa-plus\"></i>\r\n                    </button>\r\n                }\r\n            </article>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(ShowCard);","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\showsService.js",["272","273"],[],"import { addDoc, collection, getDocs, orderBy, query, serverTimestamp, arrayUnion, doc, getDoc, updateDoc, arrayRemove, setDoc, FieldValue, increment, deleteField, deleteDoc } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase_setup/firebase\";\r\n\r\n\r\nconst movieCollection = collection(firestore, \"movies\");\r\nconst seriesCollection = collection(firestore, \"series\");\r\n\r\n\r\nexport const addNewShow = async (type, showData) => {\r\n    let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\r\n    try {\r\n        const data = {\r\n            ...showData,\r\n            rating: {\r\n                ratingPoints: 0,\r\n                usersRated: []\r\n            },\r\n            createdAt: serverTimestamp()\r\n        };\r\n       const result =  await addDoc(collectionType, data);\r\n\r\n        return {id: result.id, fields: data};\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\n\r\nexport const getAll = async (type) => {\r\n    let collectionType = type === 'Movie' ? movieCollection : seriesCollection;\r\n\r\n    const orderedQuery = query(collectionType, orderBy('createdAt', 'desc'));\r\n    try {\r\n        const result = await getDocs(orderedQuery)\r\n            .then(docs => {\r\n                let arr = [];\r\n\r\n                docs.forEach((doc) => {\r\n                    let fields = doc.data();\r\n\r\n                    arr.push({\r\n                        id: doc.id,\r\n                        fields: fields\r\n                    });\r\n                });\r\n                return arr;\r\n            });\r\n        // console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\n\r\nexport const editShow = async (type, showId, showData) => {\r\n    let showType = '';\r\n    if (type === 'Movie') {\r\n        showType = 'movies'\r\n    } else if (type === 'Series') {\r\n        showType = 'series'\r\n    }\r\n    const currentShowRef = doc(firestore, showType, showId);\r\n    try {\r\n\r\n        const result = await updateDoc(currentShowRef, {\r\n            ...showData\r\n        });\r\n        console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nexport const deleteShow = async (showId, type) => {\r\n    let showType = '';\r\n    if (type === 'Movie') {\r\n        showType = 'movies'\r\n    } else if (type === 'Series') {\r\n        showType = 'series'\r\n    }\r\n    const currentShowRef = doc(firestore, showType, showId);\r\n    return await deleteDoc(currentShowRef);\r\n};\r\n\r\nexport const getOne = async (showId, type) => {\r\n    let showType = '';\r\n    if (type === 'Movie') {\r\n        showType = 'movies'\r\n    } else if (type === 'Series') {\r\n        showType = 'series'\r\n    }\r\n    const showRef = doc(firestore, showType, showId);\r\n    try {\r\n        const result = await getDoc(showRef);\r\n        const id = result.id;\r\n        const fields = result.data();\r\n        return { id, fields };\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\n\r\nexport const addToWishList = async (type, userId, showId) => {\r\n    const currentUserRef = doc(firestore, 'users', userId);\r\n\r\n    await updateDoc(currentUserRef, {\r\n        watchlist: arrayUnion({ showId, type })\r\n    });\r\n};\r\n\r\nexport const removeFromWatchlist = async (type, userId, showId) => {\r\n    const currentUserRef = doc(firestore, 'users', userId);\r\n    await updateDoc(currentUserRef, {\r\n        watchlist: arrayRemove({ showId, type })\r\n    });\r\n};\r\n\r\nexport const getAllFromWatchlist = async (userId) => {\r\n    const currentUserRef = collection(firestore, 'users');\r\n    try {\r\n        const result = await getDoc(doc(currentUserRef, userId))\r\n        // .then(doc => doc.data().watchlist);\r\n        const userWatchlist = result.data().watchlist;\r\n        return userWatchlist;\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const handleRating = async (action, type, userId, showId, ratePoints, usersRatedCount, oldRatingPoints, userHasRated, currentUserRating) => {\r\n    let showType = '';\r\n    if (type === 'Movie') {\r\n        showType = 'movies'\r\n    } else if (type === 'Series') {\r\n        showType = 'series'\r\n    }\r\n    const currentShowRef = doc(firestore, showType, showId);\r\n\r\n    let newRatingPoints = 0;\r\n\r\n    if (action === 'send') {\r\n        if (userHasRated) {\r\n\r\n            newRatingPoints = ((oldRatingPoints * usersRatedCount) - currentUserRating + ratePoints) / usersRatedCount;\r\n        } else {\r\n            newRatingPoints = ((oldRatingPoints * usersRatedCount) + ratePoints) / (usersRatedCount + 1);\r\n            usersRatedCount++;\r\n        }\r\n\r\n        await setDoc(currentShowRef, { rating: { usersRated: { [userId]: ratePoints }, ratingPoints: newRatingPoints } }, { merge: true });\r\n\r\n    } else if (action === 'remove') {\r\n        console.log(newRatingPoints);\r\n        newRatingPoints = ((oldRatingPoints * usersRatedCount) - currentUserRating) / (usersRatedCount - 1) || 0;\r\n        usersRatedCount--;\r\n\r\n        await setDoc(currentShowRef, { rating: { usersRated: { [userId]: deleteField() }, ratingPoints: newRatingPoints } }, { merge: true });\r\n    }\r\n    return {newRatingPoints, usersRatedCount};\r\n};\r\n\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\parsers.js",["274"],[],"import { useCallback } from \"react\";\r\n\r\n// export const useParsers = () => {\r\n//     const durationParser = useCallback((time) => {\r\n//         const minute = 1;\r\n//         const hour = 60 * minute;\r\n    \r\n//         if(time / hour >= 1) {\r\n//             return `${Math.floor(time/hour)}h ${time%hour}m`;\r\n//         } else {\r\n//             return `${time%hour}m`;\r\n//         }\r\n//     }, []);\r\n    \r\n//     const textShortener = useCallback((text) => {\r\n//         if(text.length > 367) {\r\n//             return `${text.slice(0, 366)}...`\r\n//         } else {\r\n//             return text;\r\n//         }\r\n//     }, []);\r\n    \r\n//     const yearParser = useCallback((number) => {\r\n//         if(number.toString().length === 4) {\r\n//             return number;\r\n//         } else {\r\n//             return `(${number.toString().slice(0, 4)} - ${number.toString().slice(4)})`;\r\n//         }\r\n//     }, []);\r\n\r\n//     return {\r\n//         durationParser,\r\n//         textShortener,\r\n//         yearParser\r\n//     }\r\n// };\r\n\r\nexport const useParsers = (() => {\r\n    const durationParser = (time) => {\r\n                const minute = 1;\r\n                const hour = 60 * minute;\r\n            \r\n                if(time / hour >= 1) {\r\n                    return `${Math.floor(time/hour)}h ${time%hour}m`;\r\n                } else {\r\n                    return `${time%hour}m`;\r\n                }\r\n            };\r\n            \r\n            const textShortener = (text) => {\r\n                if(text.length > 367) {\r\n                    return `${text.slice(0, 366)}...`\r\n                } else {\r\n                    return text;\r\n                }\r\n            };\r\n            \r\n            const yearParser = (number) => {\r\n                if(number.toString().length === 4) {\r\n                    return number;\r\n                } else {\r\n                    return `(${number.toString().slice(0, 4)} - ${number.toString().slice(4)})`;\r\n                }\r\n            };\r\n        \r\n            return {\r\n                durationParser,\r\n                textShortener,\r\n                yearParser\r\n            }\r\n});\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\pages\\Genres\\GenreCard\\GenreCard.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\authService.js",["275"],[],"import { createUserWithEmailAndPassword, GoogleAuthProvider, sendPasswordResetEmail, signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getDocs, query, setDoc, where } from 'firebase/firestore';\r\nimport { toast } from 'react-toastify';\r\nimport { auth, firestore } from '../firebase_setup/firebase';\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst registerWithGoogle = async () => {\r\n    try {\r\n        const res = await signInWithPopup(auth, googleProvider);\r\n        const user = res.user;\r\n        const q = query(collection(firestore, \"users\"), where(\"uid\", \"==\", user.uid));\r\n        const docs = await getDocs(q);\r\n        if (docs.docs.length === 0) {\r\n            await addDoc(collection(firestore, \"users\"), {\r\n                uid: user.uid,\r\n                name: user.displayName,\r\n                authProvider: \"google\",\r\n                email: user.email,\r\n            });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst logIn = async (email, password) => {\r\n    await signInWithEmailAndPassword(auth, email, password);\r\n\r\n};\r\nconst registerWithEmail = async (name, email, password) => {\r\n        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = res.user;\r\n        const uid = user.uid;\r\n        await setDoc(doc(firestore, \"users\", uid), {\r\n            name,\r\n            authProvider: \"local\",\r\n            email,\r\n            watchlist: []\r\n        });\r\n};\r\nconst sendPasswordReset = async (email) => {\r\n    try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        // alert(\"Password reset link sent!\");\r\n    } catch (err) {\r\n        console.error(err);\r\n        // alert(err.message);\r\n    }\r\n};\r\nconst logout = async () => {\r\n    await signOut(auth);\r\n};\r\n\r\nconst getUserAdditionalData = async (userId) => {\r\n    const userRef = doc(firestore, 'users', userId);\r\n    try {\r\n        const result = await getDoc(userRef);\r\n        const fields = result.data();\r\n        return fields;\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nexport {\r\n    registerWithGoogle,\r\n    logIn,\r\n    registerWithEmail,\r\n    sendPasswordReset,\r\n    logout,\r\n    getUserAdditionalData\r\n};","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\shared\\SortDropDown\\SortDropDown.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentSection.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\RatingModal\\RatingModal.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\Hero\\Hero.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\NewestMovies\\NewestMovies.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\NewestSeries\\NewestSeries.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\Top10\\Top10.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\firebase_setup\\firebase.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\validationFunctions\\validationFunctions.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\hooks\\useInput.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\renderSortedShows.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\services\\commentsService.js",["276","277","278"],[],"import { addDoc, arrayRemove, arrayUnion, collection, deleteDoc, deleteField, doc, getDocs, orderBy, query, serverTimestamp, setDoc, Timestamp, updateDoc, where } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase_setup/firebase\";\r\nimport { getUserAdditionalData } from \"./authService\"\r\n\r\nconst commentCollection = collection(firestore, 'comments');\r\n\r\n\r\nexport const getAllComments = async (showId) => {\r\n    const orderedQuery = query(commentCollection, orderBy('createdAt', 'asc'), where('showId', '==', showId));\r\n    try {\r\n        const result = await getDocs(orderedQuery)\r\n            .then(docs => {\r\n                let arr = [];\r\n\r\n                docs.forEach((doc) => {\r\n                    let fields = doc.data();\r\n\r\n                    arr.push({\r\n                        id: doc.id,\r\n                        fields: { ...fields, createdAt: fields.createdAt.toDate() }\r\n                    });\r\n                });\r\n                return arr;\r\n            });\r\n        // console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nexport const postComment = async (showId, ownerId, commentContent) => {\r\n\r\n    const owner = await getUserAdditionalData(ownerId);\r\n    try {\r\n        const result = await addDoc(commentCollection, {\r\n            showId,\r\n            commentContent,\r\n            likes: [],\r\n            dislikes: [],\r\n            ownerId,\r\n            ownerName: owner.name,\r\n            createdAt: serverTimestamp()\r\n        });\r\n\r\n        return {\r\n            id: result.id, fields: {\r\n                showId,\r\n                commentContent,\r\n                likes: [],\r\n                dislikes: [],\r\n                ownerId,\r\n                ownerName: owner.name,\r\n                createdAt: Date.now()\r\n            }\r\n        };\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\n\r\nexport const updateComment = async (commentId, newContent) => {\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    try {\r\n\r\n        const result = await updateDoc(currentCommentRef, {\r\n           commentContent: newContent\r\n        });\r\n        console.log(result);\r\n        return result;\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n};\r\n\r\nexport const deleteComment = async (commentId) => {\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    return deleteDoc(currentCommentRef);\r\n};\r\n\r\nexport const sendReaction = async (reaction, commentId, userId) => {\r\n\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    try {\r\n        if (reaction === 'like') {\r\n            await updateDoc(currentCommentRef, {\r\n                likes: arrayUnion(userId)\r\n            });\r\n        } else {\r\n            await updateDoc(currentCommentRef, {\r\n                dislikes: arrayUnion(userId)\r\n            });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n}\r\n\r\nexport const removeReaction = async (reaction, commentId, userId) => {\r\n\r\n    const currentCommentRef = doc(firestore, 'comments', commentId);\r\n    try {\r\n        if (reaction === 'like') {\r\n            await updateDoc(currentCommentRef, {\r\n                likes: arrayRemove(userId)\r\n            });\r\n        } else {\r\n            await updateDoc(currentCommentRef, {\r\n                dislikes: arrayRemove(userId)\r\n            });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n\r\n}","C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentItem\\CommentItem.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\Home\\Top10\\Top10Card\\TopTenCard.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\timeAgoHadler.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\CommentSection\\CommentItem\\DeleteModal\\DeleteModal.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\guards\\GuestGuard.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\guards\\AdminGuard.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\filterSearchResults.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\utils\\validationFunctions\\validationFunctions.js",[],[],"C:\\Users\\User\\Desktop\\Final PRoject -LMDb\\lmdb\\src\\components\\layout\\Header\\SearchPanel\\SearchPanel.js",[],[],{"ruleId":"279","severity":1,"message":"280","line":5,"column":10,"nodeType":"281","messageId":"282","endLine":5,"endColumn":31},{"ruleId":"279","severity":1,"message":"283","line":2,"column":16,"nodeType":"281","messageId":"282","endLine":2,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":46,"column":8,"nodeType":"286","endLine":46,"endColumn":10,"suggestions":"287"},{"ruleId":"284","severity":1,"message":"288","line":77,"column":8,"nodeType":"286","endLine":77,"endColumn":10,"suggestions":"289"},{"ruleId":"284","severity":1,"message":"290","line":15,"column":8,"nodeType":"286","endLine":15,"endColumn":10,"suggestions":"291"},{"ruleId":"284","severity":1,"message":"290","line":15,"column":8,"nodeType":"286","endLine":15,"endColumn":10,"suggestions":"292"},{"ruleId":"279","severity":1,"message":"293","line":1,"column":34,"nodeType":"281","messageId":"282","endLine":1,"endColumn":41},{"ruleId":"284","severity":1,"message":"294","line":99,"column":8,"nodeType":"286","endLine":99,"endColumn":10,"suggestions":"295"},{"ruleId":"296","severity":2,"message":"297","line":89,"column":13,"nodeType":"281","messageId":"298","endLine":89,"endColumn":20,"suppressions":"299"},{"ruleId":"284","severity":1,"message":"290","line":22,"column":8,"nodeType":"286","endLine":22,"endColumn":10,"suggestions":"300"},{"ruleId":"279","severity":1,"message":"301","line":4,"column":10,"nodeType":"281","messageId":"282","endLine":4,"endColumn":24},{"ruleId":"279","severity":1,"message":"302","line":17,"column":23,"nodeType":"281","messageId":"282","endLine":17,"endColumn":35},{"ruleId":"284","severity":1,"message":"303","line":29,"column":8,"nodeType":"286","endLine":29,"endColumn":30,"suggestions":"304"},{"ruleId":"284","severity":1,"message":"305","line":31,"column":8,"nodeType":"286","endLine":31,"endColumn":10,"suggestions":"306"},{"ruleId":"284","severity":1,"message":"307","line":38,"column":8,"nodeType":"286","endLine":38,"endColumn":10,"suggestions":"308"},{"ruleId":"279","severity":1,"message":"309","line":1,"column":129,"nodeType":"281","messageId":"282","endLine":1,"endColumn":139},{"ruleId":"279","severity":1,"message":"310","line":1,"column":141,"nodeType":"281","messageId":"282","endLine":1,"endColumn":150},{"ruleId":"279","severity":1,"message":"311","line":1,"column":10,"nodeType":"281","messageId":"282","endLine":1,"endColumn":21},{"ruleId":"279","severity":1,"message":"312","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":15},{"ruleId":"279","severity":1,"message":"313","line":1,"column":66,"nodeType":"281","messageId":"282","endLine":1,"endColumn":77},{"ruleId":"279","severity":1,"message":"314","line":1,"column":126,"nodeType":"281","messageId":"282","endLine":1,"endColumn":132},{"ruleId":"279","severity":1,"message":"315","line":1,"column":134,"nodeType":"281","messageId":"282","endLine":1,"endColumn":143},"no-unused-vars","'getUserAdditionalData' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'allShowsList', 'moviesList', 'openSearchPanel', 'seriesList', and 'type'. Either include them or remove the dependency array.","ArrayExpression",["316"],"React Hook useEffect has missing dependencies: 'changeBackground' and 'toggleHeader'. Either include them or remove the dependency array.",["317"],"React Hook useCallback has a missing dependency: 'showsSort'. Either include it or remove the dependency array.",["318"],["319"],"'useMemo' is defined but never used.","React Hook useCallback has missing dependencies: 'navigate', 'show.title', 'showDelete', 'showId', and 'type'. Either include them or remove the dependency array.",["320"],"no-restricted-globals","Unexpected use of 'confirm'.","defaultMessage",["321"],["322"],"'useAuthContext' is defined but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["323"],"React Hook useCallback has missing dependencies: 'currentUser', 'id', 'navigate', 'setWatchlist', and 'show'. Either include them or remove the dependency array.",["324"],"React Hook useCallback has missing dependencies: 'currentUser.uid', 'id', 'setWatchlist', 'show.title', and 'show.type'. Either include them or remove the dependency array.",["325"],"'FieldValue' is defined but never used.","'increment' is defined but never used.","'useCallback' is defined but never used.","'toast' is defined but never used.","'deleteField' is defined but never used.","'setDoc' is defined but never used.","'Timestamp' is defined but never used.",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"330","fix":"332"},{"desc":"333","fix":"334"},{"kind":"335","justification":"336"},{"desc":"330","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [allShowsList, moviesList, openSearchPanel, seriesList, type]",{"range":"344","text":"345"},"Update the dependencies array to be: [changeBackground, toggleHeader]",{"range":"346","text":"347"},"Update the dependencies array to be: [showsSort]",{"range":"348","text":"349"},{"range":"350","text":"349"},"Update the dependencies array to be: [navigate, show.title, showDelete, showId, type]",{"range":"351","text":"352"},"directive","",{"range":"353","text":"349"},"Update the dependencies array to be: [currentUser, loading, navigate]",{"range":"354","text":"355"},"Update the dependencies array to be: [currentUser, id, navigate, setWatchlist, show]",{"range":"356","text":"357"},"Update the dependencies array to be: [currentUser.uid, id, setWatchlist, show.title, show.type]",{"range":"358","text":"359"},[1936,1938],"[allShowsList, moviesList, openSearchPanel, seriesList, type]",[2791,2793],"[changeBackground, toggleHeader]",[652,654],"[showsSort]",[653,655],[4507,4509],"[navigate, show.title, showDelete, showId, type]",[979,981],[1081,1103],"[currentUser, loading, navigate]",[1234,1236],"[currentUser, id, navigate, setWatchlist, show]",[1503,1505],"[currentUser.uid, id, setWatchlist, show.title, show.type]"]